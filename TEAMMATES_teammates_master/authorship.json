[
  {
    "path": "src/main/java/teammates/common/util/AppUrl.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * A specific implementation of {@link Url} used to encapsulate URLs of the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUrl extends Url {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl(String url) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        super(url);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertTrue(url.startsWith(\"http\")); // must either be http or https"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withUserId(String userId) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.USER_ID, userId);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withRegistrationKey(String key) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.REGKEY, key);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withInstructorInstitution(String institute) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.INSTRUCTOR_INSTITUTION, institute);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public AppUrl withInstitutionMac(String mac) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return withParam(Const.ParamsNames.INSTITUTION_MAC, mac);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withCourseId(String courseId) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.COURSE_ID, courseId);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withSessionName(String feedbackSessionName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withStudentEmail(String email) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.STUDENT_EMAIL, email);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withInstructorId(String instructorId) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.INSTRUCTOR_ID, instructorId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withQuestionNumber(String questionNumber) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.FEEDBACK_QUESTION_NUMBER, questionNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public AppUrl withEnableSessionEditDetails(boolean shouldLoadInEditMode) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return withParam(Const.ParamsNames.FEEDBACK_SESSION_ENABLE_EDIT, Boolean.toString(shouldLoadInEditMode));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 4,
      "-": 50
    }
  },
  {
    "path": "src/main/java/teammates/common/util/Const.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores constants that are widely used across classes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * this class contains several nested classes, each containing a specific"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * category of constants."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public final class Const {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * This section holds constants that are defined as constants primarily"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * because they are repeated in many places."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HTML_BR_TAG \u003d \"\u003cbr\u003e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NOBODY_TEXT \u003d \"-\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_UNKNOWN_TEXT \u003d \"Unknown user\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TEAM_OF_EMAIL_OWNER \u003d \"\u0027s Team\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NONE_OF_THE_ABOVE \u003d \"None of the above\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DELETION_DATE_NOT_APPLICABLE \u003d \"Not Applicable\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_ATOPEN \u003d \"atopen\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_ATVISIBLE \u003d \"atvisible\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_LATER \u003d \"later\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_MISSING_RESPONSE \u003d \"No Response\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_YET_TO_JOIN \u003d \"Yet to join\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_JOINED \u003d \"Joined\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NAME_FOR_SELF \u003d \"Myself\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NO_SPECIFIC_SECTION \u003d \"No specific section\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ACTION_RESULT_FAILURE \u003d \"Servlet Action Failure\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SIZE_LIMIT_PER_ENROLLMENT \u003d 100;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_VIEW_RESPONSE_LIMIT \u003d 8000;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_SECTION \u003d \"None\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final ZoneId DEFAULT_TIME_ZONE \u003d ZoneId.of(\"UTC\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * These constants are used as variable values to mean that the variable"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * is in a \u0027special\u0027 state."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INT_UNINITIALIZED \u003d -9999;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_EQUAL_SHARE \u003d 100;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SURE \u003d -101;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SUBMITTED \u003d -999;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_GIVER \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_RECIPIENT \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_TEAM \u003d \"%TEAM%\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_NOBODY \u003d \"%NOBODY%\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_MISSING \u003d \"%MISSING%\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_LATER;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_NOW;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31 12:00 AM +0000\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22 12:00 AM +0000\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14 12:00 AM +0000\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Other Constants"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    private Const() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        // Utility class containing constants"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SystemParams {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENCODING \u003d \"UTF8\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT \u003d 24;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "         * This is the limit after which TEAMMATES will send error message."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003eMust be within the range of int."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MAX_PROFILE_PIC_SIZE \u003d 5000000;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        /** e.g. \"2014-04-01 11:59 PM UTC\" */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_DATE_TIME_FORMAT \u003d \"yyyy-MM-dd h:mm a Z\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Number to trim the Google ID when displaying to the user. */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int USER_ID_MAX_DISPLAY_LENGTH \u003d 23;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Field sizes and error messages for invalid fields can be found"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "         * in the FieldValidator class."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final ZoneId ADMIN_TIME_ZONE \u003d ZoneId.of(\"Asia/Singapore\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_PROFILE_PICTURE_PATH \u003d \"/images/profile_picture_default.png\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        @Deprecated"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e PAGES_REQUIRING_ORIGIN_VALIDATION \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_REMIND,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_PUBLISH,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_UNPUBLISH));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Text displayed to the user when the mouse hover over certain elements in"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     * the UI."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class Tooltips {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CLAIMED \u003d"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Claimed Contribution: This is the student\u0027s own estimation of his/her contributions\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PERCEIVED \u003d"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Perceived Contribution: This is the average of what other team members think this student contributed\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DETAILS \u003d \"View the details of the student\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_EDIT \u003d"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Use this to edit the details of this student. \u003cbr\u003eTo edit multiple students\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" in one go, you can use the enroll page: \u003cbr\u003e\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Simply enroll students using the updated data and existing data will be updated accordingly\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_REMIND \u003d"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Email an invitation to the student requesting him/her to join the course using his/her \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Google Account. Note: Students can use TEAMMATES without ‘joining’, \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"but a joined student can access extra features e.g. set up a user profile\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DELETE \u003d"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Delete the student and the corresponding submissions from the course\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_DIFF \u003d \"Perceived Contribution - Claimed Contribution\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_POINTS_RECEIVED \u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The list of points that this student received from others\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_AVAILABLE \u003d"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Not Available: There is no data for this or the data is not enough\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_SURE \u003d \"Not sure about the contribution\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDIT \u003d \"Edit feedback session details\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISH \u003d \"Make session responses available for viewing\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISH \u003d \"Make responses no longer visible\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_AWAITING \u003d \"This session is not yet opened\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATE_FEEDBACK \u003d \"Edit the responses given by this student\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_OPTION \u003d"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the options, \""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 options.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_RECIPIENT \u003d"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the recipients, \""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 recipients.\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of options, \""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 options will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of recipients, \""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 recipients will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"Maximum acceptable response value\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"Value to be increased/decreased each step\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"Minimum acceptable response value\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the columns for calculating statistics.\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_ADD \u003d \"Add comment\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_EDIT \u003d \"Edit this comment\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_DELETE \u003d \"Delete this comment\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_DISCARD_CHANGES \u003d \"Discard changes to comment\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTION_NOT_ALLOWED \u003d \"You do not have the permissions to access this feature\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestion {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cString, String\u003e COMMON_VISIBILITY_OPTIONS;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e visibilityOptionInit \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_INSTRUCTORS\","
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and instructors\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient, visible to instructors\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and team members, visible to instructors\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_INSTRUCTORS_ONLY\", \"Visible to instructors only\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_RECIPIENT_AND_INSTRUCTORS\", \"Visible to recipient and instructors\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_VISIBILITY_OPTIONS \u003d Collections.unmodifiableMap(visibilityOptionInit);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                COMMON_FEEDBACK_PATHS;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e initializer \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_FEEDBACK_PATHS \u003d Collections.unmodifiableMap(initializer);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        // Mcq"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MCQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MCQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MCQ + \".\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MCQ"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid non-negative numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_EMPTY_MCQ_OPTION \u003d \"The Mcq options cannot be empty\";"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_OTHER_CONTENT_NOT_PROVIDED \u003d \"No text provided for other option\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_DUPLICATE_MCQ_OPTION \u003d \"The Mcq options cannot be duplicate\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        // Msq"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MSQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_EMPTY_MSQ_OPTION \u003d \"The Msq options cannot be empty\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED \u003d \"No text provided for other option\";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NONE_OF_THE_ABOVE_ANSWER \u003d \"No other choices are allowed with \""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"None of the above option\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MSQ + \".\";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL \u003d"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices exceeds the total number of options for \" + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NUM_SELECTED_MORE_THAN_MAXIMUM \u003d"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Number of choices selected is more than the maximum number \";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_SELECTABLE_MORE_THAN_NUM_CHOICES \u003d"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices exceeds number of options \";"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NUM_SELECTED_LESS_THAN_MINIMUM \u003d"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Number of choices selected is less than the minimum number \";"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE \u003d"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices exceeds maximum selectable choices for \""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MAX_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 2.\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MIN_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 1.\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MSQ"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ANSWER_NONE_OF_THE_ABOVE \u003d \"None of the above\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_DUPLICATE_MSQ_OPTION \u003d \"The Msq options cannot be duplicate\";"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        // Numscale"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_MIN_MAX \u003d"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum value must be \u003c maximum value for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_STEP \u003d"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Step value must be \u003e 0 for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_OUT_OF_RANGE \u003d"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is out of the range for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        // Contribution"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid option for the \" + Const.FeedbackQuestionTypeNames.CONTRIB + \".\";"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_FEEDBACK_PATH \u003d"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must have \""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                + FeedbackParticipantType.STUDENTS.toDisplayGiverName()"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" and \" + FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF.toDisplayRecipientName()"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" as the feedback giver and recipient respectively.\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" These values will be used instead.\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_VISIBILITY_OPTIONS \u003d"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must use one of the common visibility options. The \\\"\""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestion.COMMON_VISIBILITY_OPTIONS"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .get(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\")"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\\" option will be used instead.\";"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        // Constant sum"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little options for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_OPTION"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little points for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_RECIPIENT"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of points is: \";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_MISMATCH \u003d"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please distribute all the points for distribution questions. \""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To skip a distribution question, leave the boxes blank.\";"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points given must be 0 or more.\";"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                \"At least some options must be given a different number of points.\";"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ANSWER_OPTIONS_NOT_MATCH \u003d \"The answers are inconsistent with the options\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ANSWER_RECIPIENT_NOT_MATCH \u003d \"The answer is inconsistent with the recipient\";"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        // Rubric"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_ANSWER_NOT_CHOSEN \u003d -1;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_SUB_QUESTIONS \u003d 1;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_SUB_QUESTIONS \u003d"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". \""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Minimum number of sub-questions is: \";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_DESC_INVALID_SIZE \u003d"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid number of descriptions for \" + Const.FeedbackQuestionTypeNames.RUBRIC;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_EMPTY_SUB_QUESTION \u003d"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \" cannot be empty.\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of each Sub-question of a \""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.RUBRIC"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_EMPTY_ANSWER \u003d \"Empty answer.\";"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_INVALID_ANSWER \u003d \"The answer for the rubric question is not valid.\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        // Text Question"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEXT_ERROR_INVALID_RECOMMENDED_LENGTH \u003d \"Recommended length must be 0 or greater\";"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestionTypeNames {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEXT \u003d \"Essay question\";"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ \u003d \"Multiple-choice (single answer) question\";"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ \u003d \"Multiple-choice (multiple answers) question\";"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE \u003d \"Numerical-scale question\";"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_OPTION \u003d \"Distribute points (among options) question\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_RECIPIENT \u003d \"Distribute points (among recipients) question\";"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_OPTION \u003d \"Rank (options) question\";"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_RECIPIENT \u003d \"Rank (recipients) question\";"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB \u003d \"Team contribution question\";"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC \u003d \"Rubric question\";"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackSessionResults {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION_SORT_TYPE \u003d \"question\";"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GRQ_SORT_TYPE \u003d \"giver-recipient-question\";"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RGQ_SORT_TYPE \u003d \"recipient-giver-question\";"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GQR_SORT_TYPE \u003d \"giver-question-recipient\";"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RQG_SORT_TYPE \u003d \"recipient-question-giver\";"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class InstructorPermissionRoleNames {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ParamsNames {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BLOB_KEY \u003d \"blob-key\";"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_TOKEN \u003d \"token\";"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_FEEDBACK_SESSION_NAME \u003d \"copiedfsname\";"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_COURSES_ID \u003d \"copiedcoursesid\";"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CSV_TO_HTML_TABLE_NEEDED \u003d \"csvtohtmltable\";"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseid\";"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_NAME \u003d \"coursename\";"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_TIME_ZONE \u003d \"coursetimezone\";"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDIT_MAIN_INDEX \u003d \"courseeditmainindex\";"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STATUS \u003d \"coursestatus\";"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        public static final String INSTITUTION_MAC \u003d \"mac\";"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_ENROLLMENT_INFO \u003d \"enrollstudents\";"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_IS_DISPLAYED_TO_STUDENT \u003d \"instructorisdisplayed\";"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_DISPLAY_NAME \u003d \"instructordisplayname\";"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ROLE_NAME \u003d \"instructorrole\";"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION \u003d \"section\";"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION_GROUP \u003d \"sectiongroup\";"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_COURSE \u003d \"canmodifycourse\";"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION \u003d \"canmodifysession\";"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_STUDENT \u003d \"canmodifystudent\";"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifysessioncommentinsection\";"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMIND_STUDENT_IS_FROM \u003d \"pagenameremindstudentisfrom\";"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE_STATUS \u003d \"archive\";"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOCAL_DATE_TIME \u003d \"localdatetime\";"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIME_ZONE \u003d \"timezone\";"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INDEX \u003d \"fsindex\";"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTDATE \u003d \"startdate\";"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDDATE \u003d \"enddate\";"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLEDATE \u003d \"visibledate\";"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLETIME \u003d \"visibletime\";"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHDATE \u003d \"publishdate\";"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHTIME \u003d \"publishtime\";"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_GRACEPERIOD \u003d \"graceperiod\";"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SESSIONVISIBLEBUTTON \u003d \"sessionVisibleFromButton\";"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLEBUTTON \u003d \"resultsVisibleFromButton\";"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDREMINDEREMAIL \u003d \"sendreminderemail\";"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INSTRUCTIONS \u003d \"instructions\";"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        @Deprecated"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENABLE_EDIT \u003d \"editsessiondetails\";"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER \u003d \"questionnum\";"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER_STATIC \u003d \"questionnum-static\";"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT \u003d \"questiontext\";"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT_RECOMMENDEDLENGTH \u003d \"recommendedlength\";"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DESCRIPTION \u003d \"questiondescription\";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TYPE \u003d \"questiontype\";"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFCHOICECREATED \u003d \"noofchoicecreated\";"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQCHOICE \u003d \"mcqOption\";"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTION \u003d \"mcqOtherOption\";"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTIONFLAG \u003d \"mcqOtherOptionFlag\";"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ISOTHEROPTIONANSWER \u003d \"mcqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_HAS_WEIGHTS_ASSIGNED \u003d \"mcqHasAssignedWeights\";"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_WEIGHT \u003d \"mcqWeight\";"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_OTHER_WEIGHT \u003d \"mcqOtherWeight\";"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQCHOICE \u003d \"msqOption\";"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTION \u003d \"msqOtherOption\";"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTIONFLAG \u003d \"msqOtherOptionFlag\";"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ISOTHEROPTIONANSWER \u003d \"msqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MAX_SELECTABLE_CHOICES \u003d \"msqMaxSelectableChoices\";"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MIN_SELECTABLE_CHOICES \u003d \"msqMinSelectableChoices\";"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MAX_SELECTABLE_CHOICES \u003d \"msqEnableMaxSelectableChoices\";"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MIN_SELECTABLE_CHOICES \u003d \"msqEnableMinSelectableChoices\";"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_HAS_WEIGHTS_ASSIGNED \u003d \"msqHasAssignedWeights\";"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_WEIGHT \u003d \"msqWeight\";"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_OTHER_WEIGHT \u003d \"msqOtherWeight\";"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMOPTION \u003d \"constSumOption\";"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS \u003d \"constSumToRecipients\";"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNUMOPTION \u003d \"constSumNumOption\";"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: rename FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION to a more accurate name"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION \u003d \"constSumPointsPerOption\";"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS \u003d \"constSumPoints\";"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d \"constSumPointsForEachOption\";"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d \"constSumPointsForEachRecipient\";"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEUNEVENLY \u003d \"constSumUnevenDistribution\";"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEPOINTSOPTIONS \u003d \"constSumDistributePointsOptions\";"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION \u003d \"All options\";"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION \u003d \"At least some options\";"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION \u003d \"None\";"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONTRIBISNOTSUREALLOWED \u003d \"isNotSureAllowedCheck\";"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_GENERATED_OPTIONS \u003d \"mcqGeneratedOptions\";"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_GENERATED_OPTIONS \u003d \"msqGeneratedOptions\";"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_GIVERTYPE \u003d \"givertype\";"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RECIPIENTTYPE \u003d \"recipienttype\";"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIES \u003d \"numofrecipients\";"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE \u003d \"numofrecipientstype\";"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITTYPE \u003d \"questionedittype\";"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRESPONSESTO \u003d \"showresponsesto\";"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWGIVERTO \u003d \"showgiverto\";"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRECIPIENTTO \u003d \"showrecipientto\";"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"numscalemin\";"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"numscalemax\";"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"numscalestep\";"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_SUBQUESTION \u003d \"rubricSubQn\";"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_CHOICE \u003d \"rubricChoice\";"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_DESCRIPTION \u003d \"rubricDesc\";"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHTS_ASSIGNED \u003d \"rubricAssignWeights\";"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHT \u003d \"rubricWeight\";"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_ROWS \u003d \"rubricNumRows\";"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_COLS \u003d \"rubricNumCols\";"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_LEFT \u003d \"rubric-move-col-left\";"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_RIGHT \u003d \"rubric-move-col-right\";"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKOPTION \u003d \"rankOption\";"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKTORECIPIENTS \u003d \"rankToRecipients\";"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKNUMOPTIONS \u003d \"rankNumOptions\";"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKISDUPLICATESALLOWED \u003d \"rankAreDuplicatesAllowed\";"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED \u003d \"minOptionsToBeRanked\";"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED \u003d \"maxOptionsToBeRanked\";"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED \u003d \"minRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED \u003d \"maxRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECIPIENT \u003d \"responserecipient\";"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_TEXT \u003d \"responsetext\";"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_TEXT \u003d \"responsecommenttext\";"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ADD_TEXT \u003d \"responsecommentaddtext\";"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_UPLOADDOWNLOADBUTTON \u003d \"fruploaddownloadbtn\";"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SORTTYPE \u003d \"frsorttype\";"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYTEAM \u003d \"frgroupbyteam\";"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYSECTIONDETAIL \u003d \"frgroupbysectiondetail\";"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SHOWSTATS \u003d \"frshowstats\";"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES \u003d \"frindicatemissingresponses\";"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_NEED_AJAX \u003d \"frneedajax\";"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_MAIN_INDEX \u003d \"frmainindex\";"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREVIEWAS \u003d \"previewas\";"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_ID \u003d \"googleid\";"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INVITER_ID \u003d \"invitergoogleid\";"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String REGKEY \u003d \"key\";"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL \u003d \"studentemail\";"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_SHORT_NAME \u003d \"studentshortname\";"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EMAIL \u003d \"studentprofileemail\";"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_INSTITUTION \u003d \"studentprofileinstitute\";"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NATIONALITY \u003d \"studentnationality\";"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_GENDER \u003d \"studentgender\";"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_MOREINFO \u003d \"studentprofilemoreinfo\";"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NAME \u003d \"studentname\";"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWCOMMENTSTO \u003d \"showresponsecommentsto\";"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWGIVERTO \u003d \"showresponsegiverto\";"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_NAME \u003d \"sectionname\";"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_NAME_DETAIL \u003d \"sectionnamedetail\";"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_NAME \u003d \"teamname\";"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATES \u003d \"teammates\";"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STATUS_MESSAGES_LIST \u003d \"statusMessagesToUser\";"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR \u003d \"error\";"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NEXT_URL \u003d \"next\";"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String USER_ID \u003d \"user\";"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        //Email parameters"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_RECEIVER \u003d \"user\";"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_CONTENT \u003d \"content\";"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDER \u003d \"sender\";"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDERNAME \u003d \"sendername\";"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SUBJECT \u003d \"subject\";"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_REPLY_TO_ADDRESS \u003d \"reply\";"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_SUBMISSION_EMAIL \u003d \"sendsubmissionemail\";"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        //Submission parameters for Task Queue"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_REMIND_USERLIST \u003d \"usersToRemind\";"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_RESEND_PUBLISHED_EMAIL_USER_LIST \u003d \"usersToResendEmail\";"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_EMAIL \u003d \"respondentemail\";"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_INSTRUCTOR \u003d \"respondentisinstructor\";"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_TO_BE_REMOVED \u003d \"respondentistoberemoved\";"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_LINKS_RECOVERY_EMAIL \u003d \"sessionlinksrecoveryemail\";"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        //Parameters for checking persistence of data during Eventual Consistency"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CHECK_PERSISTENCE_COURSE \u003d \"persistencecourse\";"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_STUDENTS \u003d \"searchstudents\";"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_FEEDBACK_SESSION_DATA \u003d \"searchfeedbacksessiondata\";"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENTITY_TYPE \u003d \"entitytype\";"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INTENT \u003d \"intent\";"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchIndex {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT \u003d \"feedbackresponsecomment\";"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchDocumentField {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_GIVER_NAME \u003d \"frCommentGiverName\";"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_GIVER_NAME \u003d \"feedbackResponseGiverName\";"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECEIVER_NAME \u003d \"feedbackResponseReceiverName\";"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCHABLE_TEXT \u003d \"searchableText\";"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseId\";"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "     * The course status respect to the instructor\u0027s point of view."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     * This parameter is used to get a course list for instructor."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CourseStatus {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTIVE \u003d \"active\";"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ARCHIVED \u003d \"archived\";"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SOFT_DELETED \u003d \"softDeleted\";"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EntityType {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN \u003d \"admin\";"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CsrfConfig {"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TOKEN_HEADER_NAME \u003d \"X-CSRF-TOKEN\";"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TOKEN_COOKIE_NAME \u003d \"CSRF-TOKEN\";"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class LegacyURIs {"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class WebPageURIs {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String URI_PREFIX \u003d \"/web\";"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HELP_PAGE \u003d FRONT_PAGE + \"/help/instructor\";"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ResourceURIs {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String URI_PREFIX \u003d \"/webapi\";"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGOUT \u003d \"/logout\";"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DATABUNDLE \u003d \"/databundle\";"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EXCEPTION \u003d \"/exception\";"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_REPORT \u003d \"/errorreport\";"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTH \u003d \"/auth\";"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT \u003d \"/account\";"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNTS_SEARCH \u003d \"/accounts/search\";"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT_RESET \u003d \"/account/reset\";"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT_DOWNGRADE \u003d \"/account/downgrade\";"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENT \u003d \"/responsecomment\";"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE \u003d \"/course\";"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE \u003d \"/course/archive\";"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BIN_COURSE \u003d \"/bin/course\";"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_SECTIONS \u003d \"/course/sections\";"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSES \u003d \"/courses\";"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTORS \u003d \"/instructors\";"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"/instructor\";"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PRIVILEGE \u003d \"/instructor/privilege\";"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        public static final String SEARCH_INSTRUCTORS \u003d \"/search/instructors\";"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESULT \u003d \"/result\";"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS \u003d \"/students\";"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"/student\";"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS_ONGOING \u003d \"/sessions/ongoing\";"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION \u003d \"/session\";"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_PUBLISH \u003d \"/session/publish\";"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_REMIND_SUBMISSION \u003d \"/session/remind/submission\";"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_REMIND_RESULT \u003d \"/session/remind/result\";"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_STATS \u003d \"/session/stats\";"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_SUBMITTED_GIVER_SET \u003d \"/session/submitted/giverset\";"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS \u003d \"/sessions\";"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        public static final String SEARCH_STUDENTS \u003d \"/search/students\";"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BIN_SESSION \u003d \"/bin/session\";"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTIONS \u003d \"/questions\";"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION \u003d \"/question\";"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION_RECIPIENTS \u003d \"/question/recipients\";"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE \u003d \"/response\";"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSES \u003d \"/responses\";"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HAS_RESPONSES \u003d \"/hasResponses\";"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_CONFIRMATION \u003d \"/submission/confirmation\";"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN \u003d \"/join\";"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_REMIND \u003d \"/join/remind\";"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIMEZONE \u003d \"/timezone\";"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOCAL_DATE_TIME \u003d \"/localdatetime\";"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_LINKS_RECOVERY \u003d \"/sessionlinksrecovery\";"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NATIONALITIES \u003d \"/nationalities\";"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"/student/profilePic\";"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE \u003d \"/student/profile\";"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_CSV \u003d \"/students/csv\";"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH \u003d \"/studentsAndSessionData/search\";"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS \u003d \"/course/enroll/students\";"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActionURIs {"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        /* _PAGE/Page in the Action URI name means \u0027show page\u0027 */"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DELETE \u003d \"/page/instructorCourseStudentDelete\";"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_REMIND \u003d \"/page/instructorCourseRemind\";"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX_PAGE \u003d \"/page/instructorStudentRecordsAjaxPage\";"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS_PAGE \u003d"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudentsPage\";"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS \u003d"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudents\";"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_PUBLISH \u003d \"/page/instructorFeedbackPublish\";"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_UNPUBLISH \u003d \"/page/instructorFeedbackUnpublish\";"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD \u003d \"/page/instructorFeedbackResultsDownload\";"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"/page/studentProfilePic\";"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CronJobURIs {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_EXCEPTION_TEST \u003d \"/auto/exception\";"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_LOG_COMPILATION \u003d \"/auto/compileLogs\";"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_DATASTORE_BACKUP \u003d \"/auto/datastoreBackup\";"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d \"/auto/feedbackSessionOpeningReminders\";"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d \"/auto/feedbackSessionClosedReminders\";"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d \"/auto/feedbackSessionClosingReminders\";"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d \"/auto/feedbackSessionPublishedReminders\";"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "     * Configurations for task queue."
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class TaskQueue {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-published-email-queue\";"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionPublishedEmail\";"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-resend-published-email-queue\";"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionResendPublishedEmail\";"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d \"/worker/feedbackSessionRemindEmail\";"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-remind-particular-users-email-queue\";"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionRemindParticularUsersEmail\";"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-unpublished-email-queue\";"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUnpublishedEmail\";"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-update-respondent-queue\";"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_WORKER_URL \u003d"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUpdateRespondent\";"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/instructorCourseJoinEmail\";"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_WORKER_URL \u003d \"/worker/sendEmail\";"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/studentCourseJoinEmail\";"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ViewURIs {"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        /* We omit adding the \u0027page\u0027 prefix to views because all of them are \"pages\" */"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_TOP \u003d \"/jsp/instructorFeedbackResultsTop.jsp\";"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BOTTOM \u003d \"/jsp/instructorFeedbackResultsBottom.jsp\";"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_RECIPIENT_QUESTION \u003d"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverRecipientQuestion.jsp\";"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_GIVER_QUESTION \u003d"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientGiverQuestion.jsp\";"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_QUESTION_RECIPIENT \u003d"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverQuestionRecipient.jsp\";"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_QUESTION_GIVER \u003d"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientQuestionGiver.jsp\";"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_QUESTION \u003d \"/jsp/instructorFeedbackResultsByQuestion.jsp\";"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH \u003d \"/jsp/instructorSearch.jsp\";"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX \u003d \"/jsp/instructorStudentRecordsAjax.jsp\";"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MASHUP \u003d \"/test/mashup.jsp\";"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TABLE_SORT \u003d \"/test/tableSort.jsp\";"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These are status messages that may be shown to the user */"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusMessages {"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DUPLICATE_EMAIL_INFO \u003d \"Same email address as the student in line\";"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDITED \u003d \"The course has been edited.\";"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVED \u003d"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course %s has been archived. It will not appear in the home page any more.\";"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: Let undo process to be in the Course page for now."
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        // Should implement to be able to undo the archiving from the home page later."
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_MOVED_TO_RECYCLE_BIN \u003d"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course %s has been deleted. You can restore it from the deleted courses table below.\";"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EMPTY \u003d"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You do not seem to have any courses. Use the form above to create a course.\";"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_REMINDER_SENT_TO \u003d \"An email has been sent to \";"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_INVALID_SECTION_EDIT \u003d"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The team \\\"%s\\\" is in multiple sections. \""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"The team ID should be unique across the entire course \""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"and a team cannot be spread across multiple sections.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_QUOTA_EXCEED \u003d"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You are trying enroll more than 100 students in section \\\"%s\\\". \""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To avoid performance problems, please do not enroll more than 100 students in a single section.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_ADDED \u003d \"The instructor %s has been added successfully. \""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"An email containing how to \u0027join\u0027 this course will be sent to %s in a few minutes.\";"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EXISTS \u003d"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                \"An instructor with the same email address already exists in the course.\";"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EDITED \u003d \"The changes to the instructor %s has been updated.\";"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETED \u003d \"The instructor has been deleted from the course.\";"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETE_NOT_ALLOWED \u003d"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The instructor you are trying to delete is the last instructor in the course. \""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Deleting the last instructor from the course is not allowed.\";"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EVENTUAL_CONSISTENCY \u003d"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "                \"If the student was created during the last few minutes, \""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"try again in a few more minutes as the student may still be being saved.\";"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EDITED \u003d \"The student has been edited successfully.\";"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_EDIT \u003d"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to edit does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_DELETED \u003d \"The student has been removed from the course\";"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EDITED \u003d \"Your profile has been edited successfully\";"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_SAVED \u003d \"Your profile picture has been saved successfully\";"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PIC_TOO_LARGE \u003d \"The uploaded profile picture was too large. \""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please try again with a smaller picture.\";"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL_TAKEN_MESSAGE \u003d"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Trying to update to an email that is already used by: %s/%s\";"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ADDED \u003d"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been added. \""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\";"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPIED \u003d"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been copied. Please modify settings/questions as necessary.\";"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_NONESELECTED \u003d"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any course to copy the feedback session to\";"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_ALREADYEXISTS \u003d"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session with the name \\\"%s\\\" already exists in the following course(s): %s.\";"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDITED \u003d \"The feedback session has been updated.\";"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_END_TIME_EARLIER_THAN_START_TIME \u003d"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The end time for this feedback session cannot be earlier than the start time.\";"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MOVED_TO_RECYCLE_BIN \u003d"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been deleted. You can restore it from the deleted sessions table below.\";"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESTORED \u003d \"The feedback session has been restored.\";"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ALL_RESTORED \u003d \"All sessions have been restored.\";"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DOWNLOAD_FILE_SIZE_EXCEEDED \u003d \"This session has more responses than \""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"that can be downloaded in one go. Please download responses for one question at a time instead. \""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To download responses for a specific question, click on the corresponding question number.\";"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED \u003d"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been published. \""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_EMAIL_EMPTY_RECIPIENT \u003d"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any student to email.\";"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED \u003d \"The feedback session has been unpublished.\";"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSENT \u003d"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Reminder e-mails have been sent out to those students and instructors. \""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN \u003d"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session is not open for submissions. \""
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You cannot send reminders for a session that is not open.\";"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSEMPTYRECIPIENT \u003d \"You have not selected any student to remind.\";"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EXISTS \u003d"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session by this name already exists under this course\";"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ADDED \u003d \"The question has been added to this feedback session.\";"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ADDED_MULTIPLE \u003d"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The questions have been added to this feedback session.\";"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DUPLICATED \u003d \"The question has been duplicated below.\";"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITED \u003d \"The changes to the question have been updated.\";"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DELETED \u003d \"The question has been deleted.\";"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID \u003d"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter the maximum number of recipients each respondents should give feedback to.\";"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXTINVALID \u003d"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter a valid question. The question text cannot be empty.\";"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_SAVED \u003d \"All responses submitted successfully!\";"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MIN_CHECK \u003d \"Minimum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MAX_CHECK \u003d \"Maximum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_EMPTY \u003d \"Comment cannot be empty\";"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_UNANSWERED_QUESTIONS \u003d \"Note that some questions are yet to be answered. \""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"They are: \";"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SECTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results one question/section at a time. \""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below. \""
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view response for a particular section, click the \u0027Edit View\u0027 button above and choose a section.\";"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_QUESTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results for one question at a time. \""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below.\";"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLL_LINES_PROBLEM_DETAIL_PREFIX \u003d \"\u0026bull;\";"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMOVED_FROM_COURSE \u003d \"The Instructor has been removed from the Course\";"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_NO_RESULTS \u003d \"No results found.\";"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_TIPS \u003d"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Search Tips:\u003cbr\u003e\""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cul\u003e\""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut more keywords to search for more precise results.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut quotation marks around words \u003cb\u003e\\\"[any word]\\\"\u003c/b\u003e\""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" to search for an exact phrase in an exact order.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003c/ul\u003e\";"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT_FOR_NO_SESSIONS_STUDENT \u003d"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Currently, there are no open feedback sessions in the course %s. \""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"When a session is open for submission you will be notified.\";"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "        // Messages that are templates only"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters: Student\u0027s name, Course ID */"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_SUCCESSFUL \u003d \"You have been successfully added to the course %s.\";"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters:  Course ID */"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NOT_A_PICTURE \u003d \"The file that you have uploaded is not a picture. \""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please upload a picture (usually it ends with .jpg or .png)\";"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NO_PICTURE_GIVEN \u003d \"Please specify a file to be uploaded.\";"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_RECORDS \u003d"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to view records for does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_GAP \u003d"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the gap period when clocks spring forward at the start of DST. \""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It was resolved to %s.\";"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_OVERLAP \u003d"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the overlap period when clocks fall back at the end of DST. \""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It can refer to %s or %s. It was resolved to %s.\";"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "     * These are status messages related to students logic that may be shown to the user."
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StudentsLogicConst {"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "         * Error message when trying to create the same team in more than one section."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_INVALID_TEAM_NAME \u003d"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team \\\"%s\\\" is detected in both Section \\\"%s\\\" and Section \\\"%s\\\".\";"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "         * Error message to be appended to the ERROR_INVALID_TEAM_NAME message."
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_INVALID_TEAM_NAME_INSTRUCTION \u003d"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please use different team names in different sections.\";"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "         * Error message when trying to enroll to a section that has maximum capacity."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_ENROLL_EXCEED_SECTION_LIMIT \u003d"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You are trying enroll more than %s students in section \\\"%s\\\".\";"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "         * Error message to be appended to the ERROR_ENROLL_EXCEED_SECTION_LIMIT message."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_ENROLL_EXCEED_SECTION_LIMIT_INSTRUCTION \u003d"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                \"To avoid performance problems, please do not enroll more than %s students in a single section.\";"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "         * The maximum allowable number of students to be enrolled in a section."
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int SECTION_SIZE_LIMIT \u003d 100;"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These indicate status of an operation, but they are not shown to the user */"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusCodes {"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        // Backdoor responses"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_SUCCESS \u003d \"[BACKDOOR_STATUS_SUCCESS]\";"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_FAILURE \u003d \"[BACKDOOR_STATUS_FAILURE]\";"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        // General Error codes"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_PARAMETER \u003d \"ERRORCODE_NULL_PARAMETER\";"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        // Error message used across DB level"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DBLEVEL_NULL_INPUT \u003d \"Supplied parameter was null\";"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        // POST parameter null message"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_POST_PARAMETER \u003d \"The %s POST parameter is null%n\";"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        // HTTP parameter null message"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_HTTP_PARAMETER \u003d \"The [%s] HTTP parameter is null.\";"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        // body parameter null message"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_BODY_PARAMETER \u003d \"The body parameter is null\";"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "     * These are constants that may be used in {@link ActivityLogEntry}."
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActivityLog {"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATESLOG \u003d \"TEAMMATESLOG\";"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNKNOWN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_ADMIN \u003d \"Admin\";"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_INSTRUCTOR \u003d \"Instructor\";"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_STUDENT \u003d \"Student\";"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_AUTO \u003d \"Auto\";"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_UNREGISTERED \u003d \"Unregistered\";"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_MASQUERADE_POSTFIX \u003d \"(M)\";"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_STUDENT_PAGE \u003d \"student\";"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_INSTRUCTOR_PAGE \u003d \"instructor\";"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_AUTO_PAGE \u003d \"/auto\";"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTH_NOT_LOGIN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_SEPARATOR \u003d \"|||\";"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_CONNECTOR \u003d \"%\";"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIME_FORMAT_LOGID \u003d \"yyyyMMddHHmmssSS\";"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TESTING_DATA_EMAIL_POSTFIX \u003d \".tmt\";"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_ACTION_NAME \u003d \"Error when getting ActionName for requestUrl : %1$s\";"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_LOG_MESSAGE_FORMAT \u003d \"Log message format not as expected: %1$s\";"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 2,
      "madanalogy": 1,
      "-": 1128
    }
  },
  {
    "path": "src/main/java/teammates/common/util/StringHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.BadPaddingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.Cipher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.IllegalBlockSizeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import javax.crypto.Mac;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.spec.SecretKeySpec;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.common.base.CharMatcher;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * Holds String-related helper functions."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public final class StringHelper {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringHelper() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // utility class"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the input string is empty or equals {@code null}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param s The string to be checked"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isEmpty(String s) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return s \u003d\u003d null || s.isEmpty();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a string which consists of {@code length} copies of {@code character} without space."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String generateStringOfLength(int length, char character) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertTrue(length \u003e\u003d 0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.join(\"\", Collections.nCopies(length, String.valueOf(character)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the given string is empty or consists of only whitespace."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isWhiteSpace(String string) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return string.trim().isEmpty();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the input string matches the regex."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input The string to be matched"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param regex The regex  used for the matching"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isMatching(String input, String regex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // Important to use the CANON_EQ flag to make sure that canonical characters"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // such as é is correctly matched regardless of single/double code point encoding"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return Pattern.compile(regex, Pattern.CANON_EQ).matcher(input).matches();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a left-indentation of {@code length} units."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getIndent(int length) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return generateStringOfLength(length, \u0027 \u0027);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the {@code inputString} is longer than a specified length"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * if so returns the truncated name appended by ellipsis,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns the original input. \u003cbr\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * E.g., \"12345678\" truncated to length 6 returns \"123...\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String truncate(String inputString, int truncateLength) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        if (inputString.length() \u003c\u003d truncateLength) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return inputString;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return inputString.substring(0, truncateLength - 3) + \"...\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Trims head of the String if it is longer than specified Length."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     *  E.g., String \"12345678\" with maximumStringLength \u003d 6, returns \"345678\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param maximumStringLength - maximum required length of the string"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String with at most maximumStringLength length"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String truncateHead(String inputString, int maximumStringLength) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        int inputStringLength \u003d inputString.length();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (inputStringLength \u003c\u003d maximumStringLength) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return inputString;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return inputString.substring(inputStringLength - maximumStringLength);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the {@code longId} is longer than the length specified"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * in {@link Const.SystemParams},"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * if so returns the truncated longId appended by ellipsis,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns the original longId."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String truncateLongId(String longId) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return truncate(longId, Const.SystemParams.USER_ID_MAX_DISPLAY_LENGTH);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Substitutes the middle third of the given string with dots"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns the \"obscured\" string."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String obscure(String inputString) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(inputString);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        String frontPart \u003d inputString.substring(0, inputString.length() / 3);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        String endPart \u003d inputString.substring(2 * inputString.length() / 3);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return frontPart + \"..\" + endPart;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Generates the HMAC SHA-1 signature for a supplied string."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param data The string to be signed"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return The signature value as a hex-string"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static String generateSignature(String data) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            SecretKeySpec signingKey \u003d"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                    new SecretKeySpec(hexStringToByteArray(Config.ENCRYPTION_KEY), \"HmacSHA1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            Mac mac \u003d Mac.getInstance(\"HmacSHA1\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            mac.init(signingKey);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            byte[] value \u003d mac.doFinal(data.getBytes());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return byteArrayToHexString(value);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            Assumption.fail(TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Verifies the HMAC SHA-1 signature against a given value."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param value The value to be checked"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param signature The signature in hex-string format"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return True if signature matches value"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static boolean isCorrectSignature(String value, String signature) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        if (value \u003d\u003d null || signature \u003d\u003d null) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return Objects.equals(generateSignature(value), signature);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * Encrypts the supplied string."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the plaintext as a string"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the ciphertext"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws RuntimeException if the encryption fails for some reason, such as {@code Cipher} initialization failure."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String encrypt(String value) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            SecretKeySpec sks \u003d new SecretKeySpec(hexStringToByteArray(Config.ENCRYPTION_KEY), \"AES\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            Cipher cipher \u003d Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            cipher.init(Cipher.ENCRYPT_MODE, sks, cipher.getParameters());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] encrypted \u003d cipher.doFinal(value.getBytes());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            return byteArrayToHexString(encrypted);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     * Decrypts the supplied string."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message the ciphertext as a hexadecimal string"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the plaintext"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the ciphertext is invalid."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws RuntimeException if the decryption fails for any other reason, such as {@code Cipher} initialization failure."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String decrypt(String message) throws InvalidParametersException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            SecretKeySpec sks \u003d new SecretKeySpec(hexStringToByteArray(Config.ENCRYPTION_KEY), \"AES\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            Cipher cipher \u003d Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            cipher.init(Cipher.DECRYPT_MODE, sks);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] decrypted \u003d cipher.doFinal(hexStringToByteArray(message));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            return new String(decrypted);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException | IllegalBlockSizeException | BadPaddingException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            log.warning(\"Attempted to decrypt invalid ciphertext: \" + message);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(e);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts and concatenates a list of objects to a single string, separated by line breaks."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "     * The conversion is done by using the {@link Object#toString()} method."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Concatenated string."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toString(List\u003cT\u003e list) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        return toString(list, System.lineSeparator());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts and concatenates a list of objects to a single string, separated by the given delimiter."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * The conversion is done by using the {@link Object#toString()} method."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Concatenated string."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toString(List\u003cT\u003e list, String delimiter) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        return list.stream()"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(s -\u003e s.toString())"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.joining(delimiter));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a double value between 0 and 1 to 3dp-string."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String toDecimalFormatString(double doubleVal) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        DecimalFormat df \u003d new DecimalFormat(\"0.###\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        return df.format(doubleVal);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     * split a full name string into first and last names"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * 1.If passed in empty string, both last and first name will be empty string"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * 2.If single word, this will be last name and first name will be an empty string"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     * 3.If more than two words, the last word will be last name and"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "     * the rest will be first name."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "     * 4.If the last name is enclosed with braces \"{}\" such as first {Last1 Last2},"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * the last name will be the String inside the braces"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     * Example:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * full name \"Danny Tim Lin\"\u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * first name: \"Danny Tim\" \u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * last name: \"Lin\" \u003cbr\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     * processed full name: \"Danny Tim Lin\" \u003cbr\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "     * full name \"Danny {Tim Lin}\"\u003cbr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * first name: \"Danny\" \u003cbr\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     * last name: \"Tim Lin\" \u003cbr\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     * processed full name: \"Danny Tim Lin\" \u003cbr\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return split name array{0--\u003e first name, 1--\u003e last name, 2--\u003e processed full name by removing \"{}\"}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String[] splitName(String fullName) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fullName \u003d\u003d null) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            return new String[] {};"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        String lastName;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        String firstName;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fullName.contains(\"{\") \u0026\u0026 fullName.contains(\"}\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            int startIndex \u003d fullName.indexOf(\u0027{\u0027);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            int endIndex \u003d fullName.indexOf(\u0027}\u0027);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            lastName \u003d fullName.substring(startIndex + 1, endIndex);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            firstName \u003d fullName.replace(\"{\", \"\")"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                                .replace(\"}\", \"\")"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                                .replace(lastName, \"\")"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                                .trim();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            lastName \u003d fullName.substring(fullName.lastIndexOf(\u0027 \u0027) + 1).trim();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            firstName \u003d fullName.replace(lastName, \"\").trim();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        String processedfullName \u003d fullName.replace(\"{\", \"\")"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                           .replace(\"}\", \"\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String[] {firstName, lastName, processedfullName};"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "     * Trims the string and reduces consecutive white spaces to only one space."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "     * Example: \" a   a  \" --\u003e \"a a\"."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return processed string, returns null if parameter is null"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String removeExtraSpace(String str) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        return CharMatcher.whitespace().trimFrom(str).replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces every character in {@code str} that does not match"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code regex} with the character {@code replacement}."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param str String to be replaced."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param regex Pattern that every character is to be matched against."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param replacement Character unmatching characters should be replaced with."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String with all unmatching characters replaced; null if input is null."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String replaceIllegalChars(String str, String regex, char replacement) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        char[] charArray \u003d str.toCharArray();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        IntStream.range(0, charArray.length)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(i -\u003e !isMatching(Character.toString(charArray[i]), regex))"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(i -\u003e charArray[i] \u003d replacement);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.valueOf(charArray);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a byte array to hexadecimal string."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String byteArrayToHexString(byte[] bytes) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(bytes.length * 2);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        for (byte b : bytes) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            int v \u003d b \u0026 0xff;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            if (v \u003c 16) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                sb.append(\u00270\u0027);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            sb.append(Integer.toHexString(v));"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString().toUpperCase();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a hexadecimal string to byte array."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    public static byte[] hexStringToByteArray(String s) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        byte[] b \u003d new byte[s.length() / 2];"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        IntStream.range(0, b.length)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(i -\u003e b[i] \u003d (byte) Integer.parseInt(s.substring(i * 2, i * 2 + 2), 16));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        return b;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a csv string to a html table string for displaying."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return html table string"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String csvToHtmlTable(String str) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] lines \u003d handleNewLine(str).split(System.lineSeparator());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e rowData \u003d getTableData(line);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            if (checkIfEmptyRow(rowData)) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            result.append(\"\u003ctr\u003e\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            for (String td : rowData) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                result.append(String.format(\"\u003ctd\u003e%s\u003c/td\u003e\", SanitizationHelper.sanitizeForHtml(td)));"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            result.append(\"\u003c/tr\u003e\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.format(\"\u003ctable class\u003d\\\"table table-bordered table-striped table-condensed\\\"\u003e%s\u003c/table\u003e\","
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                             result.toString());"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String handleNewLine(String str) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder buffer \u003d new StringBuilder();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        char[] chars \u003d str.toCharArray();"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isInQuote \u003d false;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        for (char c : chars) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            if (c \u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                isInQuote \u003d !isInQuote;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            if (c \u003d\u003d \u0027\\n\u0027 \u0026\u0026 isInQuote) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                buffer.append(\"\u003cbr\u003e\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                buffer.append(c);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        return buffer.toString();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cString\u003e getTableData(String str) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean inquote \u003d false;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder buffer \u003d new StringBuilder();"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        char[] chars \u003d str.toCharArray();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c chars.length; i++) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            if (chars[i] \u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i + 1 \u003c chars.length \u0026\u0026 chars[i + 1] \u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                    i++; // NOPMD loop variable deliberately increased"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                    inquote \u003d !inquote;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            if (chars[i] \u003d\u003d \u0027,\u0027) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                if (inquote) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                    buffer.append(chars[i]);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                    data.add(buffer.toString());"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                    buffer.delete(0, buffer.length());"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                buffer.append(chars[i]);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        data.add(buffer.toString().trim());"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean checkIfEmptyRow(List\u003cString\u003e rowData) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        return rowData.stream()"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                .allMatch(r -\u003e r.isEmpty());"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "     * From: http://stackoverflow.com/questions/11969840/how-to-convert-a-base-10-number-to-alphabetic-like-ordered-list-in-html"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts an integer to alphabetical form (base26)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "     * 1 - a"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * 2 - b"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     * ..."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "     * 26 - z"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "     * 27 - aa"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "     * 28 - ab"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "     * ..."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param n - number to convert"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String integerToLowerCaseAlphabeticalIndex(int n) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        int n0 \u003d n;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        while (n0 \u003e 0) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            n0--; // 1 \u003d\u003e a, not 0 \u003d\u003e a"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            int remainder \u003d n0 % 26;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            char digit \u003d (char) (remainder + 97);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            result.append(digit);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            n0 \u003d (n0 - remainder) / 26;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        return result.reverse().toString();"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     * Trims the string if it is not null."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the trimmed string or null (if the parameter was null)."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String trimIfNotNull(String string) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return string \u003d\u003d null ? null : string.trim();"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Counts the number of empty strings passed as the argument. Null is"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * considered an empty string, while whitespace is not."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return number of empty strings passed"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public static int countEmptyStrings(String... strings) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        return Math.toIntExact(Arrays.stream(strings)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(s -\u003e isEmpty(s))"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                .count());"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts null input to empty string. Non-null inputs will be left as is."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is for displaying purpose."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return empty string if null, the string itself otherwise"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertToEmptyStringIfNull(String str) {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        return str \u003d\u003d null ? \"\" : str;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the outermost enclosing square brackets surrounding a string."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the string without the outermost enclosing square brackets"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if the given string is enclosed by square brackets \u003cbr\u003e"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "     *         the string itself if the given string is not enclosed by square brackets \u003cbr\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "     *         null if the given string is null"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String removeEnclosingSquareBrackets(String str) {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        Pattern p \u003d Pattern.compile(\"^\\\\[(.*)]$\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher m \u003d p.matcher(str);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        return m.find() ? m.group(1) : str;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a String array after removing white spaces leading and"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * trailing any string in the input array."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String[] trim(String[] stringsToTrim) {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(stringsToTrim)"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(s -\u003e s.trim())"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                .toArray(size -\u003e new String[size]);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a String array after converting them to lower case."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String[] toLowerCase(String[] stringsToConvertToLowerCase) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(stringsToConvertToLowerCase)"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(s -\u003e s.toLowerCase())"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                .toArray(size -\u003e new String[size]);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns text with all non-ASCII characters removed."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String removeNonAscii(String text) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        return text.replaceAll(\"[^\\\\x00-\\\\x7F]\", \"\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a new String composed of copies of the String elements joined together"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "     * with a copy of the specified delimiter."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String join(String delimiter, List\u003cInteger\u003e elements) {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.join(delimiter, toStringArray(elements));"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts list of integer to array of strings."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String[] toStringArray(List\u003cInteger\u003e elements) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        if (elements \u003d\u003d null) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(\"Provided arguments cannot be null\");"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        return elements.stream()"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(s -\u003e String.valueOf(s))"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                .toArray(size -\u003e new String[size]);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code text} contains at least one of the {@code strings} or if {@code strings} is empty."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     * If {@code text} is null, false is returned."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isTextContainingAny(String text, String... strings) {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        if (text \u003d\u003d null) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        if (strings.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(strings)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                .anyMatch(s -\u003e text.contains(s));"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extract data from quoted string."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param quotedString string to extract data from"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return string without quotes"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String extractContentFromQuotedString(String quotedString) {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        if (quotedString \u003d\u003d null) {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        if (quotedString.matches(\"^\\\".*\\\"$\")) {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            return quotedString.substring(1, quotedString.length() - 1);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        return quotedString;"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 36,
      "-": 558
    }
  },
  {
    "path": "src/main/java/teammates/logic/api/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseDetailsBundle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackResponseCommentSearchResultBundle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorSearchResultBundle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetailsBundle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentSearchResultBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.TeamDetailsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EnrollException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AccountsLogic;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.DataBundleLogic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackQuestionsLogic;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponseCommentsLogic;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponsesLogic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.ProfilesLogic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " * Provides the business logic for production usage of the system."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getAccount(googleId);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student profile"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes both instructor and student privileges, as long as the account and associated student profile."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAccountCascade(String googleId) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(googleId);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Delete the picture associated with the {@code key} in Cloud Storage."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * All parameters are non-null."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the {@code key} doesn\u0027t exist.\u003c/p\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePicture(String key) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePicture(key);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes {@code pictureKey} for the student profile associated with {@code googleId}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the associated profile doesn\u0027t exist, create a new one.\u003c/p\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePictureKey(String googleId) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePictureKey(googleId);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add an instructor for a course. \u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructor(String courseId, String name, String email, String role)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes.builder(courseId, email)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(name)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(role)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(new InstructorPrivileges(role))"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an instructor."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created instructor"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the instructor is not valid"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the instructor already exists in the Datastore"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes createInstructor(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * search instructors in the whole system."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorSearchResultBundle searchInstructorsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given Instructors."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putInstructorDocuments(List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.putDocuments(instructors);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForEmail(courseId, email);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorById(String courseId, String email) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorById(courseId, email);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForRegistrationKey(String encryptedKey) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the encrypted registration key for the instructor."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForInstructor(String courseId, String email)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getEncryptedKeyForInstructor(courseId, email);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user has instructor privileges."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructor(String googleId) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.isAccountAnInstructor(googleId);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user is an instructor of the course."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorOfCourse(String googleId, String courseId) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isGoogleIdOfInstructorOfCourse(googleId, courseId);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the instructor is a new user."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#isNewInstructor(String)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isNewInstructor(String googleId) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isNewInstructor(googleId);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade update the comments and responses given by the instructor."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByEmail(updateOptions);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Creates an account for the instructor if there is no existing account for him."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * * Parameters encryptedKey and googleId are non-null."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute, String mac)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return accountsLogic.joinCourseForInstructor(encryptedKey, googleId, institute, mac);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "     * Downgrades an instructor account to student account."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade deletes all instructors associated with the account."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(googleId);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorCascade(String courseId, String email) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorCascade(courseId, email);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a course and an associated instructor for the course."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr/\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code instructorGoogleId} already has an account and instructor privileges."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorGoogleId);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseAttributes);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourse(courseId);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed version of course data. \u003cbr\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseDetails(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummary(courseId);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a course data, including its feedback sessions, according to the instructor passed in.\u003cbr\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithFeedbackSessions(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummaryWithFeedbackSessionsForInstructor(instructor);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForStudentAccount(googleId);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor without stats."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseSummaryBundle\u003e getCourseSummariesWithoutStatsForInstructor(String googleId,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                            boolean omitArchived) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesSummaryWithoutStatsForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor(String googleId)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummariesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Details of courses the student is in. CourseData objects"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     *         returned contain details of feedback sessions too (except the ones"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *         still AWAITING)."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseDetailsBundle\u003e getCourseDetailsListForStudent(String googleId)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseDetailsListForStudent(googleId);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the given instructors is in except for courses in Recycle Bin."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses in Recycle Bin that the given instructors is in."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getSoftDeletedCourseForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a course by {@link CourseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated course"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the course cannot be found"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.updateCourseCascade(updateOptions);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "     * Changes the archive status of a course for an instructor."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId The course of which the archive status is to be changed"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param archiveStatus The archive status to be set"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(archiveStatus);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a course cascade its students, instructors, sessions, responses and comments."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if no such course."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.deleteCourseCascade(courseId);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the course is present in the system based on its courseid."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCoursePresent(String courseid) {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.isCoursePresent(courseid);"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Moves a course to Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the deletion timestamp assigned to the course."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return coursesLogic.moveCourseToRecycleBin(courseId);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a course and all data related to the course from Recycle Bin by"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "     * its given corresponding ID."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreCourseFromRecycleBin(String courseId)"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(courseId);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all courses and all data related to these courses from Recycle Bin."
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllCoursesFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreAllCoursesFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for students. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudents(queryString, instructors);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "     * search students in the whole system."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudentsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudentsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(registrationKey);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForRegistrationKey(registrationKey);"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForEmail(courseId, email);"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an empty list if no match found."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getAllStudentForEmail(String email) {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getAllStudentsForEmail(email);"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets student profile associated with the {@code googleId}."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if no match found."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes getStudentProfile(String googleId) {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.getStudentProfile(googleId);"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if no match found."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForGoogleId(googleId);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the course with ID courseId."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsNameForCourse(String)"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsNameForCourse(courseId);"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a given course using courseId."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsForCourseWithoutStats(String)"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsForCourseWithoutStats(courseId);"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTeamDetailsBundle\u003e getTeamsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getTeamsForCourse(courseId);"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "    public TeamDetailsBundle getTeamDetailsForStudent(StudentAttributes student) {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getTeamDetailsForStudent(student);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForStudent(String courseId, String email) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getEncryptedKeyForStudent(courseId, email);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "     * Populates fields that need dynamic generation in a question."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackQuestionAttributes the question to populate"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param emailOfEntityDoingQuestion the email of the entity doing the question"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "     *                                  it can be {@code null}."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionAttributes);"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(emailOfEntityDoingQuestion);"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the googleId associated with the student."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the associated googleId of an instructor."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a student."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created student."
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the student is not valid."
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student already exists in the Datastore."
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes createStudent(StudentAttributes student)"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getCourse());"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getEmail());"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.createStudent(student);"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a student by {@link StudentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the student cannot be found"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student cannot be updated"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent student"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.updateStudentCascade(updateOptions);"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the student if there is no account exist for him."
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param key the encrypted registration key"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes joinCourseForStudent(String key, String googleId)"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.joinCourseForStudent(key, googleId);"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByInstructor(fsa, userEmail);"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, userEmail);"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentCascade(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentCascade(courseId, studentEmail);"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all the students in the course cascade their associated responses and comments."
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentsInCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentsInCourseCascade(courseId);"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Checks if a course has sections for each team"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "     *  * All parameters are non-null."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasIndicatedSections(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.hasIndicatedSections(courseId);"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates sections for any limit violations and teams for any team name violations."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateSectionsAndTeams(List, String)"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateSectionsAndTeams(studentList, courseId);"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all students of a team."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForTeam(teamName, courseId);"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates search documents for the given students."
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putStudentDocuments(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.putDocuments(students);"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates students list of a course in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseStudentListAsCsv(String courseId, String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseStudentListAsCsv(courseId, googleId);"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback session."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback session"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the session is not valid"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the session already exist"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSession);"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the data storage."
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found or in recycle bin."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the recycle bin."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionDetails(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsListForInstructor(String, boolean)"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions in Recycle Bin WITHOUT their response"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructor(instructor);"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForInstructor(String, String, String)"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForInstructor(String feedbackSessionName,"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String courseId,"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String userEmail)"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForStudent(String, String, String)"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String courseId,"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String userEmail)"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for student."
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForStudent(FeedbackQuestionAttributes, String, String)"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForStudent("
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, String giverEmail, String giverTeam) {"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverTeam);"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForStudent(question, giverEmail, giverTeam);"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for instructor."
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes, String)"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes question, String giverEmail) {"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForInstructor(question, giverEmail);"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackSessionName,"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String courseId,"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          int questionNumber) {"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackSessionName, courseId, questionNumber);"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a list of all questions for the given session that"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "     * students can view/submit."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a {@code List} of all questions for the given session that"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "     * instructor can view/submit."
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String instructorEmail) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, instructorEmail);"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryAsCsv(String, String,"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, String, boolean, boolean)"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryAsCsv("
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail,"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String questionId)"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, questionId,"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) within a section in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryInSectionAsCsv(String, String, String,"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, SectionDetail, String, boolean, boolean)"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail, String section,"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "            SectionDetail sectionDetail, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, section, sectionDetail,"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user in the course."
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse(String courseId, String userEmail)"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForUserInCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasStudentSubmittedFeedback(FeedbackSessionAttributes fsa, String studentEmail) {"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, studentEmail);"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAdjust email sending status if necessary."
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback session"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addStudentRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteStudentFromRespondentList(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "     * Publishes a feedback session."
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the published feedback session"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if session is already published"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unpublishes a feedback session."
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the unpublished feedback session"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "     *             if the feedback session is not ready to be unpublished."
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback session cascade to its associated questions, responses and comments."
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "     * Soft-deletes a specific session to Recycle Bin."
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a specific session from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all sessions from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllFeedbackSessionsFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreAllFeedbackSessionsFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new feedback question."
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created question"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the question is invalid"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestion);"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the question number of questions in the same session."
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the existing response of the question."
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback question"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback question cannot be found"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback question cascade its responses and comments."
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eSilently fail if question does not exist."
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated due the deletion of question."
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackQuestionCascade(String questionId) {"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(questionId);"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether there are responses for a question."
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all copiable questions for an instructor\u003cbr\u003e"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getCopiableFeedbackQuestionsForInstructor(String googleId)"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getCopiableFeedbackQuestionsForInstructor(googleId);"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all questions for a feedback session.\u003cbr\u003e"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResponseStatus(String, String)"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResponseStatus(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the student for a feedback session."
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            String courseId, String userEmail)"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session within the given range"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(viewType);"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorWithinRangeFromView(feedbackSessionName,"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               courseId, userEmail,"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               range, viewType);"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a section within the given range"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session to a section within the given range"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a set of giver identifiers that has at least one response under a feedback session."
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestion(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        userEmail, questionId);"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "     * in a given section."
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String questionId, String selectedSection, SectionDetail selectedSectionDetail)"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSection);"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSectionDetail);"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "                                            feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "                                            questionId, selectedSection, selectedSectionDetail);"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session."
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail, String section, SectionDetail sectionDetail)"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                     userEmail, section, sectionDetail);"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from student or his team for the given question."
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, StudentAttributes student) {"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from instructor for the given question."
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorAttributes);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseId);"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId,"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String giverEmail,"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String recipient) {"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(recipient);"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback response."
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback response"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the response is not valid"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response already exist"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasGiverRespondedForSession(String userEmail, String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasGiverRespondedForSession(userEmail, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasResponsesForCourse(String courseId) {"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isOpenOrPublishedEmailSentForTheCourse(courseId);"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade updates its associated feedback response comment"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "     * (e.g. associated response ID, giverSection and recipientSection)."
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "     * as question-giver-recipient is the primary key."
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback response"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response cannot be updated"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent response"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback response cascade its associated comments."
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will NOT be updated."
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseCascade(String responseId) {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create a feedback response comment, and return the created comment."
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes createFeedbackResponseComment("
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes feedbackResponseComment)"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment("
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "            String responseId, String giverEmail, Instant creationDate) {"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(creationDate);"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(responseId, giverEmail, creationDate);"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseCommentAttributes\u003e getFeedbackResponseCommentForGiver(String courseId,"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String giverEmail) {"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseCommentsForGiver(courseId, giverEmail);"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates or updates document for the given comment."
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocument(FeedbackResponseCommentAttributes)"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocument(FeedbackResponseCommentAttributes comment) {"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocument(comment);"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given comments."
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putFeedbackResponseCommentDocuments(List\u003cFeedbackResponseCommentAttributes\u003e comments) {"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocuments(comments);"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for FeedbackResponseComment. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentSearchResultBundle searchFeedbackResponseComments(String queryString,"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.searchFeedbackResponseComments(queryString, instructors);"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated comment"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a comment."
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseComment(long commentId) {"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getArchivedCourseIds(List\u003cCourseAttributes\u003e allCourses,"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, InstructorAttributes\u003e instructorsForCourses) {"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(allCourses);"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorsForCourses);"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "            getFeedbackResponsesForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of sessions that require automated emails to be sent as they are published."
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSectionForTeam(String courseId, String teamName) {"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getSectionForTeam(courseId, teamName);"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "     * Persists the given data bundle to the datastore."
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#persistDataBundle(DataBundle)"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "    public void persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.persistDataBundle(dataBundle);"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the given data bundle from the datastore."
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#removeDataBundle(DataBundle)"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeDataBundle(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.removeDataBundle(dataBundle);"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "     * Puts searchable documents from the data bundle to the datastore."
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#putDocuments(DataBundle)"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocuments(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.putDocuments(dataBundle);"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "madanalogy": 4,
      "-": 2013
    }
  },
  {
    "path": "src/main/java/teammates/logic/core/AccountsLogic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.AccountsDb;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles operations related to accounts."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * @see AccountAttributes"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * @see AccountsDb"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public final class AccountsLogic {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static AccountsLogic instance \u003d new AccountsLogic();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsDb accountsDb \u003d new AccountsDb();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private AccountsLogic() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // prevent initialization"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AccountsLogic inst() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an account."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created account"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the account is not valid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the account already exists in the Datastore."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes createAccount(AccountAttributes accountData)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsDb.createEntity(accountData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsDb.getAccount(googleId);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAccountPresent(String googleId) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsDb.getAccount(googleId) !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAccountAnInstructor(String googleId) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes a \u003d accountsDb.getAccount(googleId);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return a !\u003d null \u0026\u0026 a.isInstructor;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseInstitute(String courseId) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes cd \u003d coursesLogic.getCourse(courseId);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Trying to getCourseInstitute for inexistent course with id \" + courseId, cd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d instructorsLogic.getInstructorsForCourse(cd.getId());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertTrue(\"Course has no instructors: \" + cd.getId(), !instructorList.isEmpty());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // Retrieve institute field from one of the instructors of the course"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        String institute \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructorList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            String instructorGoogleId \u003d instructor.googleId;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorGoogleId \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            AccountAttributes instructorAcc \u003d accountsDb.getAccount(instructorGoogleId);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorAcc !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                institute \u003d instructorAcc.institute;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotEmpty(\"No institute found for the course\", institute);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return institute;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Joins the user as a student."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes joinCourseForStudent(String registrationKey, String googleId)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d validateStudentJoinRequest(registrationKey, googleId);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // Register the student"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        student.googleId \u003d googleId;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            studentsLogic.updateStudentCascade("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    StudentAttributes.updateOptionsBuilder(student.course, student.email)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withGoogleId(student.googleId)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Student disappeared while trying to register \" + TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        if (accountsDb.getAccount(googleId) \u003d\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            createStudentAccount(student);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return student;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Joins the user as an instructor and sets the institute if it is not null."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * If the given institute is null, the instructor is given the institute of an existing instructor of the same course."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute, String mac)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor \u003d validateInstructorJoinRequest(encryptedKey, googleId, institute, mac);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // Register the instructor"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor.googleId \u003d googleId;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorsLogic.updateInstructorByEmail("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    InstructorAttributes.updateOptionsWithEmailBuilder(instructor.courseId, instructor.email)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withGoogleId(instructor.googleId)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Instructor disappeared while trying to register \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    + TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes account \u003d accountsDb.getAccount(googleId);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        String instituteToSave \u003d institute \u003d\u003d null ? getCourseInstitute(instructor.courseId) : institute;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        if (account \u003d\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                createAccount(AccountAttributes.builder(googleId)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(instructor.name)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEmail(instructor.email)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withInstitute(instituteToSave)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withIsInstructor(true)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Account already exists.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            makeAccountInstructor(googleId);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        // Update the googleId of the student entity for the instructor which was created from sample data."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d studentsLogic.getStudentForEmail(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student !\u003d null) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            student.googleId \u003d googleId;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            studentsLogic.updateStudentCascade("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    StudentAttributes.updateOptionsBuilder(student.course, student.email)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withGoogleId(student.googleId)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructor;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private InstructorAttributes validateInstructorJoinRequest(String encryptedKey,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                                                               String googleId,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                                                               String institute,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                                                               String mac)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            throws EntityDoesNotExistException, EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        if (institute !\u003d null \u0026\u0026 !StringHelper.isCorrectSignature(institute, mac)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            throw new InvalidParametersException(\"Institute authentication failed.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorForKey \u003d instructorsLogic.getInstructorForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructorForKey \u003d\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"No instructor with given registration key: \" + encryptedKey);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructorForKey.isRegistered()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorForKey.googleId.equals(googleId)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                AccountAttributes existingAccount \u003d accountsDb.getAccount(googleId);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                if (existingAccount !\u003d null \u0026\u0026 existingAccount.isInstructor) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check if this Google ID has already joined this course"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes existingInstructor \u003d"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                    instructorsLogic.getInstructorForGoogleId(instructorForKey.courseId, googleId);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            if (existingInstructor !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new EntityAlreadyExistsException(\"Instructor has already joined course\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorForKey;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes validateStudentJoinRequest(String encryptedKey, String googleId)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentRole \u003d studentsLogic.getStudentForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentRole \u003d\u003d null) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"No student with given registration key: \" + encryptedKey);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentRole.isRegistered()) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityAlreadyExistsException(\"Student has already joined course\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check if this Google ID has already joined this course"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes existingStudent \u003d"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentForCourseIdAndGoogleId(studentRole.course, googleId);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        if (existingStudent !\u003d null) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityAlreadyExistsException(\"Student has already joined course\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentRole;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "     * Downgrades an instructor account to student account."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade deletes all instructors associated with the account."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorsForGoogleIdCascade(googleId);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            accountsDb.updateAccount("
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    AccountAttributes.updateOptionsBuilder(googleId)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withIsInstructor(false)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            );"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Invalid account data detected unexpectedly \""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"while removing instruction privileges from account :\" + googleId + e.getMessage());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * Makes an account as an instructor account."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public void makeAccountInstructor(String googleId) throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsDb.updateAccount("
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                AccountAttributes.updateOptionsBuilder(googleId)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withIsInstructor(true)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build()"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes both instructor and student privileges, as long as the account and associated student profile."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAccountCascade(String googleId) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        if (accountsDb.getAccount(googleId) \u003d\u003d null) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deleteStudentProfile(googleId);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        // to prevent orphan course"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorsToDelete \u003d"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForGoogleId(googleId, false);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructorToDelete : instructorsToDelete) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorsLogic.getInstructorsForCourse(instructorToDelete.getCourseId()).size() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                // the instructor is the last instructor in the course"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                coursesLogic.deleteCourseCascade(instructorToDelete.getCourseId());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorsForGoogleIdCascade(googleId);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentsForGoogleIdCascade(googleId);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsDb.deleteAccount(googleId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a student account."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    private void createStudentAccount(StudentAttributes student)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes account \u003d AccountAttributes.builder(student.googleId)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(student.email)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(student.name)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsInstructor(false)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstitute(getCourseInstitute(student.course))"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsDb.createEntity(account);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 13,
      "-": 291
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/ActionFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.HttpServletRequest;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPut;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ActionMappingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const.ResourceURIs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Generates the matching {@link Action} for a given URI and request method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class ActionFactory {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String GET \u003d HttpGet.METHOD_NAME;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String POST \u003d HttpPost.METHOD_NAME;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PUT \u003d HttpPut.METHOD_NAME;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNTS_SEARCH, GET, SearchAccountsAction.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        //STUDENTS APIs"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        //STUDENT APIs"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, POST, CreateFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, PUT, UpdateFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, DELETE, DeleteFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SUBMISSION_CONFIRMATION, POST, ConfirmFeedbackSessionSubmissionAction.class);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.LOCAL_DATE_TIME, GET, GetLocalDateTimeInfoAction.class);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_ENROLL_STUDENTS, GET, GetCourseEnrollStudentsAction.class);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS_CSV, GET, GetStudentsAsCsvAction.class);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH, GET, SearchStudentsAndFeedbackSessionDataAction.class);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        ACTION_MAPPINGS.computeIfAbsent(ResourceURIs.URI_PREFIX + uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the matching {@link Action} object for the URI and method in {@code req}."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    public Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        String uri \u003d req.getRequestURI();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        if (uri.contains(\";\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            uri \u003d uri.split(\";\")[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Action action \u003d getAction(uri, method);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        action.init(req);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private Action getAction(String uri, String method) throws ActionMappingException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!ACTION_MAPPINGS.containsKey(uri)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        Class\u003c? extends Action\u003e controllerClass \u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (controllerClass \u003d\u003d null) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                    HttpStatus.SC_METHOD_NOT_ALLOWED);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            return controllerClass.newInstance();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Could not create the action for \" + uri + \": \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    + TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 2,
      "-": 156
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/BinCourseAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.CourseData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Move a course to the recycle bin."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class BinCourseAction extends Action {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!userInfo.isInstructor) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new UnauthorizedAccessException(\"Instructor privilege is required to access this resource.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String idOfCourseToBin \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(idOfCourseToBin, userInfo.id),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getCourse(idOfCourseToBin), Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String idOfCourseToBin \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes courseAttributes \u003d logic.getCourse(idOfCourseToBin);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            courseAttributes.deletedAt \u003d logic.moveCourseToRecycleBin(idOfCourseToBin);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(new CourseData(courseAttributes));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityNotFoundException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 43
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailSendingStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.api.EmailGenerator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResponse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Confirm the submission of a feedback session."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfirmFeedbackSessionSubmissionAction extends BasicFeedbackSubmissionAction {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.PUBLIC;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySessionOpenExceptForModeration(feedbackSession);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNotPreview();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (intent) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        case STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        case INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            checkAccessControlForInstructorFeedbackSubmission(instructorAttributes, feedbackSession);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isSubmissionEmailConfirmationEmailRequested \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                getBooleanRequestParamValue(Const.ParamsNames.SEND_SUBMISSION_EMAIL);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (intent) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        case STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasStudentRespondedForSession \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    logic.hasGiverRespondedForSession(studentAttributes.getEmail(), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasStudentRespondedForSession) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, studentAttributes.getEmail(), false, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, studentAttributes.getEmail(), false, true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSubmissionEmailConfirmationEmailRequested) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                email \u003d new EmailGenerator().generateFeedbackSubmissionConfirmationEmailForStudent("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            feedbackSession, studentAttributes, Instant.now());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasInstructorRespondedForSession \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    logic.hasGiverRespondedForSession(instructorAttributes.getEmail(), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasInstructorRespondedForSession) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, instructorAttributes.getEmail(), true, false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, instructorAttributes.getEmail(), true, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSubmissionEmailConfirmationEmailRequested) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                email \u003d new EmailGenerator().generateFeedbackSubmissionConfirmationEmailForInstructor("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSession, instructorAttributes, Instant.now());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        if (email !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            EmailSendingStatus status \u003d emailSender.sendEmail(email);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!status.isSuccess()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return new JsonResult(new ConfirmationResponse(ConfirmationResult.SUCCESS_BUT_EMAIL_FAIL_TO_SEND,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Submission confirmation email failed to send\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(new ConfirmationResponse(ConfirmationResult.SUCCESS, \"Submission confirmed\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 106
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/CreateAccountAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Config;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Templates;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.JoinLinkData;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.AccountCreateRequest;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a new instructor account with sample courses."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class CreateAccountAction extends Action {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // Only admins can create new accounts"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!userInfo.isAdmin) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new UnauthorizedAccessException(\"Admin privilege is required to access this resource.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountCreateRequest createRequest \u003d getAndValidateRequestBody(AccountCreateRequest.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorName \u003d createRequest.getInstructorName().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorEmail \u003d createRequest.getInstructorEmail().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            courseId \u003d importDemoData(instructorEmail, instructorName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException | EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(e.getMessage(), HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorInstitution \u003d createRequest.getInstructorInstitution().trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d logic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRegistrationKey(StringHelper.encrypt(instructorList.get(0).key))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstructorInstitution(instructorInstitution)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                .withInstitutionMac(StringHelper.generateSignature(instructorInstitution))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .withParam(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                .toAbsoluteString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d emailGenerator.generateNewInstructorAccountJoinEmail("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorList.get(0).email, instructorName, joinLink);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        emailSender.sendEmail(email);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        JoinLinkData output \u003d new JoinLinkData(joinLink);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Imports demo course for the new instructor."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the ID of demo course"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private String importDemoData(String instructorEmail, String instructorName)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d generateDemoCourseId(instructorEmail);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        String jsonString \u003d Templates.populateTemplate(Templates.INSTRUCTOR_SAMPLE_DATA,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                // replace email"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                \"teammates.demo.instructor@demo.course\", instructorEmail,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                // replace name"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Demo_Instructor\", instructorName,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                // replace course"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                \"demo.course\", courseId);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        DataBundle data \u003d JsonUtils.fromJson(jsonString, DataBundle.class);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.persistDataBundle(data);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e frComments \u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getFeedbackResponseCommentForGiver(courseId, instructorEmail);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d logic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d logic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.putFeedbackResponseCommentDocuments(frComments);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.putStudentDocuments(students);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.putInstructorDocuments(instructors);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseId;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    // Strategy to Generate New Demo Course Id:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    // a. keep the part of email before \"@\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    //    replace \"@\" with \".\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    //    replace email host with their first 3 chars. eg, gmail.com -\u003e gma"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    //    append \"-demo\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    //    to sum up: lebron@gmail.com -\u003e lebron.gma-demo"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    //"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    // b. if the generated courseId already exists, create another one by appending a integer to the previous courseId."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    //    if the newly generate id still exists, increment the id, until we find a feasible one"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    //    eg."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    //    lebron@gmail.com -\u003e lebron.gma-demo  // already exists!"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    //    lebron@gmail.com -\u003e lebron.gma-demo0 // already exists!"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    //    lebron@gmail.com -\u003e lebron.gma-demo1 // already exists!"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    //    ..."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    //    lebron@gmail.com -\u003e lebron.gma-demo99 // already exists!"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    //    lebron@gmail.com -\u003e lebron.gma-demo100 // found! a feasible id"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    //"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    // c. in any cases(a or b), if generated Id is longer than FieldValidator.COURSE_ID_MAX_LENGTH, shorten the part"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    //    before \"@\" of the initial input email, by continuously removing its last character"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generate a course ID for demo course, and if the generated id already exists, try another one."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructorEmail is the instructor email."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return generated course id"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private String generateDemoCourseId(String instructorEmail) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        String proposedCourseId \u003d generateNextDemoCourseId(instructorEmail, FieldValidator.COURSE_ID_MAX_LENGTH);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        while (logic.getCourse(proposedCourseId) !\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            proposedCourseId \u003d generateNextDemoCourseId(proposedCourseId, FieldValidator.COURSE_ID_MAX_LENGTH);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return proposedCourseId;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generate a course ID for demo course from a given email."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructorEmail is the instructor email."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the first proposed course id. eg.lebron@gmail.com -\u003e lebron.gma-demo"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getDemoCourseIdRoot(String instructorEmail) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] emailSplit \u003d instructorEmail.split(\"@\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        String username \u003d emailSplit[0];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        String host \u003d emailSplit[1];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String head \u003d StringHelper.replaceIllegalChars(username, FieldValidator.REGEX_COURSE_ID, \u0027_\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String hostAbbreviation \u003d host.substring(0, Math.min(host.length(), 3));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return head + \".\" + hostAbbreviation + \"-demo\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generate a course ID for demo course from a given email or a generated course Id."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eHere we check the input string is an email or course Id and handle them accordingly;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * check the resulting course id, and if bigger than maximumIdLength, cut it so that it equals maximumIdLength."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructorEmailOrProposedCourseId is the instructor email or a proposed course id that already exists."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param maximumIdLength is the maximum resulting id length allowed, above which we will cut the part before \"@\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the proposed course id, e.g.:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003cul\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003cli\u003elebron@gmail.com -\u003e lebron.gma-demo\u003c/li\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003cli\u003elebron.gma-demo -\u003e lebron.gma-demo0\u003c/li\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003cli\u003elebron.gma-demo0 -\u003e lebron.gma-demo1\u003c/li\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003cli\u003e012345678901234567890123456789.gma-demo9 -\u003e 01234567890123456789012345678.gma-demo10 (being cut)\u003c/li\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     *         \u003c/ul\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    private String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isFirstCourseId \u003d instructorEmailOrProposedCourseId.contains(\"@\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isFirstCourseId) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            return StringHelper.truncateHead(getDemoCourseIdRoot(instructorEmailOrProposedCourseId), maximumIdLength);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isFirstTimeDuplicate \u003d instructorEmailOrProposedCourseId.endsWith(\"-demo\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isFirstTimeDuplicate) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            return StringHelper.truncateHead(instructorEmailOrProposedCourseId + \"0\", maximumIdLength);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        int lastIndexOfDemo \u003d instructorEmailOrProposedCourseId.lastIndexOf(\"-demo\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        String root \u003d instructorEmailOrProposedCourseId.substring(0, lastIndexOfDemo);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        int previousDedupSuffix \u003d Integer.parseInt(instructorEmailOrProposedCourseId.substring(lastIndexOfDemo + 5));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.truncateHead(root + \"-demo\" + (previousDedupSuffix + 1), maximumIdLength);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 190
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/GetStudentProfileAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.StudentProfileData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Get a student\u0027s profile by an instructor, a classmate of the student, or the student itself."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GetStudentProfileAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_NOT_STUDENT_ACCOUNT \u003d \"You did not login as a student,\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            + \" so you cannot view your profile\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_STUDENT_NOT_FOUND \u003d \"The student is not in the course you are given,\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            + \" so you cannot access the profile.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_STUDENT_NOT_REGISTERED \u003d \"The student has not registered,\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            + \" and does not have profile\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String studentEmail \u003d getRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentEmail \u003d\u003d null || courseId \u003d\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            // Student access his own profile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInfo.isStudent) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new UnauthorizedAccessException(MESSAGE_NOT_STUDENT_ACCOUNT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            // Access someone else\u0027s profile"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes student \u003d logic.getStudentForEmail(courseId, studentEmail);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (student \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new UnauthorizedAccessException(MESSAGE_STUDENT_NOT_FOUND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            gateKeeper.verifyAccessibleForCurrentUserAsInstructorOrTeamMemberOrAdmin(userInfo.id, courseId,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    student.section, studentEmail);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        String studentId;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String studentEmail \u003d getRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentEmail \u003d\u003d null || courseId \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            studentId \u003d userInfo.id;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes student \u003d logic.getStudentForEmail(courseId, studentEmail);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            studentId \u003d student.getGoogleId();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (StringHelper.isEmpty(studentId)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            // The student has not registered."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(MESSAGE_STUDENT_NOT_REGISTERED, HttpStatus.SC_NOT_FOUND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes studentProfile \u003d logic.getStudentProfile(studentId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        String name \u003d logic.getAccount(studentId).name;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (studentProfile \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            // create one on the fly"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            studentProfile \u003d StudentProfileAttributes.builder(studentId).build();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileData output \u003d new StudentProfileData(name, studentProfile);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        // If student requesting and is not the student\u0027s own profile, hide some fields"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (userInfo.isStudent \u0026\u0026 !studentId.equals(userInfo.id)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            output.hideInformationWhenViewedByOtherStudent();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(output);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 78,
      "hcwong": 5
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/JoinCourseAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Action: joins a course for a student/instructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class JoinCourseAction extends Action {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // Any user can use a join link as long as its parameters are valid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String regkey \u003d getNonNullRequestParamValue(Const.ParamsNames.REGKEY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String entityType \u003d getNonNullRequestParamValue(Const.ParamsNames.ENTITY_TYPE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (entityType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        case Const.EntityType.STUDENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            return joinCourseForStudent(regkey);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        case Const.EntityType.INSTRUCTOR:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            String institute \u003d getRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            String mac \u003d getRequestParamValue(Const.ParamsNames.INSTITUTION_MAC);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return joinCourseForInstructor(regkey, institute, mac);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(\"Error: invalid entity type\", HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private JsonResult joinCourseForStudent(String regkey) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            student \u003d logic.joinCourseForStudent(regkey, userInfo.id);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException ednee) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(ednee.getMessage(), HttpStatus.SC_NOT_FOUND);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityAlreadyExistsException eaee) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(eaee.getMessage(), HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException ipe) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(ipe.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sendJoinEmail(student.course, student.name, student.email, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(\"Student successfully joined course\", HttpStatus.SC_OK);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private JsonResult joinCourseForInstructor(String regkey, String institute, String mac) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            instructor \u003d logic.joinCourseForInstructor(regkey, userInfo.id, institute, mac);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException ednee) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(ednee.getMessage(), HttpStatus.SC_NOT_FOUND);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityAlreadyExistsException eaee) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(eaee.getMessage(), HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException ipe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(ipe.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        sendJoinEmail(instructor.courseId, instructor.name, instructor.email, true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(\"Instructor successfully joined course\", HttpStatus.SC_OK);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void sendJoinEmail(String courseId, String userName, String userEmail, boolean isInstructor) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes course \u003d logic.getCourse(courseId);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d emailGenerator.generateUserCourseRegisteredEmail("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                userName, userEmail, userInfo.id, isInstructor, course);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        emailSender.sendEmail(email);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 4,
      "-": 84
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/SearchInstructorsAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.InstructorData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.InstructorsData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Searches for instructors."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class SearchInstructorsAction extends Action {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Only admins can search for instructors"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (!userInfo.isAdmin) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new UnauthorizedAccessException(\"Admin privilege is required to access this resource.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String searchKey \u003d getNonNullRequestParamValue(Const.ParamsNames.ADMIN_SEARCH_KEY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d logic.searchInstructorsInWholeSystem(searchKey).instructorList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData instructorsData \u003d new InstructorsData(instructors);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Hide information"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        instructorsData.getInstructors().forEach(InstructorData::hideInformationForSearch);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return new JsonResult(instructorsData);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 38
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.StudentData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.StudentsData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Action for searching for students."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class SearchStudentsAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Only instructors and admins can search for student"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (userInfo.isStudent \u0026\u0026 !userInfo.isInstructor) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new UnauthorizedAccessException(\"Instructor or Admin privilege is required to access this resource.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String searchKey \u003d getNonNullRequestParamValue(Const.ParamsNames.SEARCH_KEY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        List\u003cStudentAttributes\u003e students;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData studentsData;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Search for students"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (userInfo.isAdmin) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            students \u003d logic.searchStudentsInWholeSystem(searchKey).studentList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructors \u003d logic.getInstructorsForGoogleId(userInfo.id);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            students \u003d logic.searchStudents(searchKey, instructors).studentList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        studentsData \u003d new StudentsData(students);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Hide information"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        studentsData.getStudents().forEach(StudentData::hideLastName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (!(userInfo.isAdmin)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            studentsData.getStudents().forEach(StudentData::hideInformationForInstructor);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return new JsonResult(studentsData);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 52
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/endpoints/ResourceEndpoints.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package teammates.ui.webapi.endpoints;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import teammates.common.util.Const.ResourceURIs;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * API endpoints for resources."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public enum ResourceEndpoints {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    //CHECKSTYLE.OFF:JavadocVariable"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    URI_PREFIX(ResourceURIs.URI_PREFIX),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LOGOUT(ResourceURIs.LOGOUT),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DATABUNDLE(ResourceURIs.DATABUNDLE),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    EXCEPTION(ResourceURIs.EXCEPTION),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    AUTH(ResourceURIs.AUTH),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT(ResourceURIs.ACCOUNT),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNTS_SEARCH(ResourceURIs.ACCOUNTS_SEARCH),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE(ResourceURIs.COURSE),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BIN_COURSE(ResourceURIs.BIN_COURSE),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSES(ResourceURIs.COURSES),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESULT(ResourceURIs.RESULT),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS(ResourceURIs.STUDENTS),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT(ResourceURIs.STUDENT),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION(ResourceURIs.SESSION),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_STATS(ResourceURIs.SESSION_STATS),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSIONS(ResourceURIs.SESSIONS),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BIN_SESSION(ResourceURIs.BIN_SESSION),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    QUESTIONS(ResourceURIs.QUESTIONS),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    QUESTION(ResourceURIs.QUESTION),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSE(ResourceURIs.RESPONSE),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSES(ResourceURIs.RESPONSES),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SUBMISSION_CONFIRMATION(ResourceURIs.SUBMISSION_CONFIRMATION),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    JOIN(ResourceURIs.JOIN),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TIMEZONE(ResourceURIs.TIMEZONE),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LOCAL_DATE_TIME(ResourceURIs.LOCAL_DATE_TIME),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    NATIONALITIES(ResourceURIs.NATIONALITIES),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS_CSV(ResourceURIs.STUDENTS_CSV),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH(ResourceURIs.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_ENROLL_STUDENTS(ResourceURIs.COURSE_ENROLL_STUDENTS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    //CHECKSTYLE.ON:JavadocVariable"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private final String url;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ResourceEndpoints(String s) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.url \u003d s;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 73
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/endpoints/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Contains all API endpoints."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package teammates.ui.webapi.endpoints;"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/ConfirmationResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * The output format of {@link teammates.ui.webapi.action.ConfirmFeedbackSessionSubmissionAction}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class ConfirmationResponse extends ApiOutput {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private final ConfirmationResult result;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public ConfirmationResponse(ConfirmationResult result, String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.result \u003d result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public ConfirmationResult getResult() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 22
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/ConfirmationResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * The result of the confirmation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public enum ConfirmationResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * The submission has been confirmed successfully."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    SUCCESS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * The submission has been confirmed but the confirmation email failed to send."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    SUCCESS_BUT_EMAIL_FAIL_TO_SEND"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 17
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/InstructorData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javax.annotation.Nullable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * The API output format of an instructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class InstructorData extends ApiOutput {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String googleId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String courseId;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Boolean isDisplayedToStudents;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String displayedToStudentsAs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorPermissionRole role;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private JoinState joinState;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorData(InstructorAttributes instructorAttributes) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.googleId \u003d instructorAttributes.getGoogleId();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseId \u003d instructorAttributes.getCourseId();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d instructorAttributes.getEmail();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.role \u003d instructorAttributes.getRole() \u003d\u003d null ? null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                : InstructorPermissionRole.getEnum(instructorAttributes.getRole());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDisplayedToStudents \u003d instructorAttributes.isDisplayedToStudents();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayedToStudentsAs \u003d instructorAttributes.getDisplayedName();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d instructorAttributes.getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.joinState \u003d instructorAttributes.isRegistered() ? JoinState.JOINED : JoinState.NOT_JOINED;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getGoogleId() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return googleId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGoogleId(String googleId) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.googleId \u003d googleId;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseId() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseId;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEmail() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorPermissionRole getRole() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return role;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRole(InstructorPermissionRole role) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.role \u003d role;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public Boolean getIsDisplayedToStudents() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return isDisplayedToStudents;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setIsDisplayedToStudents(Boolean displayedToStudents) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        isDisplayedToStudents \u003d displayedToStudents;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDisplayedToStudentsAs() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return displayedToStudentsAs;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setDisplayedToStudentsAs(String displayedToStudentsAs) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.displayedToStudentsAs \u003d displayedToStudentsAs;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public JoinState getJoinState() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return joinState;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setJoinState(JoinState joinState) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        this.joinState \u003d joinState;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Hides some attributes for search result."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void hideInformationForSearch() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setRole(null);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setDisplayedToStudentsAs(null);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setIsDisplayedToStudents(null);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 21,
      "-": 75
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/StudentData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javax.annotation.Nullable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * The API output format of {@link StudentAttributes}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class StudentData extends ApiOutput {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String email;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String courseId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String googleId;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String lastName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Nullable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private String comments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private JoinState joinState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String teamName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String sectionName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentData(StudentAttributes studentAttributes) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d studentAttributes.getEmail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseId \u003d studentAttributes.getCourse();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d studentAttributes.getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.googleId \u003d studentAttributes.getGoogleId();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.lastName \u003d studentAttributes.getLastName();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.joinState \u003d studentAttributes.isRegistered() ? JoinState.JOINED : JoinState.NOT_JOINED;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.comments \u003d studentAttributes.getComments();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.teamName \u003d studentAttributes.getTeam();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sectionName \u003d studentAttributes.getSection();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEmail() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseId() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return courseId;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String getGoogleId() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return googleId;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getLastName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return lastName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getComments() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return comments;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public JoinState getJoinState() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return joinState;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTeamName() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return teamName;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSectionName() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return sectionName;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setGoogleId(String googleId) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.googleId \u003d googleId;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setLastName(String lastName) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.lastName \u003d lastName;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setComments(String comments) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.comments \u003d comments;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setJoinState(JoinState joinState) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.joinState \u003d joinState;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Hides last name."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void hideLastName() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setLastName(null);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Hides some attributes to instructor."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void hideInformationForInstructor() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setGoogleId(null);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        setComments(null);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 43,
      "-": 63
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/StudentProfileData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes.Gender;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * The API output for the student profile."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class StudentProfileData extends ApiOutput {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String shortName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String email;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private String institute;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private String nationality;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Gender gender;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private String moreInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileData(String name, StudentProfileAttributes profileAttributes) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.shortName \u003d profileAttributes.shortName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d profileAttributes.email;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.institute \u003d profileAttributes.institute;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.nationality \u003d profileAttributes.nationality;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.gender \u003d profileAttributes.gender;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.moreInfo \u003d profileAttributes.moreInfo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getMoreInfo() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return moreInfo;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public Gender getGender() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getNationality() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return nationality;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getInstitute() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return institute;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEmail() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getShortName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return shortName;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Hides certain fields when profile is requested by another student."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void hideInformationWhenViewedByOtherStudent() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.email \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.shortName \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 55,
      "hcwong": 8
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/logic/AccountsLogicTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeMethod;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AccountsLogic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.ProfilesLogic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.AccountsDb;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link AccountsLogic}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class AccountsLogicTest extends BaseLogicTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // test data is refreshed before each test case"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeMethod"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void refreshTestData() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testCreateAccount() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical success case\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes accountToCreate \u003d AccountAttributes.builder(\"id\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"name\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(\"test@email.com\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstitute(\"dev\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsInstructor(true)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.createAccount(accountToCreate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(accountToCreate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(\"id\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"invalid parameters exception case\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        accountToCreate \u003d AccountAttributes.builder(\"\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"name\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(\"test@email.com\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstitute(\"dev\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsInstructor(true)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes[] finalAccount \u003d new AccountAttributes[] { accountToCreate };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidParametersException.class, () -\u003e accountsLogic.createAccount(finalAccount[0]));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccountFunctions() throws Exception {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test isAccountPresent\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(accountsLogic.isAccountPresent(\"idOfInstructor1OfCourse1\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(accountsLogic.isAccountPresent(\"student1InCourse1\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.isAccountPresent(\"id-does-not-exist\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test isAccountAnInstructor\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(accountsLogic.isAccountAnInstructor(\"idOfInstructor1OfCourse1\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.isAccountAnInstructor(\"student1InCourse1\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.isAccountAnInstructor(\"id-does-not-exist\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test downgradeInstructorToStudentCascade\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(\"idOfInstructor2OfCourse1\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.isAccountAnInstructor(\"idOfInstructor2OfCourse1\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(\"student1InCourse1\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.isAccountAnInstructor(\"student1InCourse1\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(EntityDoesNotExistException.class, () -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            accountsLogic.downgradeInstructorToStudentCascade(\"id-does-not-exist\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test makeAccountInstructor\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.makeAccountInstructor(\"student2InCourse1\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(accountsLogic.isAccountAnInstructor(\"student2InCourse1\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(\"student2InCourse1\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(EntityDoesNotExistException.class, () -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            accountsLogic.makeAccountInstructor(\"id-does-not-exist\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testJoinCourseForStudent() throws Exception {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        String correctStudentId \u003d \"correctStudentId\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d \"idOfTypicalCourse1\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        String originalEmail \u003d \"original@email.com\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create correct student with original@email.com"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentData \u003d StudentAttributes"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(courseId, originalEmail)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"name\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSectionName(\"sectionName\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeamName(\"teamName\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComment(\"\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudent(studentData);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData \u003d StudentsLogic.inst().getStudentForEmail(courseId,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                originalEmail);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes finalStudent \u003d studentData;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(studentData);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: wrong key\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        String wrongKey \u003d StringHelper.encrypt(\"wrongkey\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForStudent(wrongKey, correctStudentId));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"No student with given registration key: \" + wrongKey, ednee.getMessage());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: invalid parameters\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForStudent(StringHelper.encrypt(finalStudent.key), \"wrong student\"));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(FieldValidator.REASON_INCORRECT_FORMAT, ipe.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: googleID belongs to an existing student in the course\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        String existingId \u003d \"AccLogicT.existing.studentId\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes existingStudent \u003d StudentAttributes"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(courseId, \"differentEmail@email.com\")"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"name\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSectionName(\"sectionName\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeamName(\"teamName\")"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComment(\"\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGoogleId(existingId)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudent(existingStudent);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForStudent(StringHelper.encrypt(finalStudent.key), existingId));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Student has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: without encryption and account already exists\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes accountData \u003d AccountAttributes.builder(correctStudentId)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"nameABC\")"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEmail(\"real@gmail.com\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstitute(\"TEAMMATES Test Institute 1\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                .withIsInstructor(true)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.createAccount(accountData);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.joinCourseForStudent(StringHelper.encrypt(studentData.key), correctStudentId);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData.googleId \u003d accountData.googleId;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(studentData);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                correctStudentId,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getStudentForEmail(studentData.course, studentData.email).googleId);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: already joined\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForStudent(StringHelper.encrypt(finalStudent.key), correctStudentId));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Student has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: valid key belongs to a different user\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForStudent(StringHelper.encrypt(finalStudent.key), \"wrongstudent\"));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Student has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: with encryption and new account to be created\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(correctStudentId);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        originalEmail \u003d \"email2@gmail.com\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData \u003d StudentAttributes"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(courseId, originalEmail)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"name\")"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSectionName(\"sectionName\")"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeamName(\"teamName\")"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComment(\"\")"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudent(studentData);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData \u003d StudentsLogic.inst().getStudentForEmail(courseId,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                originalEmail);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        String encryptedKey \u003d StringHelper.encrypt(studentData.key);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.joinCourseForStudent(encryptedKey, correctStudentId);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData.googleId \u003d correctStudentId;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(studentData);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(correctStudentId,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getStudentForEmail(studentData.course, studentData.email).googleId);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        // check that we have the corresponding new account created."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        accountData.googleId \u003d correctStudentId;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        accountData.email \u003d originalEmail;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        accountData.name \u003d \"name\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        accountData.isInstructor \u003d false;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(accountData);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: join course as student does not revoke instructor status\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        // promote account to instructor"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.makeAccountInstructor(correctStudentId);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        // make the student \u0027unregistered\u0027 again"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        studentData.googleId \u003d \"\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.updateStudentCascade("
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes.updateOptionsBuilder(studentData.course, studentData.email)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGoogleId(studentData.googleId)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\","
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getStudentForEmail(studentData.course, studentData.email).googleId);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        // rejoin"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.joinCourseForStudent(encryptedKey, correctStudentId);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(correctStudentId,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getStudentForEmail(studentData.course, studentData.email).googleId);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        // check if still instructor"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(logic.isInstructor(correctStudentId));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(correctStudentId);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(existingId);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    @SuppressWarnings(\"deprecation\")"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testJoinCourseForInstructor() throws Exception {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        String loggedInGoogleId \u003d \"AccLogicT.instr.id\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] encryptedKey \u003d new String[] {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: googleID belongs to an existing instructor in the course\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor("
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                        encryptedKey[0], \"idOfInstructorWithOnlyOneSampleCourse\", null, null));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: instructor joined and new account be created\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey[0], loggedInGoogleId, null, null);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes joinedInstructor \u003d"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorForEmail(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(loggedInGoogleId, joinedInstructor.googleId);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(accountCreated);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: instructor joined but Account object creation goes wrong\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        //Delete account to simulate Account object creation goes wrong"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountsDb accountsDb \u003d new AccountsDb();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsDb.deleteAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try to join course again, Account object should be recreated"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey[0], loggedInGoogleId, null, null);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(loggedInGoogleId, joinedInstructor.googleId);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(accountCreated);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(loggedInGoogleId);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: instructor joined but account already exists\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes nonInstrAccount \u003d dataBundle.accounts.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes newIns \u003d InstructorAttributes"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(instructor.courseId, nonInstrAccount.email)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(nonInstrAccount.name)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(newIns);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        encryptedKey[0] \u003d instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(accountsLogic.getAccount(nonInstrAccount.googleId).isInstructor);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey[0], nonInstrAccount.googleId, null, null);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(nonInstrAccount.googleId, joinedInstructor.googleId);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(accountsLogic.getAccount(nonInstrAccount.googleId).isInstructor);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.verifyInstructorExists(nonInstrAccount.googleId);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: instructor join and assigned institute when some instructors have not joined course\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d dataBundle.instructors.get(\"instructor4\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        newIns \u003d InstructorAttributes"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(instructor.courseId, \"anInstructorWithoutGoogleId@gmail.com\")"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"anInstructorWithoutGoogleId\")"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(newIns);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        nonInstrAccount \u003d dataBundle.accounts.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        nonInstrAccount.email \u003d \"newInstructor@gmail.com\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        nonInstrAccount.name \u003d \" newInstructor\";"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        nonInstrAccount.googleId \u003d \"newInstructorGoogleId\";"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        newIns \u003d InstructorAttributes.builder(instructor.courseId, nonInstrAccount.email)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(nonInstrAccount.name)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(newIns);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        encryptedKey[0] \u003d instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey[0], nonInstrAccount.googleId, null, null);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(nonInstrAccount.googleId, joinedInstructor.googleId);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.verifyInstructorExists(nonInstrAccount.googleId);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes instructorAccount \u003d accountsLogic.getAccount(nonInstrAccount.googleId);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"TEAMMATES Test Institute 1\", instructorAccount.institute);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(nonInstrAccount.googleId);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: instructor already joined\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        nonInstrAccount \u003d dataBundle.accounts.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        encryptedKey[0] \u003d instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        joinedInstructor \u003d instructorsLogic.getInstructorForEmail(instructor.courseId, nonInstrAccount.email);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes[] finalInstructor \u003d new InstructorAttributes[] { joinedInstructor };"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor(encryptedKey[0], finalInstructor[0].googleId, null, null));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: key belongs to a different user\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        eaee \u003d assertThrows(EntityAlreadyExistsException.class,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor(encryptedKey[0], \"otherUserId\", null, null));"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Instructor has already joined course\", eaee.getMessage());"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: invalid key\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidKey \u003d StringHelper.encrypt(\"invalidKey\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId, null, null));"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"No instructor with given registration key: \" + invalidKey,"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void testJoinCourseForInstructor_validInstitute_shouldPass()"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String loggedInGoogleId \u003d \"AccLogicT.instr.id\";"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String institute \u003d \"National University of Singapore\";"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] encryptedKey \u003d new String[] {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"success: instructor with institute joined and new account created\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        accountsLogic.joinCourseForInstructor(encryptedKey[0], loggedInGoogleId,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                institute, StringHelper.generateSignature(institute));"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes joinedInstructor \u003d"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructorsLogic.getInstructorForEmail(instructor.courseId, instructor.email);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(loggedInGoogleId, joinedInstructor.googleId);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        AccountAttributes accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotNull(accountCreated);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void testJoinCourseForInstructor_invalidInstituteMac_shouldFail() throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String loggedInGoogleId \u003d \"AccLogicT.instr.id\";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String institute \u003d \"National University of Singapore\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] encryptedKey \u003d new String[] {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"failure: institute signature does not match institute provided\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor("
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                        encryptedKey[0], loggedInGoogleId, institute, StringHelper.generateSignature(\"NUS\")));"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(\"Institute authentication failed.\", ipe.getMessage());"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        AccountAttributes accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNull(accountCreated);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void testJoinCourseForInstructor_missingInstituteMac_shouldFail() throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructorNotYetJoinCourse\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String loggedInGoogleId \u003d \"AccLogicT.instr.id\";"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String institute \u003d \"National University of Singapore\";"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] encryptedKey \u003d new String[] {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"failure: institute signature missing\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                () -\u003e accountsLogic.joinCourseForInstructor("
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                        encryptedKey[0], loggedInGoogleId, institute, null));"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(\"Institute authentication failed.\", ipe.getMessage());"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        AccountAttributes accountCreated \u003d accountsLogic.getAccount(loggedInGoogleId);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNull(accountCreated);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteAccountCascade_lastInstructorInCourse_shouldDeleteOrphanCourse() throws Exception {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor5\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes account \u003d dataBundle.accounts.get(\"instructor5\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a profile for the account"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes studentProfile \u003d StudentProfileAttributes.builder(account.googleId)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShortName(\"Test\")"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.updateOrCreateStudentProfile("
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentProfileAttributes.updateOptionsBuilder(account.googleId)"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withShortName(studentProfile.shortName)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify the instructor is the last instructor of a course"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, instructorsLogic.getInstructorsForCourse(instructor.getCourseId()).size());"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        // Make instructor account id a student too."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d StudentAttributes"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder(instructor.courseId, \"email@com\")"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(instructor.name)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSectionName(\"section\")"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeamName(\"team\")"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComment(\"\")"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGoogleId(instructor.googleId)"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.createStudent(student);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(account);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(studentProfile);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(instructor);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(student);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(instructor.googleId);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(account);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(studentProfile);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(instructor);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(student);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        // course is deleted because it is the last instructor of the course"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(logic.getCourse(instructor.getCourseId()));"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteAccountCascade_notLastInstructorInCourse_shouldNotDeleteCourse() {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify the instructor is not the last instructor of a course"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(instructorsLogic.getInstructorsForCourse(instructor1OfCourse1.getCourseId()).size() \u003e 1);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        // course is not deleted"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getCourse(instructor1OfCourse1.getCourseId()));"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteAccountCascade_instructorArchivedAsLastInstructor_shouldDeleteCourseAlso() throws Exception {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor5 \u003d dataBundle.instructors.get(\"instructor5\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(instructor5.getGoogleId());"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setArchiveStatusOfInstructor(instructor5.getGoogleId(), instructor5.getCourseId(), true);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify the instructor is the last instructor of a course"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, instructorsLogic.getInstructorsForCourse(instructor5.getCourseId()).size());"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getInstructorForEmail(instructor5.getCourseId(), instructor5.getEmail()).isArchived);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(instructor5.getGoogleId());"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        // the archived instructor is also deleted"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(logic.getInstructorForEmail(instructor5.getCourseId(), instructor5.getEmail()));"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        // the course is also deleted"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(logic.getCourse(instructor5.getCourseId()));"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteAccountCascade_nonExistentAccount_shouldPass() {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(\"not_exist\");"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        // other irrelevant instructors remain"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getInstructorForEmail(instructor1OfCourse1.getCourseId(), instructor1OfCourse1.getEmail()));"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 72,
      "-": 451
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/util/StringHelperTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.Cipher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import javax.crypto.Mac;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.crypto.spec.SecretKeySpec;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Config;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseTestCase;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link StringHelper}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringHelperTest extends BaseTestCase {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testIsEmpty() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isEmpty(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isEmpty(\"\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringHelper.isEmpty(\"test\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringHelper.isEmpty(\"     \"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGenerateStringOfLength() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"sssss\", StringHelper.generateStringOfLength(5, \u0027s\u0027));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.generateStringOfLength(0, \u0027s\u0027));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testIsWhiteSpace() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isWhiteSpace(\"\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isWhiteSpace(\"       \"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isWhiteSpace(\"\\t\\n\\t\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isWhiteSpace(System.lineSeparator()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isWhiteSpace(System.lineSeparator() + \"   \"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testIsWhiteSpaceNull() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringHelper.isWhiteSpace(null));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testIsMatching() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isMatching(\"\\u00E0\", \"à\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringHelper.isMatching(\"\\u0061\\u0300\", \"à\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringHelper.isMatching(\"Héllo\", \"Hello\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.toString(strings, \"\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        strings.add(\"aaa\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaa\", StringHelper.toString(strings, \"\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaa\", StringHelper.toString(strings, \"\\n\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaa\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        strings.add(\"bbb\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaabbb\", StringHelper.toString(strings, \"\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaa\\nbbb\", StringHelper.toString(strings, \"\\n\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"aaa\u003cbr\u003ebbb\", StringHelper.toString(strings, \"\u003cbr\u003e\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInteger\u003e ints \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        ints.add(1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        ints.add(44);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1\\n44\", StringHelper.toString(ints, \"\\n\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testKeyEncryption() throws InvalidParametersException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        String msg \u003d \"Test decryption\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String decrptedMsg;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        decrptedMsg \u003d StringHelper.decrypt(StringHelper.encrypt(msg));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(msg, decrptedMsg);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDefaultAesCipherParams() throws Exception {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        //plaintext is less than 1 block long"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        String plaintextLength124 \u003d StringHelper.generateStringOfLength(31, \u0027A\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEncryptionUsesExpectedDefaultParams(plaintextLength124);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        //plaintext is equal to 1 block"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        String plaintextLength128 \u003d StringHelper.generateStringOfLength(32, \u0027A\u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEncryptionUsesExpectedDefaultParams(plaintextLength128);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        //plaintext is more than 1 block long"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        String plaintextLength132 \u003d StringHelper.generateStringOfLength(33, \u0027A\u0027);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEncryptionUsesExpectedDefaultParams(plaintextLength132);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    * Verifies that encrypting with and without specifying algorithm parameters produce the same ciphertext."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    * This ensures parameters being specified for encryption are the same as the defaults."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    * @param plaintext the plaintext to encrypt, as a hexadecimal string."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void assertEncryptionUsesExpectedDefaultParams(String plaintext) throws Exception {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        String actualCiphertext \u003d encryptWithoutSpecifyingAlgorithmParams(plaintext);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedCiphertext \u003d StringHelper.encrypt(plaintext);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedCiphertext, actualCiphertext);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * Encrypts plaintext without specifying mode and padding scheme during  {@link Cipher} initialization."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param plaintext the plaintext to encrypt as a hexadecimal string"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return ciphertext the ciphertext as a hexadecimal string."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String encryptWithoutSpecifyingAlgorithmParams(String plaintext) throws Exception {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        SecretKeySpec sks \u003d new SecretKeySpec(StringHelper.hexStringToByteArray(Config.ENCRYPTION_KEY), \"AES\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        Cipher cipher \u003d Cipher.getInstance(\"AES\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        cipher.init(Cipher.ENCRYPT_MODE, sks, cipher.getParameters());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        byte[] encrypted \u003d cipher.doFinal(plaintext.getBytes());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return StringHelper.byteArrayToHexString(encrypted);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private static String generateSignature(String data) throws Exception {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        SecretKeySpec signingKey \u003d"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                new SecretKeySpec(StringHelper.hexStringToByteArray(Config.ENCRYPTION_KEY), \"HmacSHA1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        Mac mac \u003d Mac.getInstance(\"HmacSHA1\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        mac.init(signingKey);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        byte[] value \u003d mac.doFinal(data.getBytes());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return StringHelper.byteArrayToHexString(value);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDecryptingInvalidCiphertextThrowsException() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        // The decrypt function converts a hex string into an array of bytes before decryption."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        // E.g AF is the byte 10101111"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        // Hence, non-hex strings should fail to decrypt."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidHexString \u003d \"GHI\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // AES requires the length of data to be multiples of 128 bits."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // Hence, decryptionn should fail  for inputs of 120 and 136 bits."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String ciphertextLength120 \u003d \"AAAAAAAAAABBBBBBBBBBCCCCCCCCCC\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String ciphertextLength136 \u003d ciphertextLength120 + \"1234\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] invalidCiphertexts \u003d {invalidHexString, ciphertextLength120, ciphertextLength136};"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String invalidCiphertext : invalidCiphertexts) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            assertThrows(InvalidParametersException.class, () -\u003e StringHelper.decrypt(invalidCiphertext));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testSplitName() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        String fullName \u003d \"singleWord\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"singleWord\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(null);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, splitName.length);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d \"two words\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"two\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"words\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d \"now three words\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"now three\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"words\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d \"what if four words\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"what if four\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"words\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d \"first name firstName {last Name}\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        splitName \u003d StringHelper.splitName(fullName);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[0], \"first name firstName\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(splitName[1], \"last Name\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testRemoveExtraSpace() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(StringHelper.removeExtraSpace((String) null));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.removeExtraSpace(str));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \"a    a\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"a a\", StringHelper.removeExtraSpace(str));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \" \\u00A0 a    a   \";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"a a\", StringHelper.removeExtraSpace(str));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \"    \";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.removeExtraSpace(str));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \" a      b       c       d      \";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"a b c d\", StringHelper.removeExtraSpace(str));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testReplaceIllegalChars() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        String regex \u003d \"[a-zA-Z0-9_.$-]+\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(StringHelper.replaceIllegalChars(null, regex, \u0027_\u0027));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \"abc\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"abc\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        str \u003d \"illegal!?Chars+1\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"illegal__Chars_1\", StringHelper.replaceIllegalChars(str, regex, \u0027_\u0027));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"illegal..Chars.1\", StringHelper.replaceIllegalChars(str, regex, \u0027.\u0027));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testCountEmptyStrings() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        String empty \u003d \"\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        String whitespace \u003d \" \";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        String nul \u003d null;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        String nonEmpty \u003d \"non-empty\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, StringHelper.countEmptyStrings(empty));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, StringHelper.countEmptyStrings(whitespace));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, StringHelper.countEmptyStrings(nul));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, StringHelper.countEmptyStrings(nonEmpty));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, StringHelper.countEmptyStrings(empty, whitespace, nul, nonEmpty));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testConvertToEmptyStringIfNull() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        String empty \u003d \"\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        String whitespace \u003d \" \";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        String nonEmpty \u003d \"non-empty\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.convertToEmptyStringIfNull(null));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"non-empty\", StringHelper.convertToEmptyStringIfNull(nonEmpty));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.convertToEmptyStringIfNull(empty));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\" \", StringHelper.convertToEmptyStringIfNull(whitespace));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testTruncate() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1234567...\", StringHelper.truncate(\"1234567890xxxx\", 10));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1234567890\", StringHelper.truncate(\"1234567890\", 10));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"123456789\", StringHelper.truncate(\"123456789\", 10));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testTruncateHead() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1234567890\", StringHelper.truncateHead(\"xxxx1234567890\", 10));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"1234567890\", StringHelper.truncateHead(\"1234567890\", 10));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"123456789\", StringHelper.truncateHead(\"123456789\", 10));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"567890\", StringHelper.truncateHead(\"1234567890\", 6));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testRemoveEnclosingSquareBrackets() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        // typical case"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"test1, test2\", StringHelper.removeEnclosingSquareBrackets(\"[test1, test2]\"));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        // input multiple square brackets, expected outermost brackets removed"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[ \\\"test\\\" ]\", StringHelper.removeEnclosingSquareBrackets(\"[[ \\\"test\\\" ]]\"));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        // input nested square brackets, expected outermost brackets removed"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"test1, [], ] test2\","
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                     StringHelper.removeEnclosingSquareBrackets(\"[test1, [], ] test2]\"));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        // input no square brackets, expected same input string"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"test\", StringHelper.removeEnclosingSquareBrackets(\"test\"));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"  test  \", StringHelper.removeEnclosingSquareBrackets(\"  test  \"));"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        // input unmatched brackets, expected same input string"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[test\", StringHelper.removeEnclosingSquareBrackets(\"[test\"));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"(test]\", StringHelper.removeEnclosingSquareBrackets(\"(test]\"));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        // input empty string, expected empty string"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.removeEnclosingSquareBrackets(\"\"));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        // input null, expected null"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(StringHelper.removeEnclosingSquareBrackets(null));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testCsvToHtmlTable() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        String csvText \u003d \"ColHeader1, ColHeader2, ColHeader3, ColHeader4\" + System.lineSeparator()"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                         + \"\\\"Data 1-1\\\", \\\"Data 1\\\"\\\"2\\\", \\\"Data 1,3\\\", \\\"Data 1\\\"\\\"\\\"\\\"4\\\"\" + System.lineSeparator()"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                         + \"Data 2-1, Data 2-2, Data 2-3, \\\"Data 2-4\\\"\\\"\\\"\" + System.lineSeparator()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                         + \"Data 3-1, Data 3-2, Data 3-3, Data 3-4\" + System.lineSeparator()"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                         + \",,,\" + System.lineSeparator()"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                         + \",,,Data 5-4\" + System.lineSeparator();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        String htmlText \u003d StringHelper.csvToHtmlTable(csvText);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedHtmlText \u003d \"\u003ctable class\u003d\\\"table table-bordered table-striped table-condensed\\\"\u003e\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003ctr\u003e\""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eColHeader1\u003c/td\u003e\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e ColHeader2\u003c/td\u003e\""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e ColHeader3\u003c/td\u003e\""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eColHeader4\u003c/td\u003e\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003c/tr\u003e\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003ctr\u003e\""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 1-1\u003c/td\u003e\""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 1\u0026quot;2\u003c/td\u003e\""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 1,3\u003c/td\u003e\""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 1\u0026quot;\u0026quot;4\u003c/td\u003e\""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003c/tr\u003e\""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003ctr\u003e\""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 2-1\u003c/td\u003e\""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 2-2\u003c/td\u003e\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 2-3\u003c/td\u003e\""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 2-4\u0026quot;\u003c/td\u003e\""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003c/tr\u003e\""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003ctr\u003e\""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 3-1\u003c/td\u003e\""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 3-2\u003c/td\u003e\""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e Data 3-3\u003c/td\u003e\""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 3-4\u003c/td\u003e\""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003c/tr\u003e\""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003ctr\u003e\""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e\u003c/td\u003e\""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e\u003c/td\u003e\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003e\u003c/td\u003e\""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                                          + \"\u003ctd\u003eData 5-4\u003c/td\u003e\""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                                      + \"\u003c/tr\u003e\""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                                  + \"\u003c/table\u003e\";"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedHtmlText, htmlText);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testTrim() {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] input \u003d {\"  apple tea\", \"banana  \", \"   carrot cake      \", \"magnesium \u0026 hydroxide     -\"};"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] expected \u003d {\"apple tea\", \"banana\", \"carrot cake\", \"magnesium \u0026 hydroxide     -\"};"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArrayEquals(expected, StringHelper.trim(input));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testTrimWithNullString() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] input \u003d {\"  apple tea\", \"banana  \", \"   carrot cake      \", null};"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringHelper.trim(input));"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testToLowerCase() {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] input \u003d {\"thisIsInCamelCase\", \"anotherInCamelCase\", \"googleId\", \"\", \"alreadylowercase\", \"ALLUPPERCASE\"};"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] expected \u003d {\"thisisincamelcase\", \"anotherincamelcase\", \"googleid\", \"\", \"alreadylowercase\", \"alluppercase\"};"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArrayEquals(expected, StringHelper.toLowerCase(input));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testRemoveNonAscii() {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Hello world!\", StringHelper.removeNonAscii(\"Hello world!\"));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.removeNonAscii(\"©¡¢â\"));"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Coevaluacin Prctica (Part 1)\","
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                     StringHelper.removeNonAscii(\"Coevaluación Práctica (Part 1)\"));"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testJoinWithListOfIntegers() {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"\", StringHelper.join(\",\", new ArrayList\u003c\u003e()));"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"5\", StringHelper.join(\",\", Collections.singletonList(5)));"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"5,14\", StringHelper.join(\",\", Arrays.asList(5, 14)));"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"5||14\", StringHelper.join(\"||\", Arrays.asList(5, 14)));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"5||14||null\", StringHelper.join(\"||\", Arrays.asList(5, 14, null)));"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testJoinWithNullElements() {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e StringHelper.join(\",\", (List\u003cInteger\u003e) null));"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testIsTextContainingAny() {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(\"null text should return false\", StringHelper.isTextContainingAny(null));"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(\"null text should return false\", StringHelper.isTextContainingAny(null, \"\"));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(\"null text should return false\","
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelper.isTextContainingAny(null, \"a string\", \"another string\"));"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(\"any string should contain empty string\", StringHelper.isTextContainingAny(\"String\", \"\"));"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        String text \u003d \"The quick brown fox jumps over the lazy dog.\";"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(\"should return true if there exists a string which is contained in text\","
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelper.isTextContainingAny(text, \"not contained\", \"isNotInText\", \"brown\"));"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(\"should return false if no strings are contained in text\","
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelper.isTextContainingAny(text, \"not contained\", \"notInside\", \"NotInText\"));"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(\"should return true if no strings are given\","
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelper.isTextContainingAny(\"\"));"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(\"should return true if no strings are given\","
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelper.isTextContainingAny(text));"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExtractContentFromQuotedString() {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(StringHelper.extractContentFromQuotedString(\"\\\"data\\\"\"), \"data\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(StringHelper.extractContentFromQuotedString(\"data without quotes\"), \"data without quotes\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(StringHelper.extractContentFromQuotedString(null), null);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(StringHelper.extractContentFromQuotedString(\"\"), \"\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void testSignatureGeneration() throws Exception {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String data1 \u003d \"National University of Singapore\";"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String data2 \u003d \"Nanyang Technological University\";"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(generateSignature(data1), StringHelper.generateSignature(data1));"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(StringHelper.generateSignature(data1), StringHelper.generateSignature(data2));"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void testSignatureVerification() {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String valid \u003d \"National University of Singapore\";"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String invalid \u003d \"Nanyang Technological University\";"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String signature \u003d StringHelper.generateSignature(valid);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertTrue(StringHelper.isCorrectSignature(valid, signature));"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(StringHelper.isCorrectSignature(valid, invalid));"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(StringHelper.isCorrectSignature(valid, null));"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(StringHelper.isCorrectSignature(null, signature));"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(StringHelper.isCorrectSignature(invalid, signature));"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 34,
      "-": 415
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/ActionFactoryTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.common.exception.ActionMappingException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.test.cases.BaseTestCase;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.test.driver.MockHttpServletRequest;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.Action;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.ActionFactory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.GetAuthInfoAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * SUT: {@link ActionFactory}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ActionFactoryTest extends BaseTestCase {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void testGetAction() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionFactory actionFactory \u003d new ActionFactory();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Action exists and is retrieved\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest existingActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        existingActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Action existingAction \u003d actionFactory.getAction(existingActionServletRequest, HttpGet.METHOD_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(existingAction instanceof GetAuthInfoAction);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Action does not exist and ActionMappingException is thrown\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest nonExistentActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + \"blahblahblah\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        nonExistentActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionMappingException nonExistentActionException \u003d assertThrows(ActionMappingException.class,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                () -\u003e actionFactory.getAction(nonExistentActionServletRequest, HttpGet.METHOD_NAME));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(nonExistentActionException.getMessage()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                .equals(\"Resource with URI \" + Const.ResourceURIs.URI_PREFIX + \"blahblahblah\" + \" is not found.\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Method does not exist on action and ActionMappingException is thrown\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest nonExistentMethodOnActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        nonExistentMethodOnActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionMappingException nonExistentMethodOnActionException \u003d assertThrows(ActionMappingException.class,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                () -\u003e actionFactory.getAction(nonExistentMethodOnActionServletRequest, HttpPost.METHOD_NAME));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(nonExistentMethodOnActionException.getMessage()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                .equals(\"Method [\" + HttpPost.METHOD_NAME + \"] is not allowed for URI \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                + Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH + \".\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 53
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.Cookie;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.Part;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPut;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeMethod;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.UserInfo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseComponentTestCase;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.MockPart;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.Action;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.CsvResult;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.ImageResult;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.request.BasicRequest;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Base class for all action tests."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * @param \u003cT\u003e The action class being tested."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class BaseActionTest\u003cT extends Action\u003e extends BaseComponentTestCase {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String GET \u003d HttpGet.METHOD_NAME;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String POST \u003d HttpPost.METHOD_NAME;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String PUT \u003d HttpPut.METHOD_NAME;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String DELETE \u003d HttpDelete.METHOD_NAME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected DataBundle typicalBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract String getActionUri();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract String getRequestMethod();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with empty request body and empty multipart config."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String... params) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, null, null, params);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(Object requestBody, String... params) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(JsonUtils.toJson(requestBody), params);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String body, String... params) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(body, null, null, params);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body and multipart config."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String body, Map\u003cString, Part\u003e parts, List\u003cCookie\u003e cookies, String... params) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return (T) gaeSimulation.getActionObject(getActionUri(), getRequestMethod(), body, parts, cookies, params);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request multipart config."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getActionWithParts(String key, String filePath, String... params) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Part\u003e parts \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        parts.put(key, new MockPart(filePath));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, parts, null, params);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with list of cookies."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getActionWithCookie(List\u003cCookie\u003e cookies, String... params) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, null, cookies, params);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeMethod"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    public void beforeTestMethodSetup() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        prepareTestData();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract void testExecute() throws Exception;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract void testAccessControl() throws Exception;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The {@code params} array with the {@code userId}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     *         (together with the parameter name) inserted at the beginning."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String[] addUserIdToParams(String userId, String[] params) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        list.add(Const.ParamsNames.USER_ID);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        list.add(userId);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String s : params) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            list.add(s);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return list.toArray(new String[0]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for logging in as various user"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an admin."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsAdmin() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginAsAdmin(\"admin.user\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isAdmin);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an unregistered user"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without any right)."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsUnregistered(String userId) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isStudent);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isInstructor);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an instructor"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights or student rights)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsInstructor(String userId) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isStudent);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isInstructor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as a student"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights or instructor rights)."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsStudent(String userId) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isStudent);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isInstructor);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as a student-instructor"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsStudentInstructor(String userId) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isStudent);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isInstructor);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for testing access control"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027High-level\u0027 access-control tests: here it tests access control of an action for the full range of user types."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAnyUserCanAccess(String... params) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAnyLoggedInUserCanAccess(String... params) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyAdminCanAccess(String... params) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(params);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructors(params);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyInstructorsCanAccess(String... params) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(params);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(params);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(params);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyInstructorsOfTheSameCourseCanAccess(String[] submissionParams) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027Mid-level\u0027 access control tests: here it tests access control of an action for one user type."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleWithoutLogin(String... params) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-logged-in users can access\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.logoutUser();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutLogin(String... params) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-logged-in users cannot access\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.logoutUser();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForUnregisteredUsers(String... params) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-registered users can access\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        String unregUserId \u003d \"unreg.user\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsUnregistered(unregUserId);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForUnregisteredUsers(String... params) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-registered users cannot access\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        String unregUserId \u003d \"unreg.user\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsUnregistered(unregUserId);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForAdmin(String... params) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Admin can access\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForAdmin(String... params) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Admin cannot access\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForStudents(String... params) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Students cannot access\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForInstructors(String... params) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructors cannot access\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForSpecificInstructor(InstructorAttributes instructor, String... params) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"A specific instructor cannot access the resource.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor.googleId);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForAdminToMasqueradeAsInstructor(String[] submissionParams) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"admin can access\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        //not checking for non-masquerade mode because admin may not be an instructor"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanMasquerade(instructor1OfCourse1.googleId, submissionParams);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifySessionPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Session privilege cannot access\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutSubmitSessionInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Submit-Session-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutViewStudentInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without View-Student-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyStudentPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Student privilege cannot access\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyCoursePrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Course privilege cannot access\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyInstructorPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Instructor privilege cannot access\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifySessionCommentInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Session-Comment-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForInstructorsOfTheSameCourse(String[] submissionParams) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"course instructor can access\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes otherInstructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(submissionParams);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotMasquerade(student1InCourse1.googleId, submissionParams);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotMasquerade(otherInstructor.googleId, submissionParams);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForStudentsOfTheSameCourse(String[] submissionParams) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"course students can access\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(submissionParams);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForInstructorsOfOtherCourses(String[] submissionParams) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"other course instructor cannot access\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes otherInstructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(otherInstructor.googleId);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027Low-level\u0027 access control tests: here it tests an action once with the given parameters."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    // These methods are not aware of the user type."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is accessible to the logged in user."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCanAccess(String... params) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        c.checkAccessControl();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void verifyCanAccess(BasicRequest request, String... params) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        Action c \u003d getAction(request, params);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        c.checkAccessControl();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is not accessible to the user."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCannotAccess(String... params) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, c::checkAccessControl);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void verifyCannotAccess(BasicRequest request, String... params) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        Action c \u003d getAction(request, params);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, c::checkAccessControl);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "     * accessible to the logged in user masquerading as another user with {@code userId}."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCanMasquerade(String userId, String... params) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(addUserIdToParams(userId, params));"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is not"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     * accessible to the logged in user masquerading as another user with {@code userId}."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCannotMasquerade(String userId, String... params) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, () -\u003e getAction(addUserIdToParams(userId, params)));"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for parsing results"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the result."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link JsonResult}."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    protected JsonResult getJsonResult(Action a) {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        return (JsonResult) a.execute();"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the csv content."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link CsvResult}."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    protected CsvResult getCsvResult(Action a) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        return (CsvResult) a.execute();"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the result."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link ImageResult}."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    protected ImageResult getImageResult(Action a) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        return (ImageResult) a.execute();"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for verifying action results"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@code parameters} violates an assumption of the"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * matching {@link Action}. e.g., missing a compulsory parameter."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyHttpParameterFailure(String... params) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e c.execute());"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNoTasksAdded(Action action) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Integer\u003e tasksAdded \u003d action.getTaskQueuer().getNumberOfTasksAdded();"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, tasksAdded.keySet().size());"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifySpecifiedTasksAdded(Action action, String taskName, int taskCount) {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Integer\u003e tasksAdded \u003d action.getTaskQueuer().getNumberOfTasksAdded();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(taskCount, tasksAdded.get(taskName).intValue());"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNoEmailsSent(Action action) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(getEmailsSent(action).isEmpty());"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    protected List\u003cEmailWrapper\u003e getEmailsSent(Action action) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        return action.getEmailSender().getEmailsSent();"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNumberOfEmailsSent(Action action, int emailCount) {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(emailCount, action.getEmailSender().getEmailsSent().size());"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 12,
      "-": 521
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/BinCourseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.BinCourseAction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.CourseData;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link BinCourseAction}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class BinCourseActionTest extends BaseActionTest\u003cBinCourseAction\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.BIN_COURSE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return PUT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case, 2 courses. Expect 1 to be binned and 1 to stay.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes courseToBeDeleted \u003d logic.getCourse(instructor1OfCourse1.getCourseId());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.createCourseAndInstructor(instructorId,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                CourseAttributes.builder(\"icdct.tpa.id1\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(\"New course\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimezone(ZoneId.of(\"UTC\")).build());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        BinCourseAction binCourseAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseData courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, courseToBeDeleted.getId(), courseToBeDeleted.getName(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                courseToBeDeleted.getTimeZone().getId());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d logic.getCoursesForInstructor(instructorId);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, courseList.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"icdct.tpa.id1\", courseList.get(0).getId());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getCourse(instructor1OfCourse1.courseId).deletedAt);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Masquerade mode, delete last course\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdct.tpa.id1\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        binCourseAction \u003d getAction(addUserIdToParams(instructorId, submissionParams));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, \"icdct.tpa.id1\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assertFalse(courseData.getDeletionTimestamp() \u003d\u003d 0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getCourse(\"icdct.tpa.id1\").deletedAt);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute_nonExistentCourse_shouldFail() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"fake-course\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(logic.getCourse(\"fake-course\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityNotFoundException e \u003d assertThrows(EntityNotFoundException.class, () -\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                getAction(submissionParams).execute());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to update non-existent Entity: \", e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute_courseAlreadyBin_shouldFail() throws Exception {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.moveCourseToRecycleBin(instructor1OfCourse1.courseId);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes courseInformation \u003d logic.getCourse(instructor1OfCourse1.courseId);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(courseInformation.deletedAt);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        BinCourseAction binCourseAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseData courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, courseInformation.getId(), courseInformation.getName(),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                courseInformation.getTimeZone().getId());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyCourseData(CourseData data, String courseId, String courseName, String timeZone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getCourseId(), courseId);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getCourseName(), courseName);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getTimeZone(), timeZone);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.createCourseAndInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").googleId,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                CourseAttributes.builder(\"icdat.owncourse\")"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(\"New course\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimezone(ZoneId.of(\"UTC\")).build());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdat.owncourse\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutModifyCoursePrivilege(submissionParams);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // clean up"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().deleteCourseCascade(\"icdat.owncourse\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 162
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/ConfirmFeedbackSessionSubmissionActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TaskWrapper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.ConfirmFeedbackSessionSubmissionAction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResponse;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link ConfirmFeedbackSessionSubmissionAction}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfirmFeedbackSessionSubmissionActionTest extends BaseActionTest\u003cConfirmFeedbackSessionSubmissionAction\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student4InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student1InCourse2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor2OfCourse1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor1OfCourse2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes typicalCourse1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes typicalCourse2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes session1InCourse1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes session1InCourse2;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes awaitingSession;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e allResponsesInSession1Course1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.SUBMISSION_CONFIRMATION;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        student4InCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        student1InCourse2 \u003d typicalBundle.students.get(\"student1InCourse2\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor2OfCourse1 \u003d typicalBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor1OfCourse2 \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalCourse1 \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalCourse2 \u003d typicalBundle.courses.get(\"typicalCourse2\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        session1InCourse2 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse2\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        awaitingSession \u003d typicalBundle.feedbackSessions.get(\"awaiting.session\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ1S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response2ForQ1S1C1 \u003d typicalBundle.feedbackResponses.get(\"response2ForQ1S1C1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ2S1C1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response2ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response2ForQ2S1C1\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response3ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response3ForQ2S1C1\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ3S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ3S1C1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ1S1C1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response2ForQ1S1C1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ2S1C1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response2ForQ2S1C1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response3ForQ2S1C1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ3S1C1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with student intent\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentParams \u003d new String[] {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfirmFeedbackSessionSubmissionAction a \u003d getAction(studentParams);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfirmationResponse cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify 1 email sent"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d a.getEmailSender().getEmailsSent().get(0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student1InCourse1.email, email.getRecipient());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskWrapper taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student1InCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with student intent, not responded before\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student4InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes res : allResponsesInSession1Course1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            assertNotEquals(student4InCourse1.getEmail(), res.getGiver());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentNotRespondedParams \u003d new String[] {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(studentNotRespondedParams);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify 1 email sent"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d a.getEmailSender().getEmailsSent().get(0);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student4InCourse1.email, email.getRecipient());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student4InCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with instructor intent\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorParams \u003d new String[] {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"false\","
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(instructorParams);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 0);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor1OfCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with instructor intent, not responded before\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor2OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes res : allResponsesInSession1Course1) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            assertNotEquals(instructor2OfCourse1.getEmail(), res.getGiver());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorNotRespondedParams \u003d new String[] {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"false\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(instructorNotRespondedParams);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 0);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor2OfCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Failed case with invalid intent\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] invalidIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(invalidIntentParams).execute());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"preview mode, cannot access\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] previewParams \u003d new String[] {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, student1InCourse1.email,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(previewParams);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session not open for submission but in moderation mode, can access\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(awaitingSession.isOpened());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] moderationParams \u003d new String[] {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, awaitingSession.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(moderationParams);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session not open for submission, cannot access\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(awaitingSession.isOpened());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] sessionNotOpenSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, awaitingSession.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(sessionNotOpenSubmissionParams);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Student intends to submit feedback session in other course, should not be accessible\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse2.googleId);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentSubmitSessionInOtherCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(EntityNotFoundException.class,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e getAction(studentSubmitSessionInOtherCourseParams).checkAccessControl());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Student intends to submit feedback session in his course, should be accessible\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentSubmitSessionInCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(studentSubmitSessionInCourseParams);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor intends to submit feedback session in other course, should not be accessible\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorSubmitSessionInOtherCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(instructorSubmitSessionInOtherCourseParams);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor intends to submit feedback session in his course, should be accessible\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse2.googleId);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorSubmitSessionInCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(instructorSubmitSessionInCourseParams);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unknown intent, should be accessible\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse2.googleId);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] unknownIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(unknownIntentParams).checkAccessControl());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 367
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/CreateAccountActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpRequestBodyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Config;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.StringHelperExtension;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.CreateAccountAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.JoinLinkData;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.AccountCreateRequest;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link CreateAccountAction}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class CreateAccountActionTest extends BaseActionTest\u003cCreateAccountAction\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.ACCOUNT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        String name \u003d \"JamesBond\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String email \u003d \"jamesbond89@gmail.tmt\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String institute \u003d \"TEAMMATES Test Institute 1\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountCreateRequest badRequest \u003d buildCreateRequest(null, institute, email);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            getAction(badRequest).execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidHttpRequestBodyException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"name cannot be null\", e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        badRequest \u003d buildCreateRequest(name, null, email);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            getAction(badRequest).execute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidHttpRequestBodyException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"institute cannot be null\", e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        badRequest \u003d buildCreateRequest(name, institute, null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            getAction(badRequest).execute();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidHttpRequestBodyException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"email cannot be null\", e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Normal case\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        String nameWithSpaces \u003d \"   \" + name + \"   \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        String emailWithSpaces \u003d \"   \" + email + \"   \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        String instituteWithSpaces \u003d \"   \" + institute + \"   \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountCreateRequest req \u003d buildCreateRequest(nameWithSpaces, instituteWithSpaces, emailWithSpaces);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        CreateAccountAction a \u003d getAction(req);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d generateNextDemoCourseId(email, FieldValidator.COURSE_ID_MAX_LENGTH);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d logic.getInstructorForEmail(courseId, email);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRegistrationKey(StringHelper.encrypt(instructor.key))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstructorInstitution(institute)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                .withInstitutionMac(StringHelper.generateSignature(institute))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                .withParam(Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                .toAbsoluteString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        JoinLinkData output \u003d (JoinLinkData) r.getOutput();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(joinLink, output.getJoinLink());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper emailSent \u003d a.getEmailSender().getEmailsSent().get(0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), name),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                emailSent.getSubject());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(email, emailSent.getRecipient());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Error: invalid parameter\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidName \u003d \"James%20Bond99\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        req \u003d buildCreateRequest(invalidName, institute, emailWithSpaces);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        CreateAccountAction finalA \u003d getAction(req);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            finalA.execute();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidHttpRequestBodyException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedError \u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                    \"\\\"\" + invalidName + \"\\\" is not acceptable to TEAMMATES as a/an person name because \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"it contains invalid characters. A/An person name must start with an \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"alphanumeric character, and cannot contain any vertical bar (|) or percent sign (%).\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedError, e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNoEmailsSent(finalA);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyOnlyAdminCanAccess();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGenerateNextDemoCourseId() throws Exception {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        testGenerateNextDemoCourseIdForLengthLimit(40);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        testGenerateNextDemoCourseIdForLengthLimit(20);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGenerateNextDemoCourseIdForLengthLimit(int maximumIdLength) throws Exception {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        String normalIdSuffix \u003d \".gma-demo\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        String atEmail \u003d \"@gmail.tmt\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        int normalIdSuffixLength \u003d normalIdSuffix.length(); // 9"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        String strShortWithWordDemo \u003d"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2) + \"-demo\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        String strWayShorterThanMaximum \u003d"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelperExtension.generateStringOfLength((maximumIdLength - normalIdSuffixLength) / 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        String strOneCharShorterThanMaximum \u003d"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        String strOneCharLongerThanMaximum \u003d"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                StringHelperExtension.generateStringOfLength(maximumIdLength - normalIdSuffixLength + 1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strShortWithWordDemo + normalIdSuffix,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strShortWithWordDemo + atEmail, maximumIdLength));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strShortWithWordDemo + normalIdSuffix + \"0\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix, maximumIdLength));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strShortWithWordDemo + normalIdSuffix + \"1\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strShortWithWordDemo + normalIdSuffix + \"0\", maximumIdLength));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strWayShorterThanMaximum + normalIdSuffix,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strWayShorterThanMaximum + atEmail, maximumIdLength));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strOneCharShorterThanMaximum + normalIdSuffix,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strOneCharShorterThanMaximum + atEmail, maximumIdLength));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strOneCharLongerThanMaximum.substring(1) + normalIdSuffix,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strOneCharLongerThanMaximum + atEmail, maximumIdLength));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"0\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix, maximumIdLength));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"1\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"0\", maximumIdLength));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strWayShorterThanMaximum + normalIdSuffix + \"10\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strWayShorterThanMaximum + normalIdSuffix + \"9\", maximumIdLength));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(strOneCharShorterThanMaximum.substring(2) + normalIdSuffix + \"10\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                generateNextDemoCourseId(strOneCharShorterThanMaximum.substring(1) + normalIdSuffix + \"9\","
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                        maximumIdLength));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    private String generateNextDemoCourseId(String instructorEmailOrProposedCourseId, int maximumIdLength)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            throws Exception {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        CreateAccountAction a \u003d new CreateAccountAction();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        return (String) invokeMethod(a.getClass(), \"generateNextDemoCourseId\","
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                new Class\u003c?\u003e[] { String.class, int.class },"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                a, new Object[] { instructorEmailOrProposedCourseId, maximumIdLength });"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    private AccountCreateRequest buildCreateRequest(String name, String institution, String email) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountCreateRequest req \u003d new AccountCreateRequest();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        req.setInstructorName(name);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        req.setInstructorInstitution(institution);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        req.setInstructorEmail(email);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        return req;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 180
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/GetStudentProfileActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.GetStudentProfileAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.StudentProfileData;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link GetStudentProfileAction}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class GetStudentProfileActionTest extends BaseActionTest\u003cGetStudentProfileAction\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.STUDENT_PROFILE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return GET;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute() throws Exception {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // See test cases below."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_withExistingProfileAndNoParameter_shouldReturnOwnProfile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes student1InCourse1 \u003d typicalBundle.accounts.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes expectedProfile \u003d typicalBundle.profiles.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedName \u003d student1InCourse1.name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetCorrectProfile(expectedProfile, expectedName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_withMissingCourseId_shouldReturnOwnProfile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes student1InCourse1 \u003d typicalBundle.accounts.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes expectedProfile \u003d typicalBundle.profiles.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedName \u003d student1InCourse1.name;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetCorrectProfile(expectedProfile, expectedName, submissionParams);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_withMissingStudentEmail_shouldReturnOwnProfile() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes expectedProfile \u003d typicalBundle.profiles.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedName \u003d typicalBundle.accounts.get(\"student1InCourse1\").name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetCorrectProfile(expectedProfile, expectedName, submissionParams);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_withStudentEmailAndCourseId_shouldReturnProfileByStudentEmail() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes expectedProfile \u003d typicalBundle.profiles.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        expectedProfile.email \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        expectedProfile.shortName \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedName \u003d typicalBundle.accounts.get(\"student1InCourse1\").name;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student2InCourse1.googleId);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetCorrectProfile(expectedProfile, expectedName, submissionParams);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_withProfileNotYetCreated_shouldReturnEmptyProfile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        AccountAttributes student2InCourse1 \u003d typicalBundle.accounts.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedName \u003d student2InCourse1.name;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileAttributes expectedProfile \u003d StudentProfileAttributes.builder(student2InCourse1.googleId).build();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student2InCourse1.googleId);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetCorrectProfile(expectedProfile, expectedName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_getProfileOfUnregisteredStudent_shouldReturnNotFoundMessage() throws Exception {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prepare an unregistered teammate"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes unregisteredStudentInCourse1 \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes.builder(student1InCourse1.getCourse(), \"student1InUnregisteredCourse@gmail.tmt\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGoogleId(\"\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(\"unregistered student in course 1\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                .withComment(\"\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSectionName(student1InCourse1.getSection())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTeamName(student1InCourse1.getTeam())"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentsLogic.inst().createStudent(unregisteredStudentInCourse1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, unregisteredStudentInCourse1.getEmail(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, unregisteredStudentInCourse1.getCourse(),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        GetStudentProfileAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_NOT_FOUND, result.getStatusCode());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetCorrectProfile(StudentProfileAttributes expectedProfile,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                                       String expectedName, String... submissionParams) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        GetStudentProfileAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileData actualProfile \u003d (StudentProfileData) result.getOutput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedName, actualProfile.getName());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.email, actualProfile.getEmail());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.shortName, actualProfile.getShortName());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.institute, actualProfile.getInstitute());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.moreInfo, actualProfile.getMoreInfo());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.nationality, actualProfile.getNationality());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedProfile.gender, actualProfile.getGender());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        // See test cases below."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_withoutCorrectAuthInfo_shouldFail() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_studentNotExistInCourse_shouldFail() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse2 \u003d typicalBundle.students.get(\"student1InCourse2\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes typicalCourse1 \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse2.getEmail(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructors(submissionParams);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_studentAccessHisOwnProfile_shouldPass() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_studentAccessHisTeammateProfile_shouldPass() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes teammate \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, teammate.getEmail(),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(submissionParams);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_studentAccessHisClassmateButNotTeammateProfile_shouldFail() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes classmate \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, classmate.getEmail(),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_studentAccessStudentInOtherCourse_shouldFail() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentNotInCourse1 \u003d typicalBundle.students.get(\"student1InCourse2\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, studentNotInCourse1.getEmail(),"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_instructorAccessProfileWithMissingStudentEmail_shouldFail() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructors(submissionParams);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_instructorAccessProfileWithMissingCourseId_shouldFail() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructors(submissionParams);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_instructorAccessProfileFromHisCourse_shouldPass() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_instructorWithoutViewStudentInSectionPrivilege_shouldFail() throws Exception {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor1OfCourse1.privileges"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                .updatePrivilege(Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS, false);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes.UpdateOptionsWithEmail updateOptions \u003d"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                InstructorAttributes"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsWithEmailBuilder(instructor1OfCourse1.getCourseId(), instructor1OfCourse1.getEmail())"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withPrivileges(instructor1OfCourse1.privileges)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.updateInstructor(updateOptions);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_instructorAccessOtherCourse_shouldFail() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, student1InCourse1.getCourse(),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.STUDENT_EMAIL, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAccessControl_withMasqueradeMode_shouldPass() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanMasquerade(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 269,
      "hcwong": 2
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/RestoreFeedbackSessionActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.NullHttpParameterException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.RestoreFeedbackSessionAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link RestoreFeedbackSessionAction}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class RestoreFeedbackSessionActionTest extends BaseActionTest\u003cRestoreFeedbackSessionAction\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final FeedbackSessionAttributes firstFeedbackSession \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String courseId \u003d instructor1OfCourse1.courseId;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String feedbackSessionName \u003d firstFeedbackSession.getFeedbackSessionName();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Const.ParamsNames.COURSE_ID, courseId,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.BIN_SESSION;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return DELETE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // See test cases below."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withSessionInBin_shouldRestoreSession() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        RestoreFeedbackSessionAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        FeedbackSessionData feedbackSessionMessage \u003d (FeedbackSessionData) result.getOutput();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Verify response"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(courseId, feedbackSessionMessage.getCourseId());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(feedbackSessionName, feedbackSessionMessage.getFeedbackSessionName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Verify model"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertFalse(logic.getFeedbackSession(feedbackSessionName, courseId).isSessionDeleted());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withSessionNotInBin_shouldFail() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        RestoreFeedbackSessionAction notFoundAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        EntityNotFoundException notFoundException \u003d assertThrows(EntityNotFoundException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            getJsonResult(notFoundAction);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(\"Feedback session is not in recycle bin\", notFoundException.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withEmptyParameters_shouldFail() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        NullHttpParameterException emptyParamsException \u003d assertThrows(NullHttpParameterException.class, () -\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            RestoreFeedbackSessionAction emptyParamsAction \u003d getAction();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            getJsonResult(emptyParamsAction);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                String.format(Const.StatusCodes.NULL_HTTP_PARAMETER, Const.ParamsNames.COURSE_ID),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                emptyParamsException.getMessage()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyOnlyInstructorsCanAccess(submissionParams);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyInaccessibleWithoutModifySessionPrivilege(submissionParams);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 64,
      "-": 33
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/SearchInstructorsActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.SearchInstructorsAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.InstructorsData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * SUT: {@link SearchInstructorsAction}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class SearchInstructorsActionTest extends BaseActionTest\u003cSearchInstructorsAction\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final InstructorAttributes acc \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        DataBundle dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        removeAndRestoreDataBundle(dataBundle);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        putDocuments(dataBundle);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Const.ResourceURIs.SEARCH_INSTRUCTORS;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return GET;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // See test cases below."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_notEnoughParameters_shouldFail() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchCourseId_shouldSucceed() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, acc.getCourseId() };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(response.getInstructors().stream()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .filter(i -\u003e i.getName().equals(acc.getName()))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .isPresent());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchDisplayedName_shouldSucceed() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, acc.getDisplayedName() };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(response.getInstructors().stream()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .filter(i -\u003e i.getName().equals(acc.getName()))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .isPresent());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchEmail_shouldSucceed() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, acc.getEmail() };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(response.getInstructors().stream()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .filter(i -\u003e i.getName().equals(acc.getName()))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .isPresent());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchGoogleId_shouldSucceed() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, acc.getGoogleId() };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(response.getInstructors().stream()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .filter(i -\u003e i.getName().equals(acc.getName()))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .isPresent());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchName_shouldSucceed() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, acc.getName() };"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(response.getInstructors().stream()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .filter(i -\u003e i.getName().equals(acc.getName()))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                .isPresent());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_searchNoMatch_shouldBeEmpty() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] submissionParams \u003d new String[] { Const.ParamsNames.ADMIN_SEARCH_KEY, \"noMatch\" };"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchInstructorsAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        InstructorsData response \u003d (InstructorsData) result.getOutput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(0, response.getInstructors().size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testAccessControl() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyOnlyAdminCanAccess();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 129
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/SearchStudentsActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.SearchStudentsAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.StudentsData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * SUT:{@link SearchStudentsAction}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class SearchStudentsActionTest extends BaseActionTest\u003cSearchStudentsAction\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        DataBundle dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        removeAndRestoreDataBundle(dataBundle);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        putDocuments(dataBundle);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Const.ResourceURIs.SEARCH_STUDENTS;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return GET;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // TODO: Remove"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_notEnoughParameters_parameterFailure() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchName_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentAttributes acc \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] accNameParams \u003d new String[] {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, acc.getName(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(accNameParams);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(11, response.getStudents().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchCourseId_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentAttributes acc \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] accCourseIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, acc.getCourse(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(accCourseIdParams);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(5, response.getStudents().size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchAccountsGeneral_success() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] accNameParams \u003d new String[] {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, \"Course2\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(accNameParams);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(2, response.getStudents().size());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchEmail_success() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentAttributes acc \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] emailParams \u003d new String[] {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, acc.getEmail(),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(emailParams);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(1, response.getStudents().size());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchNoMatch_noMatch() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] accNameParams \u003d new String[] {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, \"minuscoronavirus\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(accNameParams);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(0, response.getStudents().size());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_adminSearchGoogleId_success() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] googleIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, \"Course\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(googleIdParams);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(11, response.getStudents().size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void execute_instructorSearchGoogleId_matchOnlyStudentsInCourse() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(\"idOfInstructor1OfCourse1\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] googleIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Const.ParamsNames.SEARCH_KEY, \"Course\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        };"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        SearchStudentsAction a \u003d getAction(googleIdParams);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StudentsData response \u003d (StudentsData) result.getOutput();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(5, response.getStudents().size());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testAccessControl() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyAccessibleForAdmin();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyOnlyInstructorsCanAccess();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 145
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/UpdateFeedbackResponseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackMcqResponseDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpRequestBodyException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.UpdateFeedbackResponseAction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.FeedbackResponseUpdateRequest;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link UpdateFeedbackResponseAction}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class UpdateFeedbackResponseActionTest extends BaseActionTest\u003cUpdateFeedbackResponseAction\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseAttributes student1ResponseToStudent1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseAttributes instructor1ResponseToAll;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return PUT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String giverEmail \u003d student1InCourse1.getEmail();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String receiverEmail \u003d student1InCourse1.getEmail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        student1ResponseToStudent1 \u003d logic.getFeedbackResponse(question.getId(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question3 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        instructor1ResponseToAll \u003d logic.getFeedbackResponse(question3.getId(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructor1OfCourse1.getEmail(), \"%GENERAL%\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testExecute_missingIntent_httpParameterFailure() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"missing intent response parameters\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] missingIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyHttpParameterFailure(missingIntentParams);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testExecute_missingResponseId_httpParameterFailure() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"missing response id parameters\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] missingResponseIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyHttpParameterFailure(missingResponseIdParams);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_studentFeedbackSubmissionMcqGenerateOptionsForTeams_shouldValidateAnswer() throws Exception {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentAttributes \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a question"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d new FeedbackMcqQuestionDetails();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes fqa \u003d logic.createFeedbackQuestion(FeedbackQuestionAttributes.builder()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fsa.getCourseId())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fsa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                .withNumberOfEntitiesToGiveFeedbackTo(2)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDescription(\"test\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionNumber(1)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverType(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientType(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDetails(feedbackMcqQuestionDetails)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowResponsesTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowGiverNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a response"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqResponseDetails feedbackMcqResponseDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqResponseDetails.setAnswer(studentAttributes.getTeam());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                        .builder(fqa.getId(), studentAttributes.getEmail(), studentAttributes.getEmail())"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(studentAttributes.getSection())"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(studentAttributes.getSection())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fqa.getCourseId())"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fqa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(feedbackMcqResponseDetails)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponse \u003d logic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(studentAttributes.getEmail());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponse.getId(),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidHttpRequestBodyException e \u003d assertThrows(InvalidHttpRequestBodyException.class, () -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            loginAsStudent(studentAttributes.getGoogleId());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateFeedbackResponseAction a \u003d getAction(updateRequest, params);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            getJsonResult(a);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.FeedbackQuestion.MCQ_ERROR_INVALID_OPTION, e.getMessage());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_instructorFeedbackSubmissionMcqGenerateOptionsForTeams_shouldValidateAnswer() throws Exception {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorAttributes \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentAttributes \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a question"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d new FeedbackMcqQuestionDetails();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes fqa \u003d logic.createFeedbackQuestion(FeedbackQuestionAttributes.builder()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fsa.getCourseId())"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fsa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                .withNumberOfEntitiesToGiveFeedbackTo(2)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDescription(\"test\")"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionNumber(1)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverType(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientType(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDetails(feedbackMcqQuestionDetails)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowResponsesTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowGiverNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a response"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqResponseDetails feedbackMcqResponseDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqResponseDetails.setAnswer(studentAttributes.getTeam());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                        .builder(fqa.getId(), instructorAttributes.getEmail(), instructorAttributes.getEmail())"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(Const.DEFAULT_SECTION)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(Const.DEFAULT_SECTION)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fqa.getCourseId())"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fqa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(feedbackMcqResponseDetails)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponse \u003d logic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        // send update request"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructorAttributes.getEmail());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponse.getId(),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidHttpRequestBodyException e \u003d assertThrows(InvalidHttpRequestBodyException.class, () -\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            loginAsInstructor(instructorAttributes.getGoogleId());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateFeedbackResponseAction a \u003d getAction(updateRequest, params);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            getJsonResult(a);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.FeedbackQuestion.MCQ_ERROR_INVALID_OPTION, e.getMessage());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseUpdateRequest getUpdateRequest(String recipientIdentifier) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d new FeedbackResponseUpdateRequest();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setQuestionType(FeedbackQuestionType.MCQ);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setRecipientIdentifier(recipientIdentifier);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackMcqResponseDetails newDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        newDetails.setAnswer(\"TEAM_NOT_EXIST\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setResponseDetails(newDetails);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return updateRequest;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        // See individual test cases below"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_wrongGiver_inaccessible() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"wrong giver type\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] wrongGiverTypeParams \u003d new String[] {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(wrongGiverTypeParams);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_previewMode_inaccessible() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"preview mode, cannot access\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] previewParams \u003d new String[] {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, instructor1OfCourse1.email,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(previewParams);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_responseSessionNotOpen_inaccessible() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"response in session not open, cannot access\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes closedSession \u003d typicalBundle.feedbackSessions.get(\"closedSession\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question4 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                closedSession.getFeedbackSessionName(), closedSession.getCourseId(), 1);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes responseInClosedSession \u003d logic.getFeedbackResponse(question4.getId(),"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructor1OfCourse1.getEmail(), instructor1OfCourse1.getEmail());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(closedSession.isOpened());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] sessionNotOpenParams \u003d new String[] {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, responseInClosedSession.getId(),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(sessionNotOpenParams);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_containsQuestionNotForInstructor_inaccessible() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Responses not visible to instructors, should not be accessible to an instructor\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \" even with course edit permissions.\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId())"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                .getShowResponsesTo().contains(FeedbackParticipantType.INSTRUCTORS));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] invalidModeratedInstructorSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student4inCourse1.getEmail(),"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(invalidModeratedInstructorSubmissionParams);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_noFeedbackResponse_inaccessible() {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"non-existent feedback response\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNull(logic.getFeedbackResponse(\"randomNonExistId\"));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] nonExistParams \u003d new String[] {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, \"randomNonExistId\","
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(EntityNotFoundException.class, () -\u003e getAction(nonExistParams).checkAccessControl());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_unknownIntent_inaccessible() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Unknown intent, should not be accessible\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] unknownIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(unknownIntentParams).checkAccessControl());"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_giverNotModeratedStudent_inaccessible() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor moderates student\u0027s response, but response not given by moderated student, \""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \"should not be accessible\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student5InCourse1 \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes testModerateQuestion \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 2);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes testModerateResponse \u003d logic.getFeedbackResponse(testModerateQuestion.getId(),"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student2InCourse1.getEmail(), student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(testModerateResponse.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student1InCourse1.getEmail(), testModerateResponse.getGiver());"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1OfCourse1.getEmail());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] moderatedStudentSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, testModerateResponse.getId(),"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, moderatedStudentSubmissionParams);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOtherStudent_inaccessible() throws Exception {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access other person\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student2InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student1ResponseToStudent1.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student2InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOtherPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOtherPersonParams);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOtherTeam_inaccessible() {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access other team\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student5InCourse1 \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student5InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student5InCourse1.getTeam(), student4ResponseToTeam.getGiver());"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOtherTeamParams \u003d new String[] {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOtherTeamParams);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessOtherGiver_inaccessible() {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access other person\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor2OfCourse1 \u003d typicalBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor2OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(instructor1ResponseToAll.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(instructor2OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor2OfCourse1.getEmail());"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOtherPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, instructorAccessOtherPersonParams);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessOwnResponse_accessible() {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access own response, should be accessible\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(instructor1OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1ResponseToAll.getRecipient());"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, instructorAccessOwnPersonParams);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessIntentStudentLoggedIn_inaccessible() {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access own response, but logged in as student, should be inaccessible\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(instructor1OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1ResponseToAll.getRecipient());"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, instructorAccessOwnPersonParams);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessSameTeam_accessible() {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access same team\u0027s response, should be accessible\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student1InCourse1.getTeam(), student4ResponseToTeam.getGiver());"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student4ResponseToTeam.getRecipient());"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessSameTeamParams \u003d new String[] {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessSameTeamParams);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOwnResponse_accessible() {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access own response, should be accessible\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorSubmitStudentResponse_accessible() {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor attempts to edit student\u0027s response with appropriate permission, should be accessible\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorSubmitStudentResponseNoPermission_inaccessible() {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor attempts to edit student\u0027s response, but without appropriate permission, \""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \"should be inaccessible\");"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(helperOfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 416,
      "-": 151
    }
  },
  {
    "path": "src/web/app/components/question-edit-form/question-edit-form.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card\" xmlns\u003d\"http://www.w3.org/1999/html\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-header text-white question-header\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eQuestion \u003cspan *ngIf\u003d\"!model.isEditable\"\u003e{{ model.questionNumber }}\u003c/span\u003e\u003c/strong\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cselect class\u003d\"form-control question-number-select\" [ngModel]\u003d\"model.questionNumber\" (ngModelChange)\u003d\"triggerModelChange(\u0027questionNumber\u0027, $event)\" *ngIf\u003d\"model.isEditable\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption *ngFor\u003d\"let i of range(numOfQuestions)\" [ngValue]\u003d\"i + 1\"\u003e{{ i + 1 }}\u003c/option\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/select\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        {{ model.questionType | questionTypeName }}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-7 text-right\" *ngIf\u003d\"!isDisplayOnly\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"!model.isEditable\" (click)\u003d\"triggerModelChange(\u0027isEditable\u0027, true)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Edit the existing question. Do remember to save the changes before moving on to editing another question.\"\u003e\u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e Edit\u003c/button\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"model.isEditable\" (click)\u003d\"saveQuestionHandler(saveModal)\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Save\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"model.isEditable\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Discard any unsaved edits and revert back to original question.\" (click)\u003d\"discardChangesHandler(discardModal)\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Discard\u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #discardModal let-modal\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Any unsaved changes will be lost\u003c/h5\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to discard your unsaved edits?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" (click)\u003d\"deleteCurrentQuestionHandler(deleteModal)\"\u003e\u003ci class\u003d\"fas fa-trash\"\u003e\u003c/i\u003e Delete\u003c/button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #deleteModal let-modal\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-danger\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-times-circle\"\u003e\u003c/i\u003e Warning: Deleted question cannot be recovered\u003c/h5\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to delete this question?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click)\u003d\"duplicateCurrentQuestionHandler()\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Make a copy of the existing question and add to the current feedback session.\" container\u003d\"body\"\u003e\u003ci class\u003d\"far fa-copy\"\u003e\u003c/i\u003e Duplicate\u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.ADD\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Cancel adding new question. No new question will be added to the feedback session.\" container\u003d\"body\" (click)\u003d\"discardChangesHandler(discardNewQuestionModal)\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Cancel\u003c/button\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #discardNewQuestionModal let-modal\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Any unsaved changes will be lost\u003c/h5\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to discard this question?"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"background-color-light-blue\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row padding-15px align-items-center\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"question-basic-info\"\u003eQuestion\u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-10\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctextarea class\u003d\"form-control\" [ngModel]\u003d\"model.questionBrief\" (ngModelChange)\u003d\"triggerModelChange(\u0027questionBrief\u0027, $event)\" [disabled]\u003d\"!model.isEditable\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                        placeholder\u003d\"A concise version of the question e.g. \u0026quot;How well did the team member communicate?\u0026quot;\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Please enter the question for users to give feedback about. e.g. What is the biggest weakness of the presented product?\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003e\u003c/textarea\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row padding-15px\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"question-basic-info\"\u003e[Optional]\u003cbr/\u003eDescription\u003c/div\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-10\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctm-rich-text-editor [richText]\u003d\"model.questionDescription\" (richTextChange)\u003d\"triggerModelChange(\u0027questionDescription\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                   placeholderText\u003d\"More details about the question e.g. \u0026quot;In answering the question, do consider communications made informally within the team, and formal communications with the instructors and tutors.\u0026quot;\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                                   ngbTooltip\u003d\"Please enter the description of the question.\"\u003e\u003c/tm-rich-text-editor\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"padding-15px\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-text-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-text-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-contribution-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-contribution-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-mcq-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-mcq-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-msq-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-msq-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-num-scale-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-num-scale-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rank-options-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rank-options-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rank-recipients-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rank-recipients-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rubric-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rubric-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-constsum-options-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-constsum-options-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-constsum-recipients-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-constsum-recipients-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"background-color-light-green margin-top-15px padding-15px\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb class\u003d\"feedback-path-title\"\u003eFeedback Path\u003c/b\u003e (Who is giving feedback about whom?)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"!model.isUsingOtherFeedbackPath\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {{ model.giverType | giverTypeDescription }} will give feedback on \u003ci class\u003d\"fas fa-arrow-right\"\u003e\u003c/i\u003e {{ model.recipientType | recipientTypeDescription }}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cspan *ngIf\u003d\"model.isUsingOtherFeedbackPath\"\u003eCustom feedback path\u003c/span\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-header\"\u003eCommon feedback path combinations\u003c/li\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let path of this.commonFeedbackPaths | keyvalue\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv ngbDropdown #subMenu\u003d\"ngbDropdown\" placement\u003d\"right\" (mouseenter)\u003d\"subMenu.open()\" (mouseleave)\u003d\"subMenu.close()\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cspan ngbDropdownAnchor class\u003d\"float-right invisible\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ path.key | giverTypeDescription }} will give feedback on ... \u003ci class\u003d\"fas fa-caret-right\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let recipient of path.value\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    (click)\u003d\"changeGiverRecipientType(path.key, recipient)\"\u003e{{ recipient | recipientTypeDescription }}\u003c/li\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/ul\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/li\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-divider\"\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" (click)\u003d\"triggerModelChange(\u0027isUsingOtherFeedbackPath\u0027, true)\"\u003eCustom feedback path...\u003c/li\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row margin-top-15px\" *ngIf\u003d\"model.isUsingOtherFeedbackPath\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cstrong\u003eWho will give the feedback:\u003c/strong\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"model.giverType\" (ngModelChange)\u003d\"changeGiverRecipientType($event, model.recipientType)\" [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003coption *ngFor\u003d\"let path of this.allowedFeedbackPaths | keyvalue\" [ngValue]\u003d\"path.key\"\u003e{{ path.key | giverTypeDescription }}\u003c/option\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/select\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cstrong\u003eWho the feedback is about:\u003c/strong\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"model.recipientType\" (ngModelChange)\u003d\"changeGiverRecipientType(model.giverType, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003coption *ngFor\u003d\"let recipientType of this.allowedFeedbackPaths.get(model.giverType)\" [ngValue]\u003d\"recipientType\"\u003e{{ recipientType | recipientTypeDescription }}\u003c/option\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/select\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row margin-top-15px align-items-center\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "           *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS\"\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"offset-1 col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          The maximum number of {{ model.recipientType | lowercase }} each respondent should give feedback to:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"input-group-prepend\"\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"input-group-text\"\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cinput type\u003d\"radio\" [name]\u003d\"model.feedbackQuestionId + \u0027numOfRecipients\u0027\" [ngModel]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                       (ngModelChange)\u003d\"triggerModelChange(\u0027numberOfEntitiesToGiveFeedbackToSetting\u0027, $event)\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                       [value]\u003d\"NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                       [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cinput type\u003d\"number\" min\u003d\"1\" class\u003d\"form-control\" [ngModel]\u003d\"model.customNumberOfEntitiesToGiveFeedbackTo\" (ngModelChange)\u003d\"triggerModelChange(\u0027customNumberOfEntitiesToGiveFeedbackTo\u0027, $event)\" [disabled]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting !\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM || !model.isEditable\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"form-check\"\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel class\u003d\"form-check-label\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cinput class\u003d\"form-check-input\" type\u003d\"radio\" [name]\u003d\"model.feedbackQuestionId + \u0027numOfRecipients\u0027\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                     [ngModel]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027numberOfEntitiesToGiveFeedbackToSetting\u0027, $event)\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                     [value]\u003d\"NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                     [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              Unlimited"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/label\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"margin-top-15px padding-15px\" [ngClass]\u003d\"{ \u0027background-color-light-green\u0027: !model.isQuestionHasResponses, \u0027alert alert-danger\u0027: model.isQuestionHasResponses }\"\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"model.isQuestionHasResponses\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch5\u003eChanging the visibility after collecting responses is not recommended.\u003c/h5\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003eReason: The existing responses were submitted under the \u0027promise\u0027 of a certain visibility and changing the visibility later \u0027breaks\u0027 that promise.\u003c/p\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb [ngClass]\u003d\"{ \u0027visibility-title\u0027: !model.isQuestionHasResponses }\"\u003eVisibility\u003c/b\u003e (Who can see the responses?)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"!model.isUsingOtherVisibilitySetting\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            {{ model.commonVisibilitySettingName }}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cspan *ngIf\u003d\"model.isUsingOtherVisibilitySetting\"\u003eCustom visibility options\u003c/span\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-header\"\u003eCommon visibility options\u003c/li\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let visibilityOption of commonFeedbackVisibilitySettings\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"applyCommonVisibilitySettings(visibilityOption)\"\u003e{{ visibilityOption.name }}\u003c/li\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-divider\" *ngIf\u003d\"isCustomFeedbackVisibilitySettingAllowed\"\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngIf\u003d\"isCustomFeedbackVisibilitySettingAllowed\" (click)\u003d\"triggerModelChange(\u0027isUsingOtherVisibilitySetting\u0027, true)\"\u003eCustom visibility options...\u003c/li\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctable class\u003d\"table margin-top-15px background-color-white table-striped\" *ngIf\u003d\"model.isUsingOtherVisibilitySetting\"\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cthead\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctr\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cth scope\u003d\"col\" class\u003d\"text-center\"\u003eUser/Group\u003c/th\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cth scope\u003d\"col\" class\u003d\"text-center\" *ngFor\u003d\"let visibilityControl of VisibilityControl | enumToArray\"\u003e{{ visibilityControl | visibilityControlName }}\u003c/th\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tr\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/thead\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctbody\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)\"\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd [ngbTooltip]\u003d\"visibilityType | visibilityTypeDescription\" container\u003d\"body\"\u003e {{ visibilityType | visibilityTypeName }}\u003c/td\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd *ngFor\u003d\"let visibilityControl of VisibilityControl | enumToArray\" class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cinput type\u003d\"checkbox\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                       (click)\u003d\"modifyVisibilityControl($event.target.checked, visibilityType, visibilityControl)\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                       [checked]\u003d\"visibilityStateMachine.isVisible(visibilityType, visibilityControl)\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                       [disabled]\u003d\"!visibilityStateMachine.isCellEditable(visibilityType, visibilityControl) || !model.isEditable\"\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tbody\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/table\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"margin-top-15px visibility-message\"\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        This is the visibility hint as seen by the feedback giver:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul class\u003d\"text-muted background-color-warning\"\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row margin-top-15px\" *ngIf\u003d\"!isDisplayOnly\"\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-12 text-right\"\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"!model.isEditable || model.isSaving\" (click)\u003d\"saveQuestionHandler(saveModal)\"\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT\"\u003eSave Changes\u003c/span\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.ADD\"\u003eSave Questions\u003c/span\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-template #saveModal let-modal\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-header bg-danger\"\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch5 class\u003d\"modal-title text-white\"\u003e\u003ci class\u003d\"fas fa-times-circle\"\u003e\u003c/i\u003e Warning: Existing responses will be deleted by your action\u003c/h5\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp\u003eEditing some fields will result in \u003cb\u003eall existing responses for this question to be deleted.\u003c/b\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp\u003eAre you sure you want to continue?\u003c/p\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-template\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 5,
      "-": 281
    }
  },
  {
    "path": "src/web/app/components/question-edit-form/question-edit-form.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditDetailsFormModule,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../question-types/question-edit-details-form/question-edit-details-form.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditFormComponent } from \u0027./question-edit-form.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityControlNamePipe,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityTypeDescriptionPipe,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityTypeNamePipe,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./visibility-setting.pipe\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import { mockTinyMceUuid } from \u0027../../../test-helpers/mock-tinymce-uuid\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027QuestionEditFormComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: QuestionEditFormComponent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cQuestionEditFormComponent\u003e;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  mockTinyMceUuid();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        QuestionEditFormComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        GiverTypeDescriptionPipe,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        RecipientTypeDescriptionPipe,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityControlNamePipe,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityTypeDescriptionPipe,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityTypeNamePipe,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        AjaxLoadingModule,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        RichTextEditorModule,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        QuestionEditDetailsFormModule,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityMessagesModule,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(QuestionEditFormComponent);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  it(\u0027should snap with default view\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 8,
      "-": 58
    }
  },
  {
    "path": "src/web/app/components/question-types/question-additional-info/mcq-question-additional-info.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "Multiple-choice (single answer) question options:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"questionDetails.generateOptionsFor !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  The options for this question is automatically generated from the list of all %s in this course."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cul *ngIf\u003d\"questionDetails.generateOptionsFor \u003d\u003d\u003d FeedbackParticipantType.NONE\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  \u003cli *ngFor\u003d\"let choice of questionDetails.mcqChoices\"\u003e{{ choice | stripHtmlTags }}\u003c/li\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cli *ngIf\u003d\"questionDetails.otherEnabled\"\u003eOther\u003c/li\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ul\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 7
    }
  },
  {
    "path": "src/web/app/components/question-types/question-additional-info/mcq-question-additional-info.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqQuestionDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionAdditionalInfoComponent } from \u0027./mcq-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027McqQuestionAdditionalInfoComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: McqQuestionAdditionalInfoComponent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cMcqQuestionAdditionalInfoComponent\u003e;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [McqQuestionAdditionalInfoComponent],"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(McqQuestionAdditionalInfoComponent);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default view\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  const mcqDetail: FeedbackMcqQuestionDetails \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    hasAssignedWeights: false,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqWeights: [],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqOtherWeight: 0,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    numOfMcqChoices: 3,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqChoices: [\u00271\u0027, \u00272\u0027, \u00273\u0027],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    otherEnabled: false,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    generateOptionsFor: FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    questionText: \u0027MCQ question detail\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  const mcqDetailWithOther: FeedbackMcqQuestionDetails \u003d {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    hasAssignedWeights: false,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqWeights: [],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqOtherWeight: 0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    numOfMcqChoices: 3,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqChoices: [\u00271\u0027, \u00272\u0027, \u00273\u0027],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    otherEnabled: true,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    generateOptionsFor: FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    questionText: \u0027MCQ question detail\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  const mcqDetailWithGenerateOption: FeedbackMcqQuestionDetails \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    hasAssignedWeights: false,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqWeights: [],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqOtherWeight: 0,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    numOfMcqChoices: 3,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    mcqChoices: [\u00271\u0027, \u00272\u0027, \u00273\u0027],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    otherEnabled: false,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    generateOptionsFor: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    questionText: \u0027MCQ with generate options question detail\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should show mcq options\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    component.questionDetails \u003d mcqDetail;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should show other when \"other\" option is enabled\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    component.questionDetails \u003d mcqDetailWithOther;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should show generator option message when \"generateOptionsFor\" is enabled\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    component.questionDetails \u003d mcqDetailWithGenerateOption;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "-": 92
    }
  },
  {
    "path": "src/web/app/components/question-types/question-additional-info/question-additional-info.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConstsumOptionsQuestionAdditionalInfoComponent } from \u0027./constsum-options-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  ConstsumRecipientsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./constsum-recipients-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { ContributionQuestionAdditionalInfoComponent } from \u0027./contribution-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionAdditionalInfoComponent } from \u0027./mcq-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { MsqQuestionAdditionalInfoComponent } from \u0027./msq-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { NumScaleQuestionAdditionalInfoComponent } from \u0027./num-scale-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankOptionsQuestionAdditionalInfoComponent } from \u0027./rank-options-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankRecipientsQuestionAdditionalInfoComponent } from \u0027./rank-recipients-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { RubricQuestionAdditionalInfoComponent } from \u0027./rubric-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { TextQuestionAdditionalInfoComponent } from \u0027./text-question-additional-info.component\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for all additional info components for all different question types."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionAdditionalInfoComponent,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    TeammatesCommonModule,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "export class QuestionAdditionalInfoModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 2,
      "-": 48
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/mcq-question-edit-answer-form.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctd\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"radio\" *ngFor\u003d\"let num of questionDetails.mcqChoices; let i \u003d index;\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"radio\" class\u003d\"margin-right-15px\" name\u003d\"mcq-{{ id }}\" [checked]\u003d\"isMcqOptionSelected[i]\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "               (click)\u003d\"updateSelectedMcqOption(i)\" [disabled]\u003d\"isDisabled\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cspan class\u003d\"option-text\" [innerHTML]\u003d\"questionDetails.mcqChoices[i] | safeHtml\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"radio\" *ngIf\u003d\"questionDetails.otherEnabled\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"radio\" class\u003d\"margin-right-15px\" name\u003d\"mcq-{{ id }}\" [checked]\u003d\"responseDetails.isOther\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "               (click)\u003d\"updateIsOtherOption()\" [disabled]\u003d\"isDisabled\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eOther\u003c/strong\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cinput  #inputTextBoxOther class\u003d\"form-control\" style\u003d\"display: inline; width: 60%;\" type\u003d\"text\" [disabled]\u003d\"!responseDetails.isOther || isDisabled\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngModel]\u003d\"responseDetails.otherFieldContent\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "             (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027otherFieldContent\u0027, $event)\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/td\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tr\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 20
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/mcq-question-edit-answer-form.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".margin-right-15px {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-right: 15px;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".option-text {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  display: inline-block;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  vertical-align: top;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  max-width: 95%;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  min-width: 300px;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 7,
      "-": 3
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/mcq-question-edit-answer-form.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { RichTextEditorModule } from \u0027../../rich-text-editor/rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionEditAnswerFormComponent } from \u0027./mcq-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027McqQuestionEditAnswerFormComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: McqQuestionEditAnswerFormComponent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cMcqQuestionEditAnswerFormComponent\u003e;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [McqQuestionEditAnswerFormComponent],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        RichTextEditorModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(McqQuestionEditAnswerFormComponent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "-": 29
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/question-edit-answer-form.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RichTextEditorModule } from \u0027../../rich-text-editor/rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConstsumOptionsQuestionEditAnswerFormComponent } from \u0027./constsum-options-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  ConstsumRecipientsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./constsum-recipients-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { ContributionPointDescriptionPipe } from \u0027./contribution-point-description.pipe\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { ContributionQuestionEditAnswerFormComponent } from \u0027./contribution-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionEditAnswerFormComponent } from \u0027./mcq-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { MsqQuestionEditAnswerFormComponent } from \u0027./msq-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { NumScaleQuestionEditAnswerFormComponent } from \u0027./num-scale-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankOptionsQuestionEditAnswerFormComponent } from \u0027./rank-options-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankRecipientsQuestionEditAnswerFormComponent } from \u0027./rank-recipients-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { RubricQuestionEditAnswerFormComponent } from \u0027./rubric-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { TextQuestionEditAnswerFormComponent } from \u0027./text-question-edit-answer-form.component\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for all different types of question edit answer forms."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionPointDescriptionPipe,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionPointDescriptionPipe,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionEditAnswerFormComponent,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    FormsModule,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    RichTextEditorModule,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    TeammatesCommonModule,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "export class QuestionEditAnswerFormModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 2,
      "-": 55
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-field/mcq-field.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003cdiv class\u003d\"input-group width-100-pc margin-top-22px\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan class\u003d\"input-group-addon\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinput type\u003d\"radio\" class\u003d\"disabled_radio\" disabled\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  \u003ctm-option-rich-text-editor class\u003d\"rich-text-editor\" [richText]\u003d\"text\" (richTextChange)\u003d\"onMcqOptionEntered($event)\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                       [isDisabled]\u003d\"!isEditable\" [minHeightInPx]\u003d\"38\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  \u003c/tm-option-rich-text-editor\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan class\u003d\"input-group-btn\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-default input-group-addon\" style\u003d\"cursor: initial; height: 100%\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tabindex\u003d\"-1\" [disabled]\u003d\"!isEditable\" (click)\u003d\"deleteMcqOption()\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/span\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 6,
      "-": 8
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-field/mcq-field.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".input-group-addon {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  resize: both;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: .375rem .75rem;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-bottom: 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  font-size: 1rem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  font-weight: 400;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  line-height: 1.5;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #495057;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  background-color: #E9ECEF;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  border: 1px solid #CED4DA;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".rich-text-editor {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  flex: 1 1 0%;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".margin-top-22px {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  margin-top: 22px;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 8,
      "-": 12
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-field/mcq-field.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorModule } from \u0027../option-rich-text-editor/option-rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqFieldComponent } from \u0027./mcq-field.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027McqFieldComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: McqFieldComponent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cMcqFieldComponent\u003e;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [McqFieldComponent],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        OptionRichTextEditorModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(McqFieldComponent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 2,
      "-": 31
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-question-edit-details-form.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-12 margin-bottom-7px\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-check form-check-inline\" *ngIf\u003d\"!isGeneratedOptionsEnabled\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"form-check-label\" ngbTooltip\u003d\"Assign weights to the choices for calculating statistics.\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "             container\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.hasAssignedWeights\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "               [disabled]\u003d\"!isEditable\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "               (ngModelChange)\u003d\"triggerWeightsColumn($event)\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb\u003eChoices are weighted\u003c/b\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"model.hasAssignedWeights \u0026\u0026 !isGeneratedOptionsEnabled\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "         class\u003d\"form-check form-check-inline padding-left-260px align-center\"\u003eWeights\u0026#8595;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!isGeneratedOptionsEnabled\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cdiv\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cdiv cdkDropList (cdkDropListDropped)\u003d\"onMcqOptionDropped($event)\" [cdkDropListDisabled]\u003d\"!isEditable\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          \u003cdiv class\u003d\"row margin-bottom-7px\"  *ngFor\u003d\"let num of model.mcqChoices; let i \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          trackBy: trackMcqOption\" cdkDrag\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003cdiv class\u003d\"col-sm-1\" cdkDragHandle\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              \u003cspan class\u003d\"btn btn-default input-group-addon\" style\u003d\"margin-top: 22px\"\u003e\u0026#8597; \u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003cdiv [ngClass]\u003d\"(model.hasAssignedWeights)?\u0027col-sm-8\u0027:\u0027col-sm-10\u0027\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctm-mcq-field (elementDeleted)\u003d\"onMcqOptionDeleted($event)\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                            (mcqText)\u003d\"onMcqOptionEntered($event, i)\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                            [index]\u003d\"i\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                            [isEditable]\u003d\"isEditable\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                            [numberOfMcqChoices]\u003d\"model.numOfMcqChoices\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                            [text]\u003d\"model.mcqChoices[i]\"\u003e\u003c/tm-mcq-field\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-sm-3\" *ngIf\u003d\"model.hasAssignedWeights\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              \u003ctm-weight-field [isEditable]\u003d\"isEditable\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                               [weight]\u003d\"model.mcqWeights[i]\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                               (weightEntered)\u003d\"onMcqWeightEntered($event, i)\"\u003e\u003c/tm-weight-field\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" name\u003d\"button\" ngDefaultControl"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                  [disabled]\u003d\"!isEditable\" (click)\u003d\"increaseNumberOfOptions()\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e add more options"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"checkbox col-sm-9 padding-left-35px\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"bold-label\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cinput class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.otherEnabled\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                   (ngModelChange)\u003d\"triggerOtherEnabled($event)\" [disabled]\u003d\"!isEditable\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Add \u0027Other\u0027 option (Allows respondents to type in their own answer)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-3\" *ngIf\u003d\"model.hasAssignedWeights \u0026\u0026 model.otherEnabled\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cinput type\u003d\"number\" class\u003d\"form-control\" step\u003d\"0.01\" min\u003d\"0\" [ngModel]\u003d\"model.mcqOtherWeight\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                 (ngModelChange)\u003d\"triggerModelChange(\u0027mcqOtherWeight\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-6 col-lg-5 col-lg-offset-1 padding-right-25px\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"form-check-label\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cinput class\u003d\"form-check-input\" type\u003d\"checkbox\"  [disabled]\u003d\"!isEditable\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngModel]\u003d\"isGeneratedOptionsEnabled\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "             (ngModelChange)\u003d\"triggerGeneratedOptionsChange($event)\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cb\u003eOr, generate options from the list of all\u003c/b\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cselect class\u003d\"form-control width-auto inline\" [disabled]\u003d\"!isGeneratedOptionsEnabled || !isEditable\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            [ngModel]\u003d\"model.generateOptionsFor\" (ngModelChange)\u003d\"triggerModelChange(\u0027generateOptionsFor\u0027, $event)\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003coption *ngFor\u003d\"let option of PARTICIPANT_TYPES\" [value]\u003d\"option\"\u003e{{ option }}\u003c/option\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/select\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 8,
      "-": 73
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-question-edit-details-form.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".padding-left-35px {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  padding-left: 35px;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ".input-group-addon {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  cursor: move;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  resize: both;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: .375rem .75rem;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-bottom: 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  font-size: 1rem;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  font-weight: 400;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  line-height: 1.5;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #495057;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  background-color: #E9ECEF;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  border: 1px solid #CED4DA;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ".padding-left-260px {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  padding-left: 260px;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".cdk-drop-list-dragging .cdk-drag {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  transition: transform 250ms cubic-bezier(0, 0, .2, 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".cdk-drag-animating {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  transition: transform 300ms cubic-bezier(0, 0, .2, 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".cdk-drag-placeholder {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  opacity: 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 12,
      "-": 21
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-question-edit-details-form.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { DragDropModule } from \u0027@angular/cdk/drag-drop\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqFieldComponent } from \u0027./mcq-field/mcq-field.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionEditDetailsFormComponent } from \u0027./mcq-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorModule } from \u0027./option-rich-text-editor/option-rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { WeightFieldComponent } from \u0027./weight-field/weight-field.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027McqQuestionEditDetailsFormComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: McqQuestionEditDetailsFormComponent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cMcqQuestionEditDetailsFormComponent\u003e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        McqQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        McqFieldComponent,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        WeightFieldComponent],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        OptionRichTextEditorModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        DragDropModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(McqQuestionEditDetailsFormComponent);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "-": 33
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/option-rich-text-editor/option-rich-text-editor.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003ceditor class\u003d\"editor\" [ngClass]\u003d\"{ \u0027editor-disabled\u0027: isDisabled }\" [ngStyle]\u003d\"{ \u0027min-height.px\u0027: minHeightInPx }\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        [init]\u003d\"init\" [disabled]\u003d\"isDisabled\" [inline]\u003d\"isInlineMode\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        [ngModel]\u003d\"richText\" (ngModelChange)\u003d\"richTextChange.emit($event)\" [attr.placeholder]\u003d\"placeholderText\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c/editor\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/option-rich-text-editor/option-rich-text-editor.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".editor {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  border: 1px solid #CED4DA;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  background-color: #FFF;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  border-radius: .25rem;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  padding: .375rem .75rem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".editor-disabled {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  background-color: #E9ECEF;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  opacity: 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ".placeholder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  padding: .375rem .75rem;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  position: absolute;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 16
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/option-rich-text-editor/option-rich-text-editor.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorComponent } from \u0027./option-rich-text-editor.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorModule } from \u0027./option-rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "describe(\u0027RichTextEditorComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  let component: OptionRichTextEditorComponent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  let fixture: ComponentFixture\u003cOptionRichTextEditorComponent\u003e;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      imports: [OptionRichTextEditorModule],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    })"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    fixture \u003d TestBed.createComponent(OptionRichTextEditorComponent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 26
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/option-rich-text-editor/option-rich-text-editor.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * A rich text editor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  selector: \u0027tm-option-rich-text-editor\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  templateUrl: \u0027./option-rich-text-editor.component.html\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  styleUrls: [\u0027./option-rich-text-editor.component.scss\u0027],"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "export class OptionRichTextEditorComponent implements OnInit {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  isDisabled: boolean \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  isInlineMode: boolean \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  minHeightInPx: number \u003d 120;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  placeholderText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  richText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  richTextChange: EventEmitter\u003cstring\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  // the argument passed to tinymce.init() in native JavaScript"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  readonly init: any \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    skin_url: \u0027/tinymce/skins/ui/oxide\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    resize: false,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    fontsize_formats: \u00278pt 9pt 10pt 11pt 12pt 14pt 16pt 18pt 20pt 24pt 26pt 28pt 36pt 48pt 72pt\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    font_formats: \u0027Andale Mono\u003dandale mono,times;\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Arial\u003darial,helvetica,sans-serif;\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Arial Black\u003darial black,avant garde;\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Book Antiqua\u003dbook antiqua,palatino;\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Comic Sans MS\u003dcomic sans ms,sans-serif;\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Courier New\u003dcourier new,courier;\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Georgia\u003dgeorgia,palatino;\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Helvetica\u003dhelvetica;\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Impact\u003dimpact,chicago;\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Symbol\u003dsymbol;\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Tahoma\u003dtahoma,arial,helvetica,sans-serif;\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Terminal\u003dterminal,monaco;\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Times New Roman\u003dtimes new roman,times;\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Trebuchet MS\u003dtrebuchet ms,geneva;\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Verdana\u003dverdana,geneva;\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Webdings\u003dwebdings;\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        + \u0027Wingdings\u003dwingdings,zapf dingbats\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    relative_urls: false,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    convert_urls: false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    remove_linebreaks: false,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    plugins: ["
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u0027placeholder\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u0027advlist autolink lists link image charmap print hr anchor\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u0027searchreplace wordcount visualblocks visualchars code fullscreen\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u0027insertdatetime nonbreaking save table directionality\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u0027emoticons paste textpattern\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    menubar: false,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    toolbar1: \u0027undo redo | bold italic underline | bullist numlist outdent indent | link image table\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    toolbar2: \u0027forecolor backcolor | fontsizeselect fontselect | charmap emoticons\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  };"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 73
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/option-rich-text-editor/option-rich-text-editor.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { EditorModule } from \u0027@tinymce/tinymce-angular\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorComponent } from \u0027./option-rich-text-editor.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * Module for a rich text editor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  declarations: [OptionRichTextEditorComponent],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    FormsModule,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    EditorModule,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    OptionRichTextEditorComponent,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "})"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "export class OptionRichTextEditorModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 21
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/question-edit-details-form.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { DragDropModule } from \u0027@angular/cdk/drag-drop\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConstsumOptionsFieldComponent } from \u0027./constsum-options-field/constsum-options-field.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  ConstsumOptionsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./constsum-options-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  ConstsumRecipientsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./constsum-recipients-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ContributionQuestionEditDetailsFormComponent } from \u0027./contribution-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqFieldComponent } from \u0027./mcq-field/mcq-field.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionEditDetailsFormComponent } from \u0027./mcq-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { MsqFieldComponent } from \u0027./msq-field/msq-field.component\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { MsqQuestionEditDetailsFormComponent } from \u0027./msq-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { NumScaleQuestionEditDetailsFormComponent } from \u0027./num-scale-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { OptionRichTextEditorModule } from \u0027./option-rich-text-editor/option-rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankOptionsFieldComponent } from \u0027./rank-options-field/rank-options-field.component\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankOptionsQuestionEditDetailsFormComponent } from \u0027./rank-options-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankRecipientsQuestionEditDetailsFormComponent } from \u0027./rank-recipients-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import { RubricQuestionEditDetailsFormComponent } from \u0027./rubric-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import { TextQuestionEditDetailsFormComponent } from \u0027./text-question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import { WeightFieldComponent } from \u0027./weight-field/weight-field.component\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for all different types of question edit details forms."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    McqFieldComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqFieldComponent,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsFieldComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    WeightFieldComponent,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsFieldComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    McqFieldComponent,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqFieldComponent,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsFieldComponent,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    WeightFieldComponent,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumOptionsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumRecipientsQuestionEditDetailsFormComponent,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    DragDropModule,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    FormsModule,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    NgbModule,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    OptionRichTextEditorModule,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "export class QuestionEditDetailsFormModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 2,
      "-": 70
    }
  },
  {
    "path": "src/web/app/components/question-types/question-response/mcq-question-response.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003cspan *ngIf\u003d\"!responseDetails.isOther\" [innerHTML]\u003d\"responseDetails.answer | safeHtml\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan *ngIf\u003d\"responseDetails.isOther\"\u003e{{ responseDetails.otherFieldContent }}\u003c/span\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 1
    }
  },
  {
    "path": "src/web/app/components/question-types/question-response/mcq-question-response.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionResponseComponent } from \u0027./mcq-question-response.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027McqQuestionResponseComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: McqQuestionResponseComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cMcqQuestionResponseComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [McqQuestionResponseComponent],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(McqQuestionResponseComponent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "-": 24
    }
  },
  {
    "path": "src/web/app/components/question-types/question-response/question-response.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConstsumQuestionResponseComponent } from \u0027./constsum-question-response.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ContributionQuestionResponseComponent } from \u0027./contribution-question-response.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { McqQuestionResponseComponent } from \u0027./mcq-question-response.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { MsqQuestionResponseComponent } from \u0027./msq-question-response.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NumScaleQuestionResponseComponent } from \u0027./num-scale-question-response.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankOptionsQuestionResponseComponent } from \u0027./rank-options-question-response.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { RankRecipientsQuestionResponseComponent } from \u0027./rank-recipients-question-response.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { RubricQuestionResponseComponent } from \u0027./rubric-question-response.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { TextQuestionResponseComponent } from \u0027./text-question-response.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for all different types of question responses."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionResponseComponent,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionResponseComponent,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionResponseComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionResponseComponent,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionResponseComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionResponseComponent,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumQuestionResponseComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionResponseComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionResponseComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    ContributionQuestionResponseComponent,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    TextQuestionResponseComponent,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    NumScaleQuestionResponseComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    McqQuestionResponseComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    MsqQuestionResponseComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    RubricQuestionResponseComponent,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    ConstsumQuestionResponseComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    RankOptionsQuestionResponseComponent,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    RankRecipientsQuestionResponseComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    TeammatesCommonModule,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "export class QuestionResponseModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 2,
      "-": 43
    }
  },
  {
    "path": "src/web/app/components/rich-text-editor/rich-text-editor.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * A rich text editor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-rich-text-editor\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./rich-text-editor.component.html\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./rich-text-editor.component.scss\u0027],"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class RichTextEditorComponent implements OnInit {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  isDisabled: boolean \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  isInlineMode: boolean \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  minHeightInPx: number \u003d 120;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  placeholderText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  richText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  richTextChange: EventEmitter\u003cstring\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  // the argument passed to tinymce.init() in native JavaScript"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly init: any \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    skin_url: \u0027/tinymce/skins/ui/oxide\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    resize: false,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    fontsize_formats: \u00278pt 9pt 10pt 11pt 12pt 14pt 16pt 18pt 20pt 24pt 26pt 28pt 36pt 48pt 72pt\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    font_formats: \u0027Andale Mono\u003dandale mono,times;\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Arial\u003darial,helvetica,sans-serif;\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Arial Black\u003darial black,avant garde;\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Book Antiqua\u003dbook antiqua,palatino;\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Comic Sans MS\u003dcomic sans ms,sans-serif;\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Courier New\u003dcourier new,courier;\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Georgia\u003dgeorgia,palatino;\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Helvetica\u003dhelvetica;\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Impact\u003dimpact,chicago;\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Symbol\u003dsymbol;\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Tahoma\u003dtahoma,arial,helvetica,sans-serif;\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Terminal\u003dterminal,monaco;\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Times New Roman\u003dtimes new roman,times;\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Trebuchet MS\u003dtrebuchet ms,geneva;\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Verdana\u003dverdana,geneva;\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Webdings\u003dwebdings;\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027Wingdings\u003dwingdings,zapf dingbats\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    relative_urls: false,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    convert_urls: false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    remove_linebreaks: false,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    plugins: ["
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027placeholder\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027advlist autolink lists link image charmap print hr anchor\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027searchreplace wordcount visualblocks visualchars code fullscreen\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027insertdatetime nonbreaking save table directionality\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027emoticons paste textpattern\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    toolbar1: \u0027insertfile undo redo | styleselect | bold italic underline \u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027| alignleft aligncenter alignright alignjustify \u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        + \u0027| bullist numlist outdent indent | link image\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    toolbar2: \u0027print | forecolor backcolor | fontsizeselect fontselect | charmap emoticons | fullscreen\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 73
    }
  },
  {
    "path": "src/web/app/components/teammates-common/strip-html-tags.pipe.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { StripHtmlTagsPipe } from \u0027./strip-html-tags.pipe\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "describe(\u0027StripHtmlTagsPipe\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  it(\u0027create an instance\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const pipe: StripHtmlTagsPipe \u003d new StripHtmlTagsPipe();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    expect(pipe).toBeTruthy();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  });"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 8
    }
  },
  {
    "path": "src/web/app/components/teammates-common/strip-html-tags.pipe.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * Pipe to strip off HTML tags from text."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "@Pipe({"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  name: \u0027stripHtmlTags\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "})"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "export class StripHtmlTagsPipe implements PipeTransform {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Transforms HTML to plain text."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  transform(html: string): any {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return html"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        .replace(/(\u003cimg([^\u003e]+)\u003e)/ig, \u0027[Image]\u0027)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        .replace(/(\u003ctable((.|\\s)*)\u003c\\/table\u003e)/ig, \u0027[Table]\u0027)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        .replace(/(\u003c([^\u003e]+)\u003e)/ig, \u0027\u0027);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 21
    }
  },
  {
    "path": "src/web/app/components/teammates-common/teammates-common.module.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { EnumToArrayPipe } from \u0027./enum-to-array.pipe\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormatDateDetailPipe } from \u0027./format-date-detail.pipe\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorRoleNamePipe } from \u0027./instructor-role-name.pipe\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { PublishStatusNamePipe } from \u0027./publish-status-name.pipe\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionTypeNamePipe } from \u0027./question-type-name.pipe\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { SafeHtmlPipe } from \u0027./safe-html.pipe\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import { StripHtmlTagsPipe } from \u0027./strip-html-tags.pipe\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { SubmissionStatusNamePipe } from \u0027./submission-status-name.pipe\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Common module in the project."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    EnumToArrayPipe,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    SubmissionStatusNamePipe,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    PublishStatusNamePipe,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    FormatDateDetailPipe,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    SafeHtmlPipe,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    StripHtmlTagsPipe,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    QuestionTypeNamePipe,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorRoleNamePipe,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    EnumToArrayPipe,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    SubmissionStatusNamePipe,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    PublishStatusNamePipe,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    FormatDateDetailPipe,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    SafeHtmlPipe,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    StripHtmlTagsPipe,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    QuestionTypeNamePipe,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorRoleNamePipe,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "export class TeammatesCommonModule { }"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 3,
      "-": 37
    }
  },
  {
    "path": "src/web/app/page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cnav class\u003d\"navbar navbar-expand-lg navbar-dark fixed-top\" (tmClickOutside)\u003d\"isCollapsed \u003d true\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca routerLink\u003d\"/web\" (click)\u003d\"isCollapsed \u003d true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cimg src\u003d\"assets/images/teammateslogo.png\" alt\u003d\"TEAMMATES [Logo]\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/a\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"navbar-toggler d-lg-none\" type\u003d\"button\" (click)\u003d\"toggleCollapse()\" [attr.aria-expanded]\u003d\"!isCollapsed\" aria-label\u003d\"Toggle navigation\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"navbar-toggler-icon\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"collapse navbar-collapse\" [ngbCollapse]\u003d\"isCollapsed\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav mr-auto\" *ngIf\u003d\"isValidUser\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template ngFor let-navItem [ngForOf]\u003d\"navItems\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli *ngIf\u003d\"navItem.children\" class\u003d\"nav-item dropdown\" ngbDropdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003e{{ navItem.display }}\u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"dropdown-menu\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ca *ngFor\u003d\"let childItem of navItem.children\" class\u003d\"dropdown-item\" [routerLink]\u003d\"childItem.url\" (click)\u003d\"toggleCollapse()\"\u003e{{ childItem.display}}\u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli *ngIf\u003d\"!navItem.children\" class\u003d\"nav-item\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"nav-link\" [routerLink]\u003d\"navItem.url\" (click)\u003d\"toggleCollapse()\"\u003e{{ navItem.display }}\u003c/a\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ul\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav mr-auto\" *ngIf\u003d\"!isValidUser\"\u003e\u003c/ul\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav pull-right\" *ngIf\u003d\"!hideAuthInfo \u0026\u0026 !isFetchingAuthDetails\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cli class\u003d\"nav-item dropdown\" ngbDropdown placement\u003d\"bottom-right\" *ngIf\u003d\"!user\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003eLogin\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003cdiv class\u003d\"dropdown-menu-right\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"student-login-btn\" [href]\u003d\"studentLoginUrl\"\u003eStudent Login\u003c/a\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"instructor-login-btn\" [href]\u003d\"instructorLoginUrl\"\u003eInstructor Login\u003c/a\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/li\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cli class\u003d\"nav-item dropdown\" ngbDropdown placement\u003d\"bottom-right\" *ngIf\u003d\"user\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003e{{ user }}\u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003cdiv class\u003d\"dropdown-menu-right\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/student\" *ngIf\u003d\"isStudent\"\u003eTo student pages\u003c/a\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/instructor\" *ngIf\u003d\"isInstructor\"\u003eTo instructor pages\u003c/a\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/admin\" *ngIf\u003d\"isAdmin\"\u003eTo admin pages\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"dropdown-divider\" *ngIf\u003d\"isStudent || isInstructor || isAdmin\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"logout-btn\" [href]\u003d\"logoutUrl\"\u003eLog Out\u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/li\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ul\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/nav\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-loader-bar\u003e\u003c/tm-loader-bar\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-loading-spinner *ngIf\u003d\"isFetchingAuthDetails\"\u003e\u003c/tm-loading-spinner\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"!isFetchingAuthDetails\" id\u003d\"main-content\" class\u003d\"container main-content\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"isUnsupportedBrowser\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e\u0026nbsp;You are currently using {{ browser }}. This web browser is not officially supported by TEAMMATES."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      In case this web browser does not display the webpage correctly you may wish to view it in the following supported browsers:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003col\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eMicrosoft Internet Explorer {{ minimumVersions[\u0027IE\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eChrome {{ minimumVersions[\u0027Chrome\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eFirefox {{ minimumVersions[\u0027Firefox\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eSafari {{ minimumVersions[\u0027Safari\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ol\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"!(isNetworkOnline$ | async)\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-wifi\"\u003e\u003c/i\u003e\u0026nbsp;You are not connected to the internet."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"isCookieDisabled\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e\u0026nbsp;You are currently not enabling cookies in your browser. TEAMMATES requires cookies in order to work effectively."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"!isValidUser\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isStudent || isInstructor || isAdmin\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"alert alert-light col-sm-4 offset-sm-4\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cimg src\u003d\"assets/images/angry.png\" style\u003d\"float: left; height: 90px; margin: 0 10px 10px 0;\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch5 style\u003d\"padding: 30px 0 20px 0\"\u003eYou are not authorized to view this page.\u003c/h5\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003chr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp style\u003d\"text-align: center\"\u003eLogout and return to main page.\u003c/p\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!(isStudent || isInstructor || isAdmin)\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"alert alert-danger col-sm-8 offset-sm-2\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"align-left\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ch5 style\u003d\"text-align: center;\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e\u0026nbsp;Ooops! Your Google account is not known to TEAMMATES\u003c/h5\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp style\u003d\"text-align: center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "              To access a course on TEAMMATES, you need to wait until an instructor adds you to that course. As a confirmation, TEAMMATES will send you instructions on how to access that particular course."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/p\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003chr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            If you \u0027joined\u0027 the course in TEAMMATES using a Google account before, but cannot login anymore, these are the possible reasons:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003col\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                You used a different Google account to access TEAMMATES in the past. In that case, you need to use the same Google account to access TEAMMATES again. Logout and re-login using the other Google account. If you don\u0027t remember which Google account you used previously, email us from the same email account to which you receive TEAMMATES emails."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                You changed the primary email from a non-Gmail address to a Gmail address recently. In that case,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca routerLink\u003d\"/web/front/contact\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                  email us"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                so that we can reconfigure your account to use the new Gmail address."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                You joined this course just a few seconds ago and your data may be still in the process of propagating through our servers. In that case, please try this same page in a few minutes."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/ol\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch1 *ngIf\u003d\"pageTitle \u0026\u0026 isValidUser\"\u003e{{ pageTitle }}\u003c/h1\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003crouter-outlet *ngIf\u003d\"isValidUser\"\u003e\u003c/router-outlet\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cfooter\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"container footer text-nowrap\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-left\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-bolt\"\u003e\u003c/i\u003e\u003ca routerLink\u003d\"/web/front/home\"\u003e TEAMMATES\u003c/a\u003e V{{ version }}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-center\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"institute\"\u003e\u003ci class\u003d\"fas fa-university\"\u003e\u003c/i\u003e for {{ institute }}\u003c/span\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-right\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"far fa-comments\"\u003e\u003c/i\u003e Send \u003ca routerLink\u003d\"/web/front/contact\" target\u003d\"_blank\"\u003eFeedback\u003c/a\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-12 text-center\"\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          Sponsored by School of Computing, National University of Singapore. (\u003ca routerLink\u003d\"/web/front/contact\"\u003eBecome a sponsor\u003c/a\u003e)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/footer\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 131
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { SearchStudentsTable } from \u0027../../../pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorHelpStudentsSectionComponent } from \u0027./instructor-help-students-section.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-example-box\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "class ExampleBoxStubComponent {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-instructor-search-bar\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "class InstructorSearchBarStubComponent {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-instructor-course-student-edit-page\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "class InstructorCourseStudentEditPageStubComponent { @Input() isEnabled?: boolean; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-result-table\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentResultTableStubComponent {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentTables: SearchStudentsTable[] \u003d [];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.FEMALE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-course-related-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "class CourseRelatedInfoStubComponent {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() student: Student \u003d {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorHelpStudentsSectionComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorHelpStudentsSectionComponent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorHelpStudentsSectionComponent\u003e;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorHelpStudentsSectionComponent,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        ExampleBoxStubComponent,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorSearchBarStubComponent,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseStudentEditPageStubComponent,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentResultTableStubComponent,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRelatedInfoStubComponent,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorHelpStudentsSectionComponent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 2,
      "-": 82
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { SearchStudentsTable } from \u0027../../../pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorHelpSectionComponent } from \u0027../instructor-help-section.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Students Section of the Instructor Help Page."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-help-students-section\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-help-students-section.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-help-students-section.component.scss\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorHelpStudentsSectionComponent extends InstructorHelpSectionComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly supportEmail: string \u003d environment.supportEmail;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027Alice\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027National University of Singapore\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027American\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.FEMALE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027Hi I am Alice Betsy! I am from Colorado, America. I am a programming and gaming enthusiast. \u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      + \u0027Aspiring to become a Software Architect in a well reputed organization.\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentAttributes: Student \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027test.exa-demo\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027Betsy\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027Alice is a transfer student.\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleSingleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: [{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      students: [{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        status: JoinState.JOINED,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleMultipleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: ["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jean Grey\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jean@email.com\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section B\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Oliver Gates\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027oliver@email.com\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Thora Parker\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027thora@email.com\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section C\u0027,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jack Wayne\u0027,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jack@email.com\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team C\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 2,
      "-": 114
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch1\u003eCourse Details\u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eCourse ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.course.courseId}}\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eCourse name:\u003c/label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\" id\u003d\"coursename\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.course.courseName}}\u003c/p\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eSections:\u003c/label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.sectionsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eTeams:\u003c/label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.teamsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eTotal students:\u003c/label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.studentsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3 control-label text-right\"\u003eInstructors:\u003c/label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv *ngFor\u003d\"let instructor of instructors\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {{instructor.role | instructorRoleName}}: {{instructor.name}} ({{instructor.email}})"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv *ngIf\u003d\"sections.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"openModal(remindStudentsModal)\" value\u003d\"Remind Students to Join\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-envelope\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              Remind Students to Join"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"downloadAllStudentsFromCourse(courseDetails.course.courseId)\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-download\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "              Download Student List"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"openModal(deleteAllStudentsModal)\" value\u003d\"Delete All Students\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-trash\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete All Students"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cspan\u003eNon-English characters not displayed properly in the downloaded file?"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan class\u003d\"btn-link\" (click)\u003d\"openModal(studentTableModal); loadStudentsListCsv(courseDetails.course.courseId)\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                  Click here."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/span\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"sections.length \u003d\u003d\u003d 0, else studentListTable\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fa fa-exclamation-circle text-muted\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    There are no students in this course. Click"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseDetails.course.courseId}\"\u003ehere\u003c/a\u003e to enroll students."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #studentListTable class\u003d\"card border border-primary mb-4\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body p-0\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header text-dark-blue bg-light-blue font-weight-bold\"\u003e[{{courseDetails.course.courseId}}]\u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body p-0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003ctm-student-list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            [courseId]\u003d\"courseDetails.course.courseId\" [sections]\u003d\"sections\" [useGrayHeading]\u003d\"true\" [enableRemindButton]\u003d\"true\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            (removeStudentFromCourseEvent)\u003d\"removeStudentFromCourse($event)\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003e\u003c/tm-student-list\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #remindStudentsModal let-modal\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header alert-info\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fa fa-info-circle fa-2x\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch4 class\u003d\"modal-title\"\u003eConfirm sending join requests\u003c/h4\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      Usually, there is no need to use this feature because TEAMMATES sends an automatic invite to students at the opening"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      time of each session. Send a join request to all yet-to-join students in {{courseDetails.course.courseId}} anyway?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-cancel btn-lg btn-default\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-ok btn-lg btn-danger\" (click)\u003d\"remindAllStudentsFromCourse(courseDetails.course.courseId); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #deleteAllStudentsModal let-modal\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header alert-danger\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fa fa-times-circle fa-2x\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch4 class\u003d\"modal-title\"\u003eConfirm Deletion\u003c/h4\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      Are you sure you want to remove all students from the course {{courseDetails.course.courseId}}?"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-cancel btn-lg btn-default\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-ok btn-lg btn-danger\" (click)\u003d\"deleteAllStudentsFromCourse(courseDetails.course.courseId); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #studentTableModal let-modal\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Tips: \u003cspan class\u003d\"btn-link\" (click)\u003d\"copyContent(courseStudentListAsCsv)\"\u003eClick here\u003c/span\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        to copy the table, then \u003ckbd\u003eCtrl + V\u003c/kbd\u003e or \u003ckbd\u003e⌘ + V\u003c/kbd\u003e to PASTE to your Excel Workbook."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss(\u0027Cross click\u0027)\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctm-ajax-preload *ngIf\u003d\"loading\"\u003e\u003c/tm-ajax-preload\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv [innerHTML]\u003d\"convertToHtmlTable(courseStudentListAsCsv)\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cb\u003e{{ isAjaxSuccess ? \u0027\u0027 : \u0027There was an error loading data. Please try again.\u0027 }}\u003c/b\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 4,
      "-": 131
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { saveAs } from \u0027file-saver\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ClipboardService } from \u0027ngx-clipboard\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructors,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData, StudentListStudentData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseStats {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionsTotal: number;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  teamsTotal: number;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  studentsTotal: number;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseDetailsBundle {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  stats: CourseStats;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentIndexedData {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  [key: string]: Student[];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course details page."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-details-page\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-details-page.component.html\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-details-page.component.scss\u0027],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseDetailsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  courseDetails: CourseDetailsBundle \u003d {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    course: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      creationTimestamp: 0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      deletionTimestamp: 0,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    stats: {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionsTotal: 0,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      teamsTotal: 0,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      studentsTotal: 0,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  instructors: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  sections: StudentListSectionData[] \u003d [];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  courseStudentListAsCsv: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  loading: boolean \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute, private router: Router,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              private clipboardService: ClipboardService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal, private navigationService: NavigationService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private instructorService: InstructorService) { }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourseDetails(queryParams.courseid);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course\u0027s details based on the given course ID."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseDetails(courseid: string): void {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourseName(courseid);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadInstructors(courseid);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadStudents(courseid);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the name of the course"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadCourseName(courseid: string): void {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(courseid).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseDetails.course \u003d course;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the instructors in the course"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadInstructors(courseid: string): void {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructors({ courseId: courseid, intent: Intent.FULL_DETAIL })"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    .subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      this.instructors \u003d instructors.instructors;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the students in the course"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadStudents(courseid: string): void {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId: courseid }).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        const term: string \u003d x.sectionName;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return acc;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      }, {});"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      const teams: Set\u003cstring\u003e \u003d new Set();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      students.students.forEach((student: Student) \u003d\u003e teams.add(student.teamName));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseDetails.stats \u003d {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionsTotal: Object.keys(sections).length,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        teamsTotal: teams.size,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsTotal: students.students.length,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(sections).forEach((key: string) \u003d\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        const studentsInSection: Student[] \u003d sections[key];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        const data: StudentListStudentData[] \u003d [];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsInSection.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          const studentData: StudentListStudentData \u003d {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            name: student.name,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            status: student.joinState,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            email: student.email,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            team: student.teamName,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          data.push(studentData);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadPrivilege(courseid, key, data);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadPrivilege(courseid: string, sectionName: string, students: StudentListStudentData[]): void {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      sectionName,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: courseid,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionData: StudentListSectionData \u003d {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        students,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sections.push(sectionData);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "   * Automatically copy the text content provided."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "  copyContent(text: string): void {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    this.clipboardService.copyFromContent(text);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the modal for different buttons and link."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   * Delete all the students in a course."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.deleteAllStudentsFromCourse({ courseId })"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadCourseDetails(courseId);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "   * Download all the students from a course."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  downloadAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    const filename: string \u003d `${courseId.concat(\u0027_studentList\u0027)}.csv`;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    let blob: any;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calling REST API only the first time to load the downloadable data"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.loading) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      blob \u003d new Blob([this.courseStudentListAsCsv], { type: \u0027text/csv\u0027 });"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      saveAs(blob, filename);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.studentService.loadStudentListAsCsv({ courseId })"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: string) \u003d\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          blob \u003d new Blob([resp], { type: \u0027text/csv\u0027 });"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          saveAs(blob, filename);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseStudentListAsCsv \u003d resp;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loading \u003d false;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "   * Load the student list in csv table format"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentsListCsv(courseId: string): void {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d true;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calls the REST API once only when student list is not loaded"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.courseStudentListAsCsv !\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loading \u003d false;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.loadStudentListAsCsv({ courseId })"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: string) \u003d\u003e {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseStudentListAsCsv \u003d resp;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d false;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remind all yet to join students in a course."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "  remindAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.remindUnregisteredStudentsForJoin(courseId).subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessagePreservingParams(this.router,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027/web/instructor/courses/details\u0027, resp.message);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a csv string to a html table string for displaying."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "  convertToHtmlTable(str: string): string {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    let result: string \u003d \u0027\u003ctable class\u003d\\\"table table-bordered table-striped table-sm\\\"\u003e\u0027;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    let rowData: string[];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    const lines: string[] \u003d str.split(/\\r?\\n/);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    lines.forEach("
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        (line: string) \u003d\u003e {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "          rowData \u003d this.getTableData(line);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "          if (rowData.filter((s: string) \u003d\u003e s !\u003d\u003d \u0027\u0027).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          result \u003d result.concat(\u0027\u003ctr\u003e\u0027);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const td of rowData) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d result.concat(`\u003ctd\u003e${td}\u003c/td\u003e`);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "          result \u003d result.concat(\u0027\u003c/tr\u003e\u0027);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    return result.concat(\u0027\u003c/table\u003e\u0027);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "   * Obtain a string without quotations."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  getTableData(line: string): string[] {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    const output: string[] \u003d [];"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    let inquote: boolean \u003d false;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    let buffer: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    const data: string[] \u003d line.split(\u0027\u0027);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c data.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      if (data[i] \u003d\u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        if (i + 1 \u003c data.length \u0026\u0026 data[i + 1] \u003d\u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "          i +\u003d 1;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          inquote \u003d !inquote;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "      if (data[i] \u003d\u003d\u003d \u0027,\u0027) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        if (inquote) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "          buffer \u003d buffer.concat(data[i]);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "          output.push(buffer);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "          buffer \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        buffer \u003d buffer.concat(data[i]);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    output.push(buffer.trim());"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.courseService.removeStudentFromCourse(this.courseDetails.course.courseId, studentEmail).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          .showSuccessMessage(`Student is successfully deleted from course \"${this.courseDetails.course.courseId}\"`);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.sections.forEach("
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        (section: StudentListSectionData) \u003d\u003e {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          section.students \u003d section.students.filter("
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            (student: StudentListStudentData) \u003d\u003e student.email !\u003d\u003d studentEmail);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 12,
      "madanalogy": 17,
      "-": 310
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cstrong\u003eCourse:\u003c/strong\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"float-sm-right\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-light btn-sm btn-course\" ngbTooltip\u003d\"Edit course name\" placement\u003d\"top-right\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "              [disabled]\u003d\"!currInstructorCoursePrivilege.canModifyCourse\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "              *ngIf\u003d\"!isEditingCourse\" (click)\u003d\"this.isEditingCourse \u003d true\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fa fa-pen\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cbutton *ngIf\u003d\"isEditingCourse\" class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              ngbTooltip\u003d\"Cancel editing course details\" placement\u003d\"top-right\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              (click)\u003d\"cancelEditingCourse()\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              \u003ci class\u003d\"fa fa-times\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Cancel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e\u0026nbsp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-light btn-sm btn-course\" ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "              [disabled]\u003d\"!currInstructorCoursePrivilege.canModifyCourse\" (click)\u003d\"deleteCourse()\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fa fa-trash\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    \u003cform #courseForm\u003d\"ngForm\" (ngSubmit)\u003d\"onSaveCourse()\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3\"\u003eCourse ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          \u003cinput class\u003d\"col-xs-12 form-control\" type\u003d\"text\" tabindex\u003d\"1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                 #courseId\u003d\"ngModel\" [(ngModel)]\u003d\"course.courseId\" name\u003d\"courseId\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                 [maxlength]\u003d\"FormValidator.COURSE_ID_MAX_LENGTH\" required disabled\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3\"\u003eCourse Name:\u003c/label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          \u003cinput class\u003d\"form-control\" ngbTooltip\u003d\"Enter the name of the course, e.g. Software Engineering.\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                 type\u003d\"text\" tabindex\u003d\"2\" [disabled]\u003d\"!isEditingCourse\" name\u003d\"courseName\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                 [(ngModel)]\u003d\"course.courseName\" #courseName\u003d\"ngModel\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                 [maxlength]\u003d\"FormValidator.COURSE_NAME_MAX_LENGTH\" required\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          \u003cdiv [hidden]\u003d\"courseName.valid || (courseName.pristine \u0026\u0026 courseName.untouched)\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "               class\u003d\"invalid-field\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            \u003ci class\u003d\"fa fa-exclamation-circle\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            The field Course Name should not be empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-xs-12 col-sm-3\"\u003eTime Zone:\u003c/label\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-xs-12 col-sm-9\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cselect class\u003d\"form-control\" ngbTooltip\u003d\"The time zone for the course. You should not need to change this as it is auto-detected based on your"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "              device settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time.\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "              [(ngModel)]\u003d\"course.timeZone\" #timeZone\u003d\"ngModel\" [disabled]\u003d\"!isEditingCourse\" required name\u003d\"timeZone\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003coption *ngFor\u003d\"let timezone of timezones\" [value]\u003d\"timezone\"\u003e{{ timezone }}\u003c/option\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/select\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan class\u003d\"input-group-btn\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-primary\" type\u003dbutton [disabled]\u003d\"!isEditingCourse\" (click)\u003d\"detectTimezone()\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                Auto-Detect"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003c/span\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cdiv class\u003d\" col-sm-12 text-center\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" type\u003d\"submit\" [disabled]\u003d\"form.invalid\" *ngIf\u003d\"isEditingCourse\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            Save Changes"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/form\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"right top-padded\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca class\u003d\"small\" href\u003d\"/web/instructor/help#course-instructor-access\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fa fa-info-circle\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    More about configuring access permissions"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/a\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-container *ngFor\u003d\"let panelDetail of instructorDetailPanels; let i \u003d index\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-instructor-edit-panel [editMode]\u003d\"EditMode.EDIT\" [(instructor)]\u003d\"panelDetail.editPanel\" [instructorIndex]\u003d\"i\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                            [currInstructorCoursePrivilege]\u003d\"currInstructorCoursePrivilege\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                            (viewRolePrivilegeModel)\u003d\"viewRolePrivilegeModel($event)\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                            (deleteInstructor)\u003d\"deleteInstructor(i)\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                            (saveInstructor)\u003d\"saveInstructor(i)\" (cancelEditing)\u003d\"cancelEditingInstructor(i)\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                            (sendRemindJoinEmail)\u003d\"resendReminderEmail(i)\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                            [allSections]\u003d\"this.allSections\" [allSessions]\u003d\"this.allSessions\"\u003e\u003c/tm-instructor-edit-panel\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-container\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-center\" *ngIf\u003d\"!isAddingNewInstructor\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"btn btn-primary\" tabindex\u003d\"6\" type\u003d\"button\" (click)\u003d\"isAddingNewInstructor \u003d true\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    Add New Instructor"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"isAddingNewInstructor\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-instructor-edit-panel [editMode]\u003d\"EditMode.ADD\" [(instructor)]\u003d\"newInstructorPanel\" [instructorIndex]\u003d\"instructorDetailPanels.length\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                            [currInstructorCoursePrivilege]\u003d\"currInstructorCoursePrivilege\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                            (viewRolePrivilegeModel)\u003d\"viewRolePrivilegeModel($event)\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                            (saveInstructor)\u003d\"addNewInstructor()\" (cancelEditing)\u003d\"isAddingNewInstructor \u003d false;\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                            [allSections]\u003d\"this.allSections\" [allSessions]\u003d\"this.allSessions\"\u003e\u003c/tm-instructor-edit-panel\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 7,
      "madanalogy": 14,
      "-": 81
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ".invalid-field {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  padding-top: 5px;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  color: #B50000;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 3,
      "-": 1
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { FormGroup } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatAll, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../../services/auth.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  AuthInfo,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPermissionRole,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructors,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorCreateRequest, InstructorPrivilegeUpdateRequest, Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { FormValidator } from \u0027../../../types/form-validator\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorOverallPermission,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  InstructorSectionLevelPermission,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  InstructorSessionLevelPermission,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./custom-privilege-setting-panel/custom-privilege-setting-panel.component\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  DeleteInstructorConfirmModalComponent,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./delete-instructor-confirm-model/delete-instructor-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { EditMode, InstructorEditPanel } from \u0027./instructor-edit-panel/instructor-edit-panel.component\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  ResendInvitationEmailModalComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./resend-invitation-email-modal/resend-invitation-email-modal.component\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ViewRolePrivilegesModalComponent } from \u0027./view-role-privileges-modal/view-role-privileges-modal.component\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "interface InstructorEditPanelDetail {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  originalInstructor: Instructor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  editPanel: InstructorEditPanel;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course edit page."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-edit-page\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-edit-page.component.html\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-edit-page.component.scss\u0027],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseEditPageComponent implements OnInit {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  @ViewChild(\u0027courseForm\u0027, { static: false }) form!: FormGroup;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  EditMode: typeof EditMode \u003d EditMode;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  FormValidator: typeof FormValidator \u003d FormValidator;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  timezones: string[] \u003d [];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditingCourse: boolean \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  originalCourse: Course \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  };"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  currInstructorGoogleId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  currInstructorCoursePrivilege: InstructorPrivilege \u003d {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyCourse: true,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifySession: true,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyStudent: true,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyInstructor: true,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    canViewStudentInSections: true,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    canViewSessionInSections: true,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorDetailPanels: InstructorEditPanelDetail[] \u003d [];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddingNewInstructor: boolean \u003d false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  newInstructorPanel: InstructorEditPanel \u003d {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    permission: {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      privilege: {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyCourse: false,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifySession: false,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyStudent: false,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyInstructor: false,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        canViewStudentInSections: false,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifySessionCommentsInSections: false,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        canViewSessionInSections: false,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        canSubmitSessionInSections: false,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionLevel: [],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditing: true,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  // for fine-grain permission setting"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  allSections: string[] \u003d [];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  allSessions: string[] \u003d [];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "              private navigationService: NavigationService,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private instructorService: InstructorService,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourseInfo();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCurrInstructorInfo();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      // load all section and session name"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          this.studentService.getStudentsFromCourse({ courseId: this.courseId }),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe((vals: any[]) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        const students: Students \u003d vals[0] as Students;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        const sessions: FeedbackSessions \u003d vals[1] as FeedbackSessions;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        this.allSections \u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            Array.from(new Set(students.students.map((value: Student) \u003d\u003e value.sectionName)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        this.allSessions \u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            sessions.feedbackSessions.map((session: FeedbackSession) \u003d\u003e session.feedbackSessionName);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadCourseInstructors();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezones \u003d Object.keys(this.timezoneService.getTzOffsets());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "   * Replaces the timezone value with the detected timezone."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  detectTimezone(): void {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    this.course.timeZone \u003d moment.tz.guess();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course being edited."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseInfo(): void {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(this.courseId).subscribe((resp: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d resp;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.originalCourse \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the information of the current logged-in instructor."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCurrInstructorInfo(): void {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    // privilege"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currInstructorCoursePrivilege \u003d resp;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    // login credential"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authService.getAuthUser().subscribe((res: AuthInfo) \u003d\u003e {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currInstructorGoogleId \u003d res.user \u003d\u003d\u003d undefined ? \u0027\u0027 : res.user.id;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the current course and redirects to \u0027Courses\u0027 page if action is successful."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(): void {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.binCourse(this.courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/courses\u0027,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the updated course details."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  onSaveCourse(): void {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    if (this.form.invalid) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsTouched());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.updateCourse(this.courseId, {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: this.course.courseName,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: this.course.timeZone,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027The course has been edited.\u0027);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditingCourse \u003d false;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d resp;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.originalCourse \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsUntouched());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsPristine());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Cancels editing the course details."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  cancelEditingCourse(): void {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.course \u003d Object.assign({}, this.originalCourse);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.isEditingCourse \u003d false;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsPristine());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Object.values(this.form.controls).forEach((control: any) \u003d\u003e control.markAsUntouched());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all instructors in the course."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseInstructors(): void {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructors({"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels \u003d resp.instructors.map((i: Instructor) \u003d\u003e ({"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            originalInstructor: Object.assign({}, i),"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            editPanel: this.getInstructorEditPanelModel(i),"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "          }));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels.forEach((panel: InstructorEditPanelDetail) \u003d\u003e {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadPermissionForInstructor(panel.originalInstructor, panel.editPanel.permission);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the default edit panel model of an instructor."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  getInstructorEditPanelModel(i: Instructor): InstructorEditPanel {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * The non-null assertion operator (!) is used below in `isDisplayedToStudents`,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * `displayedToStudentsAs` and `role`. These attributes should never be undefined and are only"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * typed as such to accomodate for a use case in SearchService."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      googleId: i.googleId,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: i.courseId,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "      email: i.email,"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      // tslint:disable-next-line"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      isDisplayedToStudents: i.isDisplayedToStudents!,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      // tslint:disable-next-line"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      displayedToStudentsAs: i.displayedToStudentsAs!,"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      name: i.name,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      // tslint:disable-next-line"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "      role: i.role!,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: i.joinState,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "      permission: {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        privilege: {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyCourse: true,"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySession: true,"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyStudent: true,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyInstructor: true,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewStudentInSections: true,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewSessionInSections: true,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "          canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevel: [],"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditing: false,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows the model of details permission for a role."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "  viewRolePrivilegeModel(role: InstructorPermissionRole): void {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ViewRolePrivilegesModalComponent);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {}, () \u003d\u003e {});"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorRole: role,"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.instructorPrivilege \u003d resp;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "   * Cancels editing an instructor."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "  cancelEditingInstructor(index: number): void {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    panelDetail.editPanel \u003d this.getInstructorEditPanelModel(panelDetail.originalInstructor);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves instructor at index."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "  saveInstructor(index: number): void {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    const reqBody: InstructorCreateRequest \u003d {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "      id: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "          ? panelDetail.originalInstructor.googleId : undefined,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "      name: panelDetail.editPanel.name,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "      email: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "          ? panelDetail.editPanel.email : panelDetail.originalInstructor.email,"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "      role: panelDetail.editPanel.role,"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "      displayName: panelDetail.editPanel.displayedToStudentsAs,"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudent: panelDetail.editPanel.isDisplayedToStudents,"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    } as InstructorCreateRequest;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.updateInstructor({"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: panelDetail.originalInstructor.courseId,"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      requestBody: reqBody,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }).subscribe((resp: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "      panelDetail.originalInstructor \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "      const permission: InstructorOverallPermission \u003d panelDetail.editPanel.permission;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "      panelDetail.editPanel \u003d this.getInstructorEditPanelModel(resp);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "      panelDetail.editPanel.permission \u003d permission;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updatePrivilegeForInstructor(panelDetail.originalInstructor, panelDetail.editPanel.permission);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(`The instructor ${resp.name} has been updated.`);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    panelDetail.editPanel.isEditing \u003d false;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes instructor at index."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteInstructor(index: number): void {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(DeleteInstructorConfirmModalComponent);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.instructorToDelete \u003d panelDetail.originalInstructor;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.isDeletingSelf \u003d panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.instructorService.deleteInstructor({"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: panelDetail.originalInstructor.courseId,"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        instructorEmail: panelDetail.originalInstructor.email,"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      }).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        if (panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "          this.navigationService.navigateWithSuccessMessage("
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.router, \u0027/web/instructor/courses\u0027, \u0027Instructor is successfully deleted.\u0027);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels.splice(index, 1);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027Instructor is successfully deleted.\u0027);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "   * Re-sends an invitation email to an instructor in the course."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "  resendReminderEmail(index: number): void {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ResendInvitationEmailModalComponent);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.instructorToResend \u003d panelDetail.originalInstructor;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "          .remindInstructorForJoin(panelDetail.originalInstructor.courseId, panelDetail.originalInstructor.email)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds new instructor."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "  addNewInstructor(): void {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    const reqBody: InstructorCreateRequest \u003d {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "      name: this.newInstructorPanel.name,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.newInstructorPanel.email,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "      role: this.newInstructorPanel.role,"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "      displayName: this.newInstructorPanel.displayedToStudentsAs,"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudent: this.newInstructorPanel.isDisplayedToStudents,"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    } as InstructorCreateRequest;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.createInstructor({ courseId: this.courseId, requestBody: reqBody })"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "          const newDetailPanels: InstructorEditPanelDetail \u003d {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            originalInstructor: Object.assign({}, resp),"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            editPanel: this.getInstructorEditPanelModel(resp),"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "          newDetailPanels.editPanel.permission \u003d this.newInstructorPanel.permission;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels.push(newDetailPanels);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(`\"The instructor ${resp.name} has been added successfully."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "          An email containing how to \u0027join\u0027 this course will be sent to ${resp.email} in a few minutes.\"`);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updatePrivilegeForInstructor(newDetailPanels.originalInstructor, newDetailPanels.editPanel.permission);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isAddingNewInstructor \u003d false;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "          this.newInstructorPanel \u003d {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027\u0027,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027\u0027,"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            permission: {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "              privilege: {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyCourse: true,"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifySession: true,"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyStudent: true,"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyInstructor: true,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewStudentInSections: true,"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewSessionInSections: true,"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel: [],"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            isEditing: true,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads permission for instructor."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPermissionForInstructor(instructor: Instructor, permission: InstructorOverallPermission): void {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    // only need to load for custom role."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    const requests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    requests.push(this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: instructor.courseId,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyCourse \u003d resp.canModifyCourse;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySession \u003d resp.canModifySession;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyStudent \u003d resp.canModifyStudent;"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyInstructor \u003d resp.canModifyInstructor;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    this.allSections.forEach((sectionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionLevelPermission: InstructorSectionLevelPermission \u003d {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionNames: [sectionName],"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        privilege: {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyCourse: false,"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySession: false,"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyStudent: false,"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyInstructor: false,"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewStudentInSections: false,"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySessionCommentsInSections: false,"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewSessionInSections: false,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "          canSubmitSessionInSections: false,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionLevel: [],"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel.push(sectionLevelPermission);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      requests.push(this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        sectionName,"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: instructor.courseId,"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "      }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "      })));"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "      this.allSessions.forEach((sessionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        requests.push(this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          sectionName,"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          feedbackSessionName: sessionName,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: instructor.courseId,"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevelPermission.sessionLevel.push({"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionName,"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            privilege: {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyCourse: false,"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifySession: false,"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyStudent: false,"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyInstructor: false,"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "              canViewStudentInSections: false,"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifySessionCommentsInSections: resp.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "              canViewSessionInSections: resp.canViewSessionInSections,"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "              canSubmitSessionInSections: resp.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    // get all permission"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(requests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel \u003d permission.sectionLevel"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((sectionLevelPermission: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            // discard section level permission that is consistent with the overall permission"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canViewStudentInSections"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canViewStudentInSections) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canModifySessionCommentsInSections) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canViewSessionInSections) {"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canSubmitSessionInSections) {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            return sectionLevelPermission.sessionLevel"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                .some((sessionLevelPermission: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                  return sectionLevelPermission.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canModifySessionCommentsInSections ||"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                      sectionLevelPermission.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canViewSessionInSections ||"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                      sectionLevelPermission.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionLevel.sessionLevel.every((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "          return sectionLevel.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canModifySessionCommentsInSections \u0026\u0026"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canViewSessionInSections \u0026\u0026"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        })) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "          // session level is consistent with the section level, we can remove it."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.sessionLevel \u003d [];"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates privilege for instructor"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "  updatePrivilegeForInstructor(instructor: Instructor, permission: InstructorOverallPermission): void {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    // only need to update for custom role."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "    const requests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    requests.push("
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.instructorService.updateInstructorPrivilege({"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: instructor.courseId,"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          requestBody: {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifyCourse: permission.privilege.canModifyCourse,"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifySession: permission.privilege.canModifySession,"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifyStudent: permission.privilege.canModifyStudent,"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifyInstructor: permission.privilege.canModifyInstructor,"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            canViewStudentInSections: permission.privilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifySessionCommentsInSections: permission.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            canViewSessionInSections: permission.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            canSubmitSessionInSections: permission.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          } as InstructorPrivilegeUpdateRequest,"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyCourse \u003d resp.canModifyCourse;"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySession \u003d resp.canModifySession;"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyStudent \u003d resp.canModifyStudent;"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyInstructor \u003d resp.canModifyInstructor;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "    permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionLevel.sectionNames.forEach((sectionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        requests.push("
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            this.instructorService.updateInstructorPrivilege({"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              courseId: instructor.courseId,"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              requestBody: {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionName,"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewStudentInSections: sectionLevel.privilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifySessionCommentsInSections: sectionLevel.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewSessionInSections: sectionLevel.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                canSubmitSessionInSections: sectionLevel.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              } as InstructorPrivilegeUpdateRequest,"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            })));"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevel.sessionLevel.forEach((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          requests.push("
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              this.instructorService.updateInstructorPrivilege({"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                courseId: instructor.courseId,"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                instructorEmail: instructor.email,"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                requestBody: {"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                  sectionName,"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                  feedbackSessionName: sessionLevel.sessionName,"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                  canModifySessionCommentsInSections: sessionLevel.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                  canViewSessionInSections: sessionLevel.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                  canSubmitSessionInSections: sessionLevel.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                } as InstructorPrivilegeUpdateRequest,"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionLevel.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionLevel.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionLevel.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "              })));"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    of(...requests).pipe(concatAll()).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "      // privileges updated"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "      // filter out empty permission setting"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel \u003d permission.sectionLevel.filter("
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "          (sectionLevel: InstructorSectionLevelPermission) \u003d\u003e sectionLevel.sectionNames.length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 13,
      "tiuweehan": 63,
      "dvrylc": 11,
      "madanalogy": 13,
      "-": 597
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, ContentChild, ElementRef, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { HotTableRegisterer } from \u0027@handsontable/angular\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import Handsontable from \u0027handsontable\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HasResponses, JoinState, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentEnrollRequest, StudentsEnrollRequest } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessage } from \u0027../../components/status-message/status-message\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { EnrollStatus } from \u0027./enroll-status\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentAttributes {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  course: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  lastName: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  comments: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  section: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "interface EnrollResultPanel {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  status: EnrollStatus;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  messageForEnrollmentStatus: string;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  studentList: Student[];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * List of enrolled students and their attributes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export interface StudentListResults {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  enrolledStudents: StudentAttributes[];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course enroll page."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-enroll-page\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-enroll-page.component.html\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-enroll-page.component.scss\u0027],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseEnrollPageComponent implements OnInit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  EnrollStatus: typeof EnrollStatus \u003d EnrollStatus;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  courseid: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  coursePresent?: boolean;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  showEnrollResults?: boolean \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  statusMessage: StatusMessage[] \u003d [];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027moreInfo\u0027, { static: false }) moreInfo?: ElementRef;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  @ContentChild(\u0027pasteModalBox\u0027, { static: false }) pasteModalBox?: NgbModal;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isNewStudentsPanelCollapsed: boolean \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isExistingStudentsPanelCollapsed: boolean \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  colHeaders: string[] \u003d [\u0027Section\u0027, \u0027Team\u0027, \u0027Name\u0027, \u0027Email\u0027, \u0027Comments\u0027];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  contextMenuOptions: String[] | Object[] \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    [\u0027row_above\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027row_below\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027remove_row\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027undo\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027redo\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        key: \u0027paste\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Paste\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        callback: this.pasteClick,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027make_read_only\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027alignment\u0027];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  hotRegisterer: HotTableRegisterer \u003d new HotTableRegisterer();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  newStudentsHOT: string \u003d \u0027newStudentsHOT\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  enrollResultPanelList?: EnrollResultPanel[];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  existingStudents: Student[] \u003d [];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  existingStudentsHOT: string \u003d \u0027existingStudentsHOT\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  isExistingStudentsPresent: boolean \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  loading: boolean \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal) { }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getCourseEnrollPageData(queryParams.courseid);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits enroll data"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEnrollData(): void {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    const newStudentsHOTInstance: Handsontable \u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hotRegisterer.getInstance(this.newStudentsHOT);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    const hotInstanceColHeaders: string[] \u003d (newStudentsHOTInstance.getColHeader() as string[]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentsEnrollRequest: StudentsEnrollRequest \u003d {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      studentEnrollRequests: [],"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    // Parse the user input to be requests."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    // Handsontable contains null value initially,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    // see https://github.com/handsontable/handsontable/issues/3927"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    newStudentsHOTInstance.getData()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null || cell \u003d\u003d\u003d \u0027\u0027)))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        .forEach((row: string[]) \u003d\u003e (studentsEnrollRequest.studentEnrollRequests.push({"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "          section: row[hotInstanceColHeaders.indexOf(this.colHeaders[0])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[0])],"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          team: row[hotInstanceColHeaders.indexOf(this.colHeaders[1])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[1])],"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "          name: row[hotInstanceColHeaders.indexOf(this.colHeaders[2])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[2])],"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          email: row[hotInstanceColHeaders.indexOf(this.colHeaders[3])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[3])],"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          comments: row[hotInstanceColHeaders.indexOf(this.colHeaders[4])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[4])],"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.enrollStudents(this.courseid, studentsEnrollRequest).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudents: Student[] \u003d resp.students;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.showEnrollResults \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessage.pop(); // removes any existing error status message"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027Enrollment successful. Summary given below.\u0027);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      this.enrollResultPanelList \u003d"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          this.populateEnrollResultPanelList(this.existingStudents, enrolledStudents,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "              studentsEnrollRequest.studentEnrollRequests);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessage.pop(); // removes any existing error status message"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId: this.courseid }).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      this.existingStudents \u003d resp.students;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isExistingStudentsPresent \u003d true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  private populateEnrollResultPanelList(existingStudents: Student[], enrolledStudents: Student[],"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                                         enrollRequests: StudentEnrollRequest[]): EnrollResultPanel[] {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    const panels: EnrollResultPanel[] \u003d [];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentLists: Student[][] \u003d [];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const _ of Object.values(EnrollStatus).filter((value: EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      studentLists.push([]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify students not in the enroll list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const existingStudent of existingStudents) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d existingStudent.email;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      if (enrolledStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.UNMODIFIED].push(existingStudent);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify new students, modified students, and students that are modified without any changes."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const enrolledStudent of enrolledStudents) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      const unchangedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isSameEnrollInformation(student, enrolledStudent);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      const modifiedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d enrolledStudent.email;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      if (unchangedStudent !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.MODIFIED_UNCHANGED].push(enrolledStudent);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.MODIFIED].push(enrolledStudent);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.NEW].push(enrolledStudent);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify students that failed to enroll."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const request of enrollRequests) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d request.email;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      if (enrolledStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.ERROR].push({"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "          email: request.email,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "          courseId: this.courseid,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          name: request.name,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionName: request.section,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "          teamName: request.team,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          comments: request.comments,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "          lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    const statusMessage: { [key: number]: string } \u003d {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      0: `${studentLists[EnrollStatus.NEW].length} student(s) added:`,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      1: `${studentLists[EnrollStatus.MODIFIED].length} student(s) modified:`,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      2: `${studentLists[EnrollStatus.MODIFIED_UNCHANGED].length} student(s) updated with no changes:`,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      3: `${studentLists[EnrollStatus.ERROR].length} student(s) failed to be enrolled:`,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      4: `${studentLists[EnrollStatus.UNMODIFIED].length} student(s) remain unmodified:`,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const status of Object.values(EnrollStatus).filter((value: EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      panels.push({"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        status: EnrollStatus[status as keyof typeof EnrollStatus],"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        messageForEnrollmentStatus: statusMessage[EnrollStatus[status as keyof typeof EnrollStatus]],"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        studentList: studentLists[EnrollStatus[status as keyof typeof EnrollStatus]],"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentLists[EnrollStatus.ERROR].length \u003e 0) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      const generalEnrollErrorMessage: string \u003d \u0027You may check that: \u0027 +"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Section\" and \"Comment\" are optional while \"Team\", \"Name\", and \"Email\" must be filled. \u0027 +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Section\", \"Team\", \"Name\", and \"Comment\" should start with an alphabetical character, \u0027 +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027unless wrapped by curly brackets \"{}\", and should not contain vertical bar \"|\" and percentage sign\"%\". \u0027 +"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Email\" should contain some text followed by one \\\u0027@\\\u0027 sign followed by some more text. \u0027 +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Team\" should not have same format of email to avoid mis-interpretation. \u0027;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Some students failed to be enrolled, see the summary below."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "       ${generalEnrollErrorMessage}`);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    return panels;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  private isSameEnrollInformation(enrolledStudent: Student, existingStudent: Student): boolean {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    return enrolledStudent.email \u003d\u003d\u003d existingStudent.email"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.name \u003d\u003d\u003d existingStudent.name"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.teamName \u003d\u003d\u003d existingStudent.teamName"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.sectionName \u003d\u003d\u003d existingStudent.sectionName"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.comments \u003d\u003d\u003d existingStudent.comments;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds new rows to the \u0027New students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "   * according to user input"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  addRows(numOfRows: number): void {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    this.hotRegisterer.getInstance(this.newStudentsHOT).alter("
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027insert_row\u0027, [], numOfRows);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles the view of \u0027New Students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "   * and/or its affiliated buttons"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleNewStudentsPanel(): void {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isNewStudentsPanelCollapsed \u003d !this.isNewStudentsPanelCollapsed;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the length of the current spreadsheet."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rows with all null values are filtered."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "  getSpreadsheetLength(dataHandsontable: string[][]): number {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    return dataHandsontable"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null)))"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        .length;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "   * Transforms the first uppercase letter of a string into a lowercase letter."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "  unCapitalizeFirstLetter(targetString: string): string {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    return targetString.charAt(0).toLowerCase() + targetString.slice(1);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts returned student list to a suitable format required by Handsontable."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "  studentListDataToHandsontableData(studentsData: StudentAttributes[], handsontableColHeader: any[]): string[][] {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    const headers: string[] \u003d handsontableColHeader.map(this.unCapitalizeFirstLetter);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    return studentsData.map((student: StudentAttributes) \u003d\u003e (headers.map("
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        (header: string) \u003d\u003e (student as any)[header])));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads existing student data into the spreadsheet interface."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  loadExistingStudentsData(existingStudentsHOTInstance: Handsontable, studentsData: StudentAttributes[]): void {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    existingStudentsHOTInstance.loadData(this.studentListDataToHandsontableData("
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsData, (existingStudentsHOTInstance.getColHeader() as any[])));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles the view of \u0027Existing Students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleExistingStudentsPanel(): void {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    // Has to be done before the API call is made so that HOT is available for data population"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d true;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    const existingStudentsHOTInstance: Handsontable \u003d"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hotRegisterer.getInstance(this.existingStudentsHOT);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calling REST API only the first time when spreadsheet has no data"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.getSpreadsheetLength(existingStudentsHOTInstance.getData()) !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loading \u003d false;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getStudentsEnrolledInCourse({ courseId: this.courseid }).subscribe("
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        (resp: StudentListResults) \u003d\u003e {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "          if (resp.enrolledStudents.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadExistingStudentsData(existingStudentsHOTInstance, resp.enrolledStudents);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            // Shows a message if there are no existing students. Panel would not be expanded."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isExistingStudentsPresent \u003d false;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d false;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "   * Trigger click button"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  pasteClick(): void {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    const element: HTMLElement \u003d"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        (document.getElementById(\u0027paste\u0027) as HTMLElement);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    element.click();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows modal box when user clicks on the \u0027paste\u0027 option in the"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handsontable context menu"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  showPasteModalBox(pasteModalBox: any): void {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(pasteModalBox);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   * Reset page to default view"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  hideEnrollResults(): void {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    this.showEnrollResults \u003d false;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    this.statusMessage.pop();"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    window.scroll(0, 0);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks whether the course is present"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseEnrollPageData(courseid: string): void {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "      this.coursePresent \u003d true;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseid \u003d courseid;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "      if (resp.hasResponses) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showWarningMessageModal(\u0027Existing feedback responses\u0027,"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027There are existing feedback responses for this course.\u0027,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027Modifying records of enrolled students will result in some existing responses \u0027"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027from those modified students to be deleted. You may wish to download the data \u0027"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027before you make the changes.\u0027);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "      this.coursePresent \u003d false;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId: courseid }).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "      this.existingStudents \u003d resp.students;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows user more information about the spreadsheet interfaces"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "  navigateToMoreInfo(): void {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    (this.moreInfo as ElementRef)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        .nativeElement.scrollIntoView({ behavior: \u0027auto\u0027, block: \u0027start\u0027 });"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 7,
      "-": 377
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-student-details-page/instructor-course-student-details-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorCourseStudentDetailsPageComponent,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./instructor-course-student-details-page.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() hideMoreInfo: boolean \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-course-related-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "class CourseRelatedInfoStubComponent {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() student: Student \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorCourseStudentDetailsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorCourseStudentDetailsPageComponent;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorCourseStudentDetailsPageComponent\u003e;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseStudentDetailsPageComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRelatedInfoStubComponent,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorCourseStudentDetailsPageComponent);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with populated student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u0027studentEmail@email.com\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027firstName\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      lastName: \u0027lastName\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: \u0027This is a comment\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      teamName: \u0027myTeam\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027mySection\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    component.studentProfile \u003d {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027name\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      shortName: \u0027shortName\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u0027profileEmail@email.com\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      institute: \u0027NUS\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      nationality: \u0027Indian\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      gender: Gender.MALE,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      moreInfo: \u0027I have more info here\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 94
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-student-edit-page/instructor-course-student-edit-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnDestroy, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { AbstractControl, FormControl, FormGroup, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinState, MessageOutput, Student } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentUpdateRequest } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormValidator } from \u0027../../../types/form-validator\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course student edit page."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-student-edit-page\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-student-edit-page.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-student-edit-page.component.scss\u0027],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseStudentEditPageComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isEnabled: boolean \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  student!: Student;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  isTeamnameFieldChanged: boolean \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  isEmailFieldChanged: boolean \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  editForm!: FormGroup;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  teamFieldSubscription?: Subscription;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  emailFieldSubscription?: Subscription;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  FormValidator: typeof FormValidator \u003d FormValidator; // enum"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal) { }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isEnabled) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      this.student \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        comments: \u0027Alice is a transfer student.\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        teamName: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      this.initEditForm();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudentEditDetails(queryParams.courseid, queryParams.studentemail);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnDestroy(): void {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.emailFieldSubscription) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      (this.emailFieldSubscription as Subscription).unsubscribe();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.teamFieldSubscription) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      (this.teamFieldSubscription as Subscription).unsubscribe();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads student details required for this page."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentEditDetails(courseId: string, studentEmail: string): void {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudent(courseId, studentEmail).subscribe((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      this.student \u003d student;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      this.initEditForm();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   * Initializes the student details edit form with the fields fetched from the backend."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * Subscriptions are set up to listen to changes in the \u0027teamname\u0027 fields and \u0027newstudentemail\u0027 fields."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  private initEditForm(): void {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      studentname: new FormControl(this.student.name,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          [Validators.required, Validators.maxLength(FormValidator.STUDENT_NAME_MAX_LENGTH)]),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionname: new FormControl(this.student.sectionName,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "          [Validators.required, Validators.maxLength(FormValidator.SECTION_NAME_MAX_LENGTH)]),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      teamname: new FormControl(this.student.teamName,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "          [Validators.required, Validators.maxLength(FormValidator.TEAM_NAME_MAX_LENGTH)]),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      newstudentemail: new FormControl(this.student.email, // original student email initialized"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          [Validators.required, Validators.maxLength(FormValidator.EMAIL_MAX_LENGTH)]),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: new FormControl(this.student.comments),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFieldSubscription \u003d"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        (this.editForm.get(\u0027teamname\u0027) as AbstractControl).valueChanges"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "              this.isTeamnameFieldChanged \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    this.emailFieldSubscription \u003d"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        (this.editForm.get(\u0027newstudentemail\u0027) as AbstractControl).valueChanges"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            .subscribe(() \u003d\u003e this.isEmailFieldChanged \u003d true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays message to user stating that the field is empty."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  displayEmptyFieldMessage(fieldName: string): string {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    return `The field \u0027${fieldName}\u0027 should not be empty.`;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays message to user stating that the field exceeds the max length."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  displayExceedMaxLengthMessage(fieldName: string, maxLength: number): string {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return `The field \u0027${fieldName}\u0027 should not exceed ${maxLength} characters.`;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles logic related to showing the appropriate modal boxes"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   * upon submission of the form. Submits the form otherwise."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  onSubmit(confirmDelModal: any, resendPastLinksModal: any): void {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isEnabled) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.isTeamnameFieldChanged) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.ngbModal.open(confirmDelModal);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (this.isEmailFieldChanged) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      this.ngbModal.open(resendPastLinksModal);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      this.submitEditForm(false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows the `resendPastSessionLinks` modal if email field has changed."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the form  otherwise."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingResponses(resendPastLinksModal: any): void {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.isEmailFieldChanged) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      this.ngbModal.open(resendPastLinksModal);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      this.submitEditForm(false);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the form data to edit the student details."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEditForm(shouldResendPastSessionLinks: boolean): void {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    const reqBody: StudentUpdateRequest \u003d {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      name: this.editForm.value.studentname,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.editForm.value.newstudentemail,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      team: this.editForm.value.teamname,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      section: this.editForm.value.sectionname,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: this.editForm.value.comments,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      isSessionSummarySendEmail: shouldResendPastSessionLinks,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.updateStudent({"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      studentEmail: this.student.email,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      requestBody: reqBody,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        this.router.navigate([\u0027/web/instructor/courses/details\u0027], {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          queryParams: { courseid: this.courseId },"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "-": 180
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"isAddNewCourseFormExpanded \u003d true\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "          [disabled]\u003d\"isAddNewCourseFormExpanded\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\" [hidden]\u003d\"!isAddNewCourseFormExpanded\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-add-course-form (courseAdded)\u003d\"loadInstructorCourses()\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                      (closeCourseFormEvent)\u003d\"isAddNewCourseFormExpanded \u003d false\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e\u003c/tm-add-course-form\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_ID)\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Course ID"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_ID\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_NAME)\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            Course Name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.SESSION_CREATION_DATE)\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Creation Date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.SESSION_CREATION_DATE\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.SESSION_CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.SESSION_CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eSections\u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTeams\u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Students\u003c/th\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Unregistered\u003c/th\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of activeCourses\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].sections }}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].teams }}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].students }}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].unregistered }}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyStudent\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/enroll\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/details\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              View"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Edit Course information and instructor list\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/edit\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "              Edit"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.course.courseId, true)\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                access it from the \u0027Courses\u0027 tab)\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "              Archive"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr *ngIf\u003d\"!activeCourses.length\"\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"!activeCourses.length\"\u003eNo records found.\u003c/p\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\" *ngIf\u003d\"archivedCourses.length\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"fa fa-file-archive\"\u003e\u003c/span\u003e Archived Courses"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/h2\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-info text-white\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of archivedCourses\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" ngbTooltip\u003d\"{{course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027}}\"\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.course.courseId, false)\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              Unarchive"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row course-section margin-top-30px\" *ngIf\u003d\"softDeletedCourses.length\"\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan class\u003d\"fa fa-trash-alt\"\u003e\u003c/span\u003e Deleted Courses"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h2\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header bg-secondary recycle-bin-header\" (click)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-white\"\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cb\u003eRecycle Bin\u003c/b\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-right bin-header-button\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"canRestoreAll\" (click)\u003d\"$event.stopPropagation(); onRestoreAll()\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Restore all deleted courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!canRestoreAll\"\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm text-danger\" *ngIf\u003d\"canDeleteAll\" (click)\u003d\"$event.stopPropagation(); onDeleteAll()\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Permanently delete all courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled text-danger\" *ngIf\u003d\"!canDeleteAll\"\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down text-white\" *ngIf\u003d\"!isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up text-white\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cdiv class\u003d\"card-body recycle-bin-body table-responsive\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctable class\u003d\"table table-responsive-lg table-striped table-bordered recycle-bin-table\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cthead\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr class\u003d\"background-color-medium-gray text-color-gray\"\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eDeletion Date\u003c/th\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/thead\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctbody\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngFor\u003d\"let course of softDeletedCourses\"\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.deletionTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.course.deletionTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onRestore(course.course.courseId)\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Restore the deleted course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" style\u003d\"color: red;\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onDeletePermanently(course.course.courseId)\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Permanently delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                        style\u003d\"color: red;\"\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tbody\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/table\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 257
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseArchive,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  CoursePermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-permanent-deletion-confirm-modal/course-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseSoftDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-soft-deletion-confirm-modal/course-soft-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "interface CourseModel {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyCourse: boolean;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyStudent: boolean;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor courses list page."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-courses-page\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-courses-page.component.html\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-courses-page.component.scss\u0027],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCoursesPageComponent implements OnInit {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  activeCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  archivedCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  softDeletedCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  courseStats: { [key: string]: { [key: string]: number } } \u003d {};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  isRecycleBinExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeleteAll: boolean \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  canRestoreAll: boolean \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddNewCourseFormExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private instructorService: InstructorService,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              private tableComparatorService: TableComparatorService) { }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      if (queryParams.isAddNewCourse) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAddNewCourseFormExpanded \u003d queryParams.isAddNewCourse;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads instructor courses required for this page."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  loadInstructorCourses(): void {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeCourses \u003d [];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    this.archivedCourses \u003d [];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    this.softDeletedCourses \u003d [];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.instructorService.loadInstructorPrivilege({ courseId: course.courseId })"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const activeCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          this.activeCourses.push(activeCourse);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027archived\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: course.courseId,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const archivedCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          this.archivedCourses.push(archivedCourse);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027softDeleted\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.instructorService.loadInstructorPrivilege({ courseId: course.courseId })"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              const softDeletedCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "              this.softDeletedCourses.push(softDeletedCourse);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "              if (!softDeletedCourse.canModifyCourse) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                this.canDeleteAll \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                this.canRestoreAll \u003d false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs the url for course stats from the given course id."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseStats(courseId: string): void {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId }).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseStats[courseId] \u003d {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        sections: (new Set(students.students.map((value: Student) \u003d\u003e value.sectionName))).size,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        teams: (new Set(students.students.map((value: Student) \u003d\u003e value.teamName))).size,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        students: students.students.length,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        unregistered: students.students.filter((value: Student) \u003d\u003e value.joinState \u003d\u003d\u003d JoinState.NOT_JOINED)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          .length,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "   * Changes the status of an archived course."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  changeArchiveStatus(courseId: string, toArchive: boolean): void {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.changeArchiveStatus(courseId, {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      archiveStatus: toArchive,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      if (courseArchive.isArchived) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.changeModelFromActiveToArchived(courseId);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been archived."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          It will not appear on the home page anymore.`);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.changeModelFromArchivedToActive(courseId);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027The course has been unarchived.\u0027);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves a course model from active courses list to archived list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  changeModelFromActiveToArchived(courseId: string): void {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (courseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.archivedCourses.push(courseToBeRemoved);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves a course model from archived courses list to active list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  changeModelFromArchivedToActive(courseId: string): void {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (courseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.activeCourses.push(courseToBeRemoved);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.activeCourses.sort(this.sortBy(this.tableSortBy));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Finds and returns a course from the target course list."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  findCourse(targetList: CourseModel[], courseId: string): CourseModel | undefined {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return targetList.find((model: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      return model.course.courseId \u003d\u003d\u003d courseId;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    });"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Removes a course from the target course list and returns the result list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  removeCourse(targetList: CourseModel[], courseId: string): CourseModel[] {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return targetList.filter((model: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    });"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves an active/archived course to Recycle Bin."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(courseId: string): void {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CourseSoftDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.moveCourseToRecycleBin(courseId, course.deletionTimestamp);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves an active/archived course to Recycle Bin."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  moveCourseToRecycleBin(courseId: string, deletionTimeStamp: number): void {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const activeCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (activeCourseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      activeCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.softDeletedCourses.push(activeCourseToBeRemoved);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      const archivedCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      if (archivedCourseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        archivedCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.softDeletedCourses.push(archivedCourseToBeRemoved);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes a soft-deleted course in Recycle Bin."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeletePermanently(courseId: string): void {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.deleteCourse(courseId).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.removeCourse(this.softDeletedCourses, courseId);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been permanently deleted.`);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores a soft-deleted course from Recycle Bin."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestore(courseId: string): void {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.restoreCourse(courseId).subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes all soft-deleted courses in Recycle Bin."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeleteAll(): void {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.isDeleteAll \u003d true;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      const deleteRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.softDeletedCourses.forEach((courseToDelete: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRequests.push(this.courseService.deleteCourse(courseToDelete.course.courseId));"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.softDeletedCourses \u003d [];"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027All courses have been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores all soft-deleted courses from Recycle Bin."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestoreAll(): void {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    const restoreRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.softDeletedCourses.forEach((courseToRestore: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "      restoreRequests.push(this.courseService.restoreCourse(courseToRestore.course.courseId));"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(restoreRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027All courses have been restored.\u0027);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the courses table"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  sortCoursesEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeCourses.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      ((a: CourseModel , b: CourseModel) \u003d\u003e number) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return (a: CourseModel, b: CourseModel): number \u003d\u003e {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseId ? a.course.courseId : \u0027\u0027;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseId ? b.course.courseId : \u0027\u0027;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseName;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseName;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_CREATION_DATE:"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.creationTimestamp.toString();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.creationTimestamp.toString();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.tableComparatorService.compare(by, this.tableSortOrder, strA, strB);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 81,
      "tiuweehan": 11,
      "-": 290
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1\u003eHome\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light mb-4\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"text\" class\u003d\"form-control\" [(ngModel)]\u003d\"studentSearchkey\" (keyup.enter)\u003d\"search()\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "               placeholder\u003d\"e.g. Charles Shultz, charles@gmail.com\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"input-group-append\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"search()\"\u003eSearch\u003c/button\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-template #noCourseMessage class\u003d\"bg-light-blue\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container *ngIf\u003d\"hasCoursesLoaded\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    New to TEAMMATES? You may wish to have a look at our \u003ca routerLink\u003d\"/web/front/help/instructor\"\u003eGetting Started Guide\u003c/a\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    A video tour is also available in our \u003ca routerLink\u003d\"/web\"\u003ehome page\u003c/a\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-template\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-4\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca routerLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-primary text-white\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003eAdd New Course\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"float-right\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch5 class\u003d\"d-inline\"\u003e\u003cstrong\u003e Sort By: \u003c/strong\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0; else noCourseMessage\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card margin-bottom-15px\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-primary text-white course-tab-header\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(courseTabModel);\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cb\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"float-right\" *ngIf\u003d\"courseTabModel.isAjaxSuccess; else errorLoadingFeedbackSessions\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                     routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu \u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Add a feedback session for the course\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/sessions\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                   (click)\u003d\"openModal(courseArchiveModal); $event.stopPropagation()\"\u003e Archive"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                     (click)\u003d\"openModal(courseDeleteModal); $event.stopPropagation()\"\u003e Delete"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down\" *ngIf\u003d\"!courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #errorLoadingFeedbackSessions\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      Error loading feedback sessions. Click here to retry."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseDeleteModal let-modal\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Confirm moving course to Recycle Bin \u003c/h5\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to delete the course: {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and restoring the desired course(s)."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"deleteCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseArchiveModal let-modal\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-info\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Confirm archiving course \u003c/h5\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to archive {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and unarchiving the desired course(s)."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"archiveCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctm-sessions-table"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\" (editSessionEvent)\u003d\"editSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          (sendRemindersToStudentsEvent)\u003d\"sendRemindersToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 157
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseArchive,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTabModel {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorPrivilege: InstructorPrivilege;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  hasPopulated: boolean;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  isTabExpanded: boolean;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor home page."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-home-page\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-home-page.component.html\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-home-page.component.scss\u0027],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorHomePageComponent extends InstructorSessionModalPageComponent implements OnInit {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  private static readonly coursesToLoad: number \u003d 3;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  studentSearchkey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorCoursesSortBy: SortBy \u003d SortBy.COURSE_CREATION_DATE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  // data"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabModels: CourseTabModel[] \u003d [];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  hasCoursesLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              modalService: NgbModal,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              studentService: StudentService,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              instructorService: InstructorService,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              tableComparatorService: TableComparatorService,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    super(router, instructorService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, tableComparatorService, modalService, studentService);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    // need timezone data for moment()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourses();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a list of courses belong to current user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  get courseCandidates(): Course[] {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.courseTabModels.map((m: CourseTabModel) \u003d\u003e m.course);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles click events on the course tab model."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  handleClick(event: Event, courseTabModel: CourseTabModel): boolean {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.target \u0026\u0026"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        !(event.target as HTMLElement).className.includes(\u0027dropdown-toggle\u0027)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      return !courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    return courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirect to the search page and query the search"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  search(): void {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigate([\u0027web/instructor/search\u0027], {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      queryParams: { studentSearchkey: this.studentSearchkey },"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the modal for different buttons and link."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Archives the entire course from the instructor"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  archiveCourse(courseId: string): void {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.changeArchiveStatus(courseId, {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      archiveStatus: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(`The course ${courseArchive.courseId} has been archived."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          You can retrieve it from the Courses page.`);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the entire course from the instructor"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(courseId: string): void {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseTabModels \u003d [];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getInstructorCoursesThatAreActive()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      .pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadingBarService.hideLoadingBar();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hasCoursesLoaded \u003d true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      })).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          const model: CourseTabModel \u003d {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            course,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionsTableRowModels: [],"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            isTabExpanded: false,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            isAjaxSuccess: true,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            hasPopulated: false,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionsTableRowModelsSortBy: SortBy.NONE,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionsTableRowModelsSortOrder: SortOrder.ASC,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseTabModels.push(model);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updateCourseInstructorPrivilege(model);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortCoursesBy(this.instructorCoursesSortBy);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the instructor privilege in {@code CourseTabModel}."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  updateCourseInstructorPrivilege(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({ courseId: model.course.courseId })"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        model.instructorPrivilege \u003d instructorPrivilege;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback session in the course."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSessions(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!model.hasPopulated) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionsService.getFeedbackSessionsForInstructor(model.course.courseId)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "              const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSession,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "              model.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "              this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            model.hasPopulated \u003d true;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!model.isAjaxSuccess) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              model.isAjaxSuccess \u003d true;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            model.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks the option selected to sort courses."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  isSelectedForSorting(by: SortBy): boolean {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.instructorCoursesSortBy \u003d\u003d\u003d by;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the courses according to selected option."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "  sortCoursesBy(by: SortBy): void {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    this.instructorCoursesSortBy \u003d by;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.courseTabModels.length \u003e 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels.sort(this.sortPanelsBy(by));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadLatestCourses();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads and expand the latest number of courses."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  loadLatestCourses(): void {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c this.courseTabModels.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      if (i \u003e\u003d InstructorHomePageComponent.coursesToLoad) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels[i].isTabExpanded \u003d true;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSessions(this.courseTabModels[i]);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the panels of courses in order."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "  sortPanelsBy(by: SortBy):"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: { course: Course }, b: { course: Course }) \u003d\u003e number) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    return ((a: { course: Course }, b: { course: Course }): number \u003d\u003e {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseName;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseName;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseId;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseId;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_CREATION_DATE:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.course.creationTimestamp);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.course.creationTimestamp);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.tableComparatorService.compare(by, SortOrder.ASC, strA, strB);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent(tabIndex: number, by: SortBy): void {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    const tab: CourseTabModel \u003d this.courseTabModels[tabIndex];"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        tab.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModels.sort(this.sortModelsBy(by, tab.sessionsTableRowModelsSortOrder));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadResponseRate(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.moveSessionToRecycleBin("
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseTabModels[tabIndex].sessionsTableRowModels.splice("
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "              this.courseTabModels[tabIndex].sessionsTableRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "              \"The feedback session has been deleted. You can restore it from the \u0027Sessions\u0027 tab.\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEventHandler(tabIndex: number, result: CopySessionResult): void {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copySession(this.courseTabModels[tabIndex].sessionsTableRowModels[result.sessionToCopyRowIndex], result);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitSessionAsInstructor(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    this.viewSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    this.publishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    this.unpublishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 6,
      "tiuweehan": 11,
      "-": 351
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Search result object from student search query."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export interface SearchResult {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  searchFeedbackSessionDataTables: SearchFeedbackSessionDataTable[];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  searchStudentsTables: SearchStudentsTable[];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "interface SearchFeedbackSessionDataTable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  something: any;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Data object for communication with the child student result component"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "export interface SearchStudentsTable {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  sections: StudentListSectionData[];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Data object for communciation with the child search bar component"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "export interface SearchQuery {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  searchKey: string;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  searchStudents: boolean;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  searchFeedbackSessionData: boolean;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor search page."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-search-page\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-search-page.component.html\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-search-page.component.scss\u0027],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSearchPageComponent implements OnInit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  searchKey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  studentTables: SearchStudentsTable[] \u003d [];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  fbSessionDataTables: SearchFeedbackSessionDataTable[] \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) { }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      if (queryParams.studentSearchkey) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.searchKey \u003d queryParams.studentSearchkey;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.searchKey) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.search({"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          searchKey: this.searchKey,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          searchStudents: true,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          searchFeedbackSessionData: false,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Searches for students and questions/responses/comments matching the search query."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  search(searchQuery: SearchQuery): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.searchForStudents({"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchKey: searchQuery.searchKey,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchStudents: searchQuery.searchStudents.toString(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchFeedbackSessionData: searchQuery.searchFeedbackSessionData.toString(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe(finalize(() \u003d\u003e this.loadingBarService.hideLoadingBar()))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: SearchResult) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentTables \u003d resp.searchStudentsTables;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          this.fbSessionDataTables \u003d resp.searchFeedbackSessionDataTables;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          const hasStudents: boolean \u003d !!(this.studentTables \u0026\u0026 this.studentTables.length);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "          const hasFbSessionData: boolean \u003d !!(this.fbSessionDataTables \u0026\u0026 this.fbSessionDataTables.length);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!hasStudents \u0026\u0026 !hasFbSessionData) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showWarningMessage(\u0027No results found.\u0027);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 12,
      "-": 85
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { from, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatMap, last, switchMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackQuestion,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackQuestions,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackSession,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackSessionStats,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorPrivilege,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../types/api-output\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../types/api-request\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { SortBy, SortOrder } from \u0027../../types/sort-properties\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    CopySessionResult,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    SessionsTableRowModel,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * The base page for session related page."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "export abstract class InstructorSessionBasePageComponent {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  protected constructor(protected router: Router,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        protected instructorService: InstructorService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected navigationService: NavigationService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected tableComparatorService: TableComparatorService) { }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies a feedback session."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  protected copyFeedbackSession(fromFeedbackSession: FeedbackSession, newSessionName: string, newCourseId: string):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    let createdFeedbackSession!: FeedbackSession;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.feedbackSessionsService.createFeedbackSession(newCourseId, {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackSessionName: newSessionName,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      instructions: fromFeedbackSession.instructions,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStartTimestamp: fromFeedbackSession.submissionStartTimestamp,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionEndTimestamp: fromFeedbackSession.submissionEndTimestamp,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      gracePeriod: fromFeedbackSession.gracePeriod,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      sessionVisibleSetting: fromFeedbackSession.sessionVisibleSetting,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      customSessionVisibleTimestamp: fromFeedbackSession.customSessionVisibleTimestamp,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      responseVisibleSetting: fromFeedbackSession.responseVisibleSetting,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      customResponseVisibleTimestamp: fromFeedbackSession.customResponseVisibleTimestamp,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      isClosingEmailEnabled: fromFeedbackSession.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      isPublishedEmailEnabled: fromFeedbackSession.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }).pipe("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          createdFeedbackSession \u003d feedbackSession;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          // copy questions"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          return this.feedbackQuestionsService.getFeedbackQuestions({"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            courseId: fromFeedbackSession.courseId,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            feedbackSessionName: fromFeedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((response: FeedbackQuestions) \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response.questions.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            // no questions to copy"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return of(createdFeedbackSession);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          return from(response.questions).pipe("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              concatMap((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                return this.feedbackQuestionsService.createFeedbackQuestion("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    createdFeedbackSession.courseId, createdFeedbackSession.feedbackSessionName, {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                      questionNumber: feedbackQuestion.questionNumber,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                      questionBrief: feedbackQuestion.questionBrief,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                      questionDescription: feedbackQuestion.questionDescription,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                      questionDetails: feedbackQuestion.questionDetails,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                      questionType: feedbackQuestion.questionType,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                      giverType: feedbackQuestion.giverType,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                      recipientType: feedbackQuestion.recipientType,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                      showResponsesTo: feedbackQuestion.showResponsesTo,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                      showGiverNameTo: feedbackQuestion.showGiverNameTo,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              }),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "              last(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "              switchMap(() \u003d\u003e of(createdFeedbackSession)),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   * Generates a sorting function."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  protected sortModelsBy(by: SortBy, order: SortOrder):"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: { feedbackSession: FeedbackSession }, b: { feedbackSession: FeedbackSession }) \u003d\u003e number) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    return ((a: { feedbackSession: FeedbackSession }, b: { feedbackSession: FeedbackSession }): number \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_NAME:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.feedbackSession.courseId;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.feedbackSession.courseId;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_START_DATE:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.feedbackSession.submissionStartTimestamp);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.feedbackSession.submissionStartTimestamp);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_END_DATE:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.feedbackSession.submissionEndTimestamp);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.feedbackSession.submissionEndTimestamp);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_CREATION_DATE:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.feedbackSession.createdAtTimestamp);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.feedbackSession.createdAtTimestamp);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SESSION_DELETION_DATE:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.feedbackSession.deletedAtTimestamp);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.feedbackSession.deletedAtTimestamp);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.tableComparatorService.compare(by, order, strA, strB);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the instructor privilege in {@code SessionsTableRowModel}."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  protected updateInstructorPrivilege(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      model.instructorPrivilege \u003d instructorPrivilege;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRate(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    model.isLoadingResponseRate \u003d true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.loadSessionStatistics("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .subscribe((resp: FeedbackSessionStats) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          model.isLoadingResponseRate \u003d false;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "          model.responseRate \u003d `${resp.submittedTotal} / ${resp.expectedTotal}`;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  editSession(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigationService.navigateByURLWithParamEncoding("
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.router,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u0027/web/instructor/sessions/edit\u0027,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies the feedback session."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  copySession(model: SessionsTableRowModel, result: CopySessionResult): void {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copyFeedbackSession(model.feedbackSession, result.newFeedbackSessionName, result.copyToCourseId)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((createdSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          this.navigationService.navigateWithSuccessMessage("
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              this.router,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              \u0027/web/instructor/sessions/edit\u0027,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              { courseid: createdSession.courseId, fsname: createdSession.feedbackSessionName });"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructor(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigationService.navigateByURLWithParamEncoding("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.router,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u0027/web/instructor/sessions/submission\u0027,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResult(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigationService.navigateByURLWithParamEncoding("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.router,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        \u0027/web/instructor/sessions/result\u0027,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSession(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.publishFeedbackSession("
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          model.feedbackSession \u003d feedbackSession;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "          model.responseRate \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been published. \u0027"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "              + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSession(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.unpublishFeedbackSession("
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "          model.feedbackSession \u003d feedbackSession;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "          model.responseRate \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been unpublished.\u0027);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 26,
      "-": 211,
      "hcwong": 17
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatMap, finalize, flatMap, map, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService, NewQuestionModel } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { LOCAL_DATE_TIME_FORMAT, TimeResolvingResult, TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestions,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  HasResponses,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Instructors,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormMode,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormModel,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  DateFormat,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormModel,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeFormat,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionToCopyCandidate,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  CopyQuestionsFromOtherSessionsModalComponent,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor feedback session edit page."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-session-edit-page\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  // url param"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  courseName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  // models"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionEditFormModel: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    instructions: \u0027\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: false,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    hasVisibleSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    hasEmailSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  // to get the original question model"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  questionEditFormModels: QuestionEditFormModel[] \u003d [];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  newQuestionEditFormModel: QuestionEditFormModel \u003d {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackQuestionId: \u0027\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    questionNumber: 0,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    isQuestionHasResponses: false,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDetails: {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      recommendedLength: 0,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    } as FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    recipientType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    customNumberOfEntitiesToGiveFeedbackTo: 1,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    showResponsesTo: [],"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    showGiverNameTo: [],"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    showRecipientNameTo: [],"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: true,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddingQuestionPanelExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  // all students of the course"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  studentsOfCourse: Student[] \u003d [];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  emailOfStudentToPreview: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  // instructors which can be previewed as"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorsCanBePreviewedAs: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  emailOfInstructorToPreview: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              instructorService: InstructorService,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "              tableComparatorService: TableComparatorService,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    super(router, instructorService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, tableComparatorService);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionName \u003d queryParams.fsname;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSession();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackQuestions();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getAllStudentsOfCourse();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getAllInstructorsCanBePreviewedAs();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads a feedback session."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSession(): void {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    // load the course of the feedback session first"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseName \u003d course.courseName;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.feedbackSessionsService.getFeedbackSession({"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: this.courseId,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        feedbackSessionName: this.feedbackSessionName,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      })"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies the feedback session."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  copyCurrentSession(): void {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    // load course candidates first"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getInstructorCoursesThatAreActive()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    .subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      const modalRef: NgbModalRef \u003d this.modalService.open(CopySessionModalComponent);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.courseCandidates \u003d courses.courses;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.feedbackSessionsService.getFeedbackSession({"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: this.courseId,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          feedbackSessionName: this.feedbackSessionName,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }).pipe("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            switchMap((feedbackSession: FeedbackSession) \u003d\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                this.copyFeedbackSession(feedbackSession, result.newFeedbackSessionName, result.copyToCourseId)),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        ).subscribe((createdSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          this.navigationService.navigateWithSuccessMessage(this.router,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              \u0027/web/instructor/sessions/edit\u0027,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hcwong"
        },
        "content": "              { courseid: this.courseId, fsname: createdSession.feedbackSessionName });"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  getSessionEditFormModel(feedbackSession: FeedbackSession): SessionEditFormModel {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    const submissionStart: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    const submissionEnd: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: feedbackSession.courseId,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: feedbackSession.timeZone,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: this.courseName,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackSessionName: feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      instructions: feedbackSession.instructions,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStartTime: submissionStart.time,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStartDate: submissionStart.date,"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionEndTime: submissionEnd.time,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionEndDate: submissionEnd.date,"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      gracePeriod: feedbackSession.gracePeriod,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      responseVisibleSetting: feedbackSession.responseVisibleSetting,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStatus: feedbackSession.submissionStatus,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      publishStatus: feedbackSession.publishStatus,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: false,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    if (feedbackSession.customSessionVisibleTimestamp) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      const customSessionVisible: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customSessionVisibleTime \u003d customSessionVisible.time;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customSessionVisibleDate \u003d customSessionVisible.date;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    if (feedbackSession.customResponseVisibleTimestamp) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      const customResponseVisible: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customResponseVisibleTime \u003d customResponseVisible.time;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customResponseVisibleDate \u003d customResponseVisible.date;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    return model;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get the local date and time of timezone from timestamp."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDateTimeAtTimezone(timestamp: number, timeZone: string): {date: DateFormat; time: TimeFormat} {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    const momentInstance: any \u003d moment(timestamp).tz(timeZone);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    const date: DateFormat \u003d {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      year: momentInstance.year(),"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      month: momentInstance.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "      day: momentInstance.date(),"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    const time: TimeFormat \u003d {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: momentInstance.minute(),"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: momentInstance.hour(),"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      date,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "      time,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles editing existing session event."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "  editExistingSessionHandler(): void {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission opening time\u0027),"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission closing time\u0027),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Session visible time\u0027)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Response visible time\u0027)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((vals: number[]) \u003d\u003e {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            instructions: this.sessionEditFormModel.instructions,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionStartTimestamp: vals[0],"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionEndTimestamp: vals[1],"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            gracePeriod: this.sessionEditFormModel.gracePeriod,"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            customSessionVisibleTimestamp: vals[2],"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            customResponseVisibleTimestamp: vals[3],"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027The feedback session has been updated.\u0027);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resolves the local date time to an UNIX timestamp."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "  private resolveLocalDateTime("
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "      date: DateFormat, time: TimeFormat, timeZone: string, fieldName: string): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    const inst: any \u003d moment();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027year\u0027, date.year);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027date\u0027, date.day);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027hour\u0027, time.hour);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027minute\u0027, time.minute);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((result: TimeResolvingResult) \u003d\u003e {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "          if (result.message.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showWarningMessage(result.message);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles deleting current feedback session."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingSessionHandler(): void {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads feedback questions."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestions(): void {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackQuestionsService.getFeedbackQuestions({"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: this.feedbackSessionName,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestions) \u003d\u003e {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            this.questionEditFormModels.push(addedQuestionEditFormModel);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the question edit form by feedback question id."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see https://angular.io/api/common/NgForOf#properties"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.feedbackQuestionId;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts feedback question to the question edit form model."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: feedbackQuestion.questionNumber,"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: feedbackQuestion.questionBrief,"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: feedbackQuestion.questionDescription,"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "      isQuestionHasResponses: false, // TODO use API to determine"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: feedbackQuestion.questionType,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: feedbackQuestion.giverType,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: feedbackQuestion.recipientType,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: feedbackQuestion.showResponsesTo,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: feedbackQuestion.showGiverNameTo,"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: false,"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the isQuestionHasResponses value for a question edit for model."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "          model.isQuestionHasResponses \u003d resp.hasResponses;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the existing question."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "  saveExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "    const originalQuestionNumber: number \u003d"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    questionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: questionEditFormModel.questionNumber,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: questionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: questionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: questionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: questionEditFormModel.questionType,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: questionEditFormModel.giverType,"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: questionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: questionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: questionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "              questionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "          // shift question if needed"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            // move question form"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveQuestionForm("
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The changes to the question have been updated.\u0027);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves question edit form from the original position to the new position."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "  private moveQuestionForm(originalPosition: number, newPosition: number): void {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionEditFormModels.splice(newPosition, 0,"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionEditFormModels.splice(originalPosition, 1)[0]);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "  private normalizeQuestionNumberInQuestionForms(): void {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "      questionEditFormModel.questionNumber \u003d i;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "      // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "   * Discards the changes made to the existing question."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "  discardExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackQuestion: FeedbackQuestion \u003d"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "   * Duplicates the question."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateCurrentQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "    questionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: questionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: questionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: questionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: questionEditFormModel.questionType,"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: questionEditFormModel.giverType,"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: questionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: questionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: questionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "              questionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been duplicated below.\u0027);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the existing question."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId).subscribe("
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        () \u003d\u003e {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "          // remove form model"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.splice(index, 1);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "          this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been deleted.\u0027);"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles display of template question modal."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "  templateQuestionModalHandler(): void {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(TemplateQuestionModalComponent).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "      of(...questions).pipe("
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "          concatMap((question: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            questionNumber +\u003d 1;"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "              questionNumber,"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "              questionBrief: question.questionBrief,"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDescription: question.questionDescription,"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDetails: question.questionDetails,"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "              questionType: question.questionType,"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "              giverType: question.giverType,"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientType: question.recipientType,"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "              showResponsesTo: question.showResponsesTo,"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "              showGiverNameTo: question.showGiverNameTo,"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "              showRecipientNameTo: question.showRecipientNameTo,"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "          }),"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); }, () \u003d\u003e {"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questions.length \u003d\u003d\u003d 1) {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The questions have been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "   * Populates and shows new question edit form."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isAddingQuestionPanelExpanded \u003d true;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    const newQuestionModel: NewQuestionModel \u003d"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionsService.getNewQuestionModel(type);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newQuestionEditFormModel \u003d {"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackQuestionId: \u0027\u0027,"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.questionEditFormModels.length + 1,"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: newQuestionModel.questionBrief,"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: newQuestionModel.questionDescription,"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "      isQuestionHasResponses: false,"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: newQuestionModel.questionType,"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: newQuestionModel.questionDetails,"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: newQuestionModel.giverType,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: newQuestionModel.recipientType,"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: newQuestionModel.showResponsesTo,"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: newQuestionModel.showGiverNameTo,"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: true,"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new question."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "  createNewQuestionHandler(): void {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newQuestionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.newQuestionEditFormModel.questionNumber,"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: this.newQuestionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: this.newQuestionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: this.newQuestionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: this.newQuestionEditFormModel.questionType,"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: this.newQuestionEditFormModel.giverType,"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: this.newQuestionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "              this.newQuestionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "          this.moveQuestionForm("
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "          this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isAddingQuestionPanelExpanded \u003d false;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles \u0027Copy Question\u0027 click event."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "  copyQuestionsFromOtherSessionsHandler(): void {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionToCopyCandidates: QuestionToCopyCandidate[] \u003d [];"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((sessions: FeedbackSessions) \u003d\u003e of(...sessions.feedbackSessions)),"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        flatMap((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          return this.feedbackQuestionsService.getFeedbackQuestions({"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            courseId: session.courseId,"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            feedbackSessionName: session.feedbackSessionName,"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "            intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          )"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "              .pipe("
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                  map((questions: FeedbackQuestions) \u003d\u003e {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                    return questions.questions.map((q: FeedbackQuestion) \u003d\u003e ({"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                      courseId: session.courseId,"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                      feedbackSessionName: session.feedbackSessionName,"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                      question: q,"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                      isSelected: false,"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                    } as QuestionToCopyCandidate));"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "              );"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) \u003d\u003e {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "      questionToCopyCandidates.push(...questionToCopyCandidate);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); }, () \u003d\u003e {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "      const ref: NgbModalRef \u003d this.modalService.open(CopyQuestionsFromOtherSessionsModalComponent);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "      ref.componentInstance.questionToCopyCandidates \u003d questionToCopyCandidates;"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        of(...questionsToCopy).pipe("
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                questionBrief: questionToCopy.questionBrief,"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                questionDescription: questionToCopy.questionDescription,"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                questionDetails: questionToCopy.questionDetails,"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                questionType: questionToCopy.questionType,"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                giverType: questionToCopy.giverType,"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                recipientType: questionToCopy.recipientType,"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                showResponsesTo: questionToCopy.showResponsesTo,"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                showGiverNameTo: questionToCopy.showGiverNameTo,"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                showRecipientNameTo: questionToCopy.showRecipientNameTo,"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles \u0027Done Editing\u0027 click event."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "  doneEditingHandler(modal: any): void {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.questionEditFormModels.some((q: QuestionEditFormModel) \u003d\u003e q.isEditable)"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        || this.sessionEditFormModel.isEditable) {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "      this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        this.router.navigateByUrl(\u0027/web/instructor/sessions\u0027);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "      this.router.navigateByUrl(\u0027/web/instructor/sessions\u0027);"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO focus on the row of current feedback session in the sessions page"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles question \u0027Help\u0027 link click event."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "  questionsHelpHandler(): void {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "    this.navigationService.openNewWindow(`${environment.frontendUrl}/web/instructor/help#questions`);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all students of a course."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllStudentsOfCourse(): void {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentsOfCourse \u003d students.students;"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "          // sort the student list based on team name and student name"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "            if (teamNameCompare \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "              return a.name.localeCompare(b.name);"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            return teamNameCompare;"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "          // select the first student"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.studentsOfCourse.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all instructors of a course which can be previewed as."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllInstructorsCanBePreviewedAs(): void {"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructors({"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.courseId,"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "          // in the feedback session"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "          // sort the instructor list based on name"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            return a.name.localeCompare(b.name);"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "          // select the first instructor"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "   * Previews the submission of the feedback session as a student."
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsStudent(): void {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigationService.openNewWindow(`${environment.frontendUrl}/web/sessions/submission`,"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        { courseid: this.courseId, fsname: this.feedbackSessionName, previewas: this.emailOfStudentToPreview });"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "   * Previews the submission of the feedback session as an instructor."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsInstructor(): void {"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigationService.openNewWindow("
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      `${environment.frontendUrl}/web/instructor/sessions/submission`,"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      { courseid: this.courseId, fsname: this.feedbackSessionName, previewas: this.emailOfInstructorToPreview });"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "  private deepCopy\u003cT\u003e(obj: T): T {"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "    return JSON.parse(JSON.stringify(obj));"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 40,
      "-": 839,
      "hcwong": 9
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-modal-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../services/student.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmittedGiverSet,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Student, Students,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../types/api-output\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \"../components/sessions-table/resend-results-link-to-student-modal/resend-results-link-to-student-modal.component\"; // tslint:disable-line"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../components/sessions-table/send-reminders-to-student-modal/send-reminders-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  StudentListInfoTableRowModel,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../components/sessions-table/student-list-info-table/student-list-info-table-model\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorSessionBasePageComponent,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./instructor-session-base-page.component\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * The base page for session related page."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  protected constructor(router: Router,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        instructorService: InstructorService,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                        statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                        navigationService: NavigationService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                        tableComparatorService: TableComparatorService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected modalService: NgbModal,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        protected studentService: StudentService) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    super(router, instructorService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, tableComparatorService);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends e-mails to remind students on the published results link."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  resendResultsLinkToStudentsEventHandler(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    const courseId: string \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId }).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      const modalRef: NgbModalRef \u003d this.modalService.open(ResendResultsLinkToStudentModalComponent);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.studentListInfoTableRowModels \u003d students.students.map((student: Student) \u003d\u003e ({"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        email: student.email,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        name: student.name,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        teamName: student.teamName,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: student.sectionName,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        hasSubmittedSession: false,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        isSelected: false,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      } as StudentListInfoTableRowModel));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.result.then((studentsToRemind: StudentListInfoTableRowModel[]) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackSessionsService.remindResultsLinkToStudents(courseId, feedbackSessionName, {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          usersToRemind: studentsToRemind.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027Session published notification emails have been resent to those students and instructors. \u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends e-mails to remind students who have not submitted their feedback."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  sendRemindersToStudentsEventHandler(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    const courseId: string \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.studentService.getStudentsFromCourse({ courseId }),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ courseId, feedbackSessionName }))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            (result: any[]) \u003d\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "              const students: Student[] \u003d (result[0] as Students).students;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "              const modalRef: NgbModalRef \u003d this.modalService.open(SendRemindersToStudentModalComponent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                email: student.email,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                name: student.name,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                teamName: student.teamName,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionName: student.sectionName,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                hasSubmittedSession: giverSet.has(student.email),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                isSelected: false,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "              } as StudentListInfoTableRowModel));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "              modalRef.result.then((studentsToRemind: StudentListInfoTableRowModel[]) \u003d\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                this.feedbackSessionsService.remindFeedbackSessionSubmissionForStudent(courseId, feedbackSessionName, {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                  usersToRemind: studentsToRemind.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                }).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                      \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                      + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 6,
      "-": 121
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionSubmittedGiverSet,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  SessionResults,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "// tslint:disable-next-line:max-line-length"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConfirmPublishingSessionModalComponent } from \u0027../../components/sessions-table/confirm-publishing-session-modal/confirm-publishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "// tslint:disable-next-line:max-line-length"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import { ConfirmUnpublishingSessionModalComponent } from \u0027../../components/sessions-table/confirm-unpublishing-session-modal/confirm-unpublishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionResultSectionType } from \u0027./instructor-session-result-section-type.enum\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor feedback session result page."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-session-result-page\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-session-result-page.component.html\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-session-result-page.component.scss\u0027],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSessionResultPageComponent implements OnInit {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorSessionResultSectionType: typeof InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  session: any \u003d {};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionOpeningTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionClosingTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  viewType: string \u003d \u0027QUESTION\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  section: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionType: InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType.EITHER;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  groupByTeam: boolean \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  showStatistics: boolean \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  indicateMissingResponses: boolean \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionsModel: { [key: string]: any } \u003d {};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  isSectionsLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  questionsModel: { [key: string]: any } \u003d {};"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  isQuestionsLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  noResponseStudents: Student[] \u003d [];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  isNoResponsePanelLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      private timezoneService: TimezoneService, private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      private modalService: NgbModal, private router: Router) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.feedbackSessionsService.getFeedbackSession({"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: queryParams.courseid,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        feedbackSessionName: queryParams.fsname,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        intent: Intent.INSTRUCTOR_RESULT,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      }).subscribe((resp: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.session \u003d resp;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formattedSessionOpeningTime \u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            moment(this.session.submissionStartTimestamp).tz(this.session.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formattedSessionClosingTime \u003d"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            moment(this.session.submissionEndTimestamp).tz(this.session.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.courseService.getCourseSectionNames(queryParams.courseid).subscribe((resp2: any) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const sectionName of resp2.sectionNames) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sectionsModel[sectionName] \u003d {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "              responses: [],"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "              hasPopulated: false,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isSectionsLoaded \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp2: any) \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp2.error.message);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.feedbackQuestionsService.getFeedbackQuestions({"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: queryParams.courseid,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          feedbackSessionName: queryParams.fsname,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          intent: Intent.INSTRUCTOR_RESULT,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }).subscribe((resp2: any) \u003d\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const question of resp2.questions) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            question.responses \u003d [];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            question.hasPopulated \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            this.questionsModel[question.feedbackQuestionId] \u003d question;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isQuestionsLoaded \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp2: any) \u003d\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp2.error.message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.studentService.getStudentsFromCourse({"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          courseId: queryParams.courseid,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }).subscribe((allStudents: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          const students: Student[] \u003d allStudents.students;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            courseId: queryParams.courseid,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            feedbackSessionName: queryParams.fsname,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          })"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "              .subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                this.noResponseStudents \u003d students.filter((student: Student) \u003d\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                                            !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              }, (resp4: any) \u003d\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                this.statusMessageService.showErrorMessage(resp4.error.message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isNoResponsePanelLoaded \u003d true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp3: any) \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp3.error.message);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all the responses and response statistics for the specified question."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  loadQuestion(questionId: string): void {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.questionsModel[questionId].hasPopulated) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      // Do not re-fetch data"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsResult({"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      questionId,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.session.courseId,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: this.session.feedbackSessionName,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.INSTRUCTOR_RESULT,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    .subscribe((resp: SessionResults) \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      if (resp.questions.length) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        const responses: any \u003d resp.questions[0];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionsModel[questionId].responses \u003d responses.allResponses;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionsModel[questionId].statistics \u003d responses.questionStatistics;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionsModel[questionId].hasPopulated \u003d true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all the responses and response statistics for the specified section."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  loadSection(sectionName: string): void {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.sectionsModel[sectionName].hasPopulated) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      // Do not re-fetch data"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsResult({"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: this.session.courseId,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: this.session.feedbackSessionName,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.INSTRUCTOR_RESULT,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      groupBySection: sectionName,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    })"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    .subscribe((resp: SessionResults) \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sectionsModel[sectionName].questions \u003d resp.questions;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sectionsModel[sectionName].hasPopulated \u003d true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handle publish result button event."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  publishResultHandler(): void {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    const isPublished: boolean \u003d this.session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(isPublished ? ConfirmUnpublishingSessionModalComponent :"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfirmPublishingSessionModalComponent);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.feedbackSessionName \u003d this.session.feedbackSessionName;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      const response: Observable\u003cany\u003e \u003d isPublished ?"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          this.feedbackSessionsService.unpublishFeedbackSession("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            this.session.courseId, this.session.feedbackSessionName,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          ) :"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          this.feedbackSessionsService.publishFeedbackSession("
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            this.session.courseId, this.session.feedbackSessionName,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          )"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      response.subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        this.router.navigateByUrl(\u0027/web/instructor/sessions\u0027);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 53,
      "-": 159
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatMap, finalize, map, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService, TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  LOCAL_DATE_TIME_FORMAT,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeResolvingResult,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  TimezoneService,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  DateFormat,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormModel,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeFormat,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopyFromOtherSessionsResult } from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal-model\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  CopyFromOtherSessionsModalComponent,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal.component\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionPermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./session-permanent-deletion-confirm-modal/session-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsPermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./sessions-permanent-deletion-confirm-modal/sessions-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "interface RecycleBinFeedbackSessionRowModel {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSession: FeedbackSession;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor feedback sessions list page."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-sessions-page\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-sessions-page.component.html\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-sessions-page.component.scss\u0027],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSessionsPageComponent extends InstructorSessionModalPageComponent implements OnInit {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  // url params"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  // data"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  courseCandidates: Course[] \u003d [];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  templateSessions: TemplateSession[] \u003d [];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  // models"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionEditFormModel: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    instructions: \u0027Please answer all the given questions.\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.LATER,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: true,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    hasVisibleSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    hasEmailSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  isSessionEditFormExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  isRecycleBinExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModels: RecycleBinFeedbackSessionRowModel[] \u003d [];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModelsSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  hasCoursesLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "              modalService: NgbModal,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "              studentService: StudentService,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              instructorService: InstructorService,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "              tableComparatorService: TableComparatorService,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    super(router, instructorService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, tableComparatorService, modalService, studentService);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSessionEditFormExpanded \u003d !!this.courseId;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    this.templateSessions \u003d this.feedbackSessionsService.getTemplateSessions();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCandidatesCourse();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadFeedbackSessions();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadRecycleBinFeedbackSessions();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies from other sessions."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  copyFromOtherSessionsHandler(): void {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CopyFromOtherSessionsModalComponent);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    // select the current course Id."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.copyToCourseId \u003d this.sessionEditFormModel.courseId;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.existingFeedbackSession \u003d"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModels.map((model: SessionsTableRowModel) \u003d\u003e model.feedbackSession);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then((result: CopyFromOtherSessionsResult) \u003d\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      this.copyFeedbackSession(result.fromFeedbackSession, result.newFeedbackSessionName, result.copyToCourseId)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((createdFeedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions/edit\u0027"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                + `?courseid\u003d${createdFeedbackSession.courseId}\u0026fsname\u003d${createdFeedbackSession.feedbackSessionName}`,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses owned by the current user."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCandidatesCourse(): void {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getInstructorCoursesThatAreActive()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .pipe(finalize(() \u003d\u003e this.hasCoursesLoaded \u003d true)).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseCandidates \u003d courses.courses;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          this.initDefaultValuesForSessionEditForm();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets default values for the session edit form."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  initDefaultValuesForSessionEditForm(): void {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    // if specified in the query and is valid, select that course"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    // otherwise, select the first course by default"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d this.courseId);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    if (course) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseId \u003d course.courseId;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseName \u003d course.courseName;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.timeZone \u003d course.timeZone;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (this.courseCandidates.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseId \u003d this.courseCandidates[0].courseId;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseName \u003d this.courseCandidates[0].courseName;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.timeZone \u003d this.courseCandidates[0].timeZone;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    // select the first template session"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.templateSessions.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.templateSessionName \u003d this.templateSessions[0].name;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    // set opening time to near future"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    const nearFuture: any \u003d moment().add(1, \u0027hours\u0027);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionStartDate \u003d {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      year: nearFuture.year(),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      month: nearFuture.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      day: nearFuture.date(),"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionStartTime \u003d {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: nearFuture.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: nearFuture.hour() \u003d\u003d\u003d 0 ? 23 : nearFuture.hour(),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    // set the closing time to tomorrow"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    const tomorrow: any \u003d moment().add(1, \u0027days\u0027);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionEndDate \u003d {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      year: tomorrow.year(),"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      month: tomorrow.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      day: tomorrow.date(),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionEndTime \u003d {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: 59,"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: 23,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirects to page to create or unarchive courses."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "  createOrUnarchiveCourse(): void {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigateByUrl(\u0027/web/instructor/courses\u0027);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds a new feedback session."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  addNewSessionHandler(): void {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    const resolvingResultMessages: string[] \u003d [];"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission opening time\u0027, resolvingResultMessages),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission closing time\u0027, resolvingResultMessages),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Session visible time\u0027, resolvingResultMessages)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Response visible time\u0027, resolvingResultMessages)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((vals: number[]) \u003d\u003e {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.feedbackSessionsService.createFeedbackSession(this.sessionEditFormModel.courseId, {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSessionName: this.sessionEditFormModel.feedbackSessionName,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            instructions: this.sessionEditFormModel.instructions,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionStartTimestamp: vals[0],"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionEndTimestamp: vals[1],"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            gracePeriod: this.sessionEditFormModel.gracePeriod,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            customSessionVisibleTimestamp: vals[2],"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            customResponseVisibleTimestamp: vals[3],"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      // begin to populate session with template"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      const templateSession: TemplateSession | undefined \u003d"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionsService.getTemplateSessions().find("
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "              (t: TemplateSession) \u003d\u003e t.name \u003d\u003d\u003d this.sessionEditFormModel.templateSessionName);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!templateSession) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "      of(...templateSession.questions).pipe("
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          concatMap((question: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.feedbackQuestionsService.createFeedbackQuestion("
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSession.courseId, feedbackSession.feedbackSessionName, {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionNumber: question.questionNumber,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionBrief: question.questionBrief,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionDescription: question.questionDescription,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionDetails: question.questionDetails,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionType: question.questionType,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                  giverType: question.giverType,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                  recipientType: question.recipientType,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                  numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                  customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                  showResponsesTo: question.showResponsesTo,"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                  showGiverNameTo: question.showGiverNameTo,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                  showRecipientNameTo: question.showRecipientNameTo,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          }),"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe(() \u003d\u003e {}, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage("
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            `The session is created but the template questions cannot be created: ${resp.error.message}`);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.navigationService.navigateByURLWithParamEncoding("
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.router,"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            \u0027/web/instructor/sessions/edit\u0027,"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            { courseid: feedbackSession.courseId, fsname: feedbackSession.feedbackSessionName })"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            .then(() \u003d\u003e {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "              resolvingResultMessages.forEach((msg: string) \u003d\u003e {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                this.statusMessageService.showWarningMessage(msg);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "              this.statusMessageService.showSuccessMessage(\u0027The feedback session has been added.\u0027"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                  + \u0027Click the \"Add New Question\" button below to begin adding questions for the feedback session.\u0027);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resolves the local date time to an UNIX timestamp."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "  private resolveLocalDateTime(date: DateFormat, time: TimeFormat, timeZone: string,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                               fieldName: string, resolvingResultMessages: string[]): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    const inst: any \u003d moment();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027year\u0027, date.year);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027date\u0027, date.day);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027hour\u0027, time.hour);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027minute\u0027, time.minute);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((result: TimeResolvingResult) \u003d\u003e {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          if (result.message.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            resolvingResultMessages.push(result.message);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all feedback sessions that can be accessed by current user."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSessions(): void {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsForInstructor()"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            const model: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSession: session,"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "              responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "              isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "              instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionsTableRowModels.push(model);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            this.updateInstructorPrivilege(model);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModels.sort(this.sortModelsBy(by, this.sessionsTableRowModelsSortOrder));"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadResponseRate(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.moveSessionToRecycleBin("
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionsTableRowModels.splice(this.sessionsTableRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "          this.recycleBinFeedbackSessionRowModels.push({"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSession,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been deleted. \u0027"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "              + \u0027You can restore it from the deleted sessions table below.\u0027);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEventHandler(result: CopySessionResult): void {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copySession(this.sessionsTableRowModels[result.sessionToCopyRowIndex], result);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitSessionAsInstructor(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    this.viewSessionResult(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "    this.publishSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "    this.unpublishSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all feedback sessions in recycle bin that can be accessed by current user."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "  loadRecycleBinFeedbackSessions(): void {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsInRecycleBinForInstructor()"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            this.recycleBinFeedbackSessionRowModels.push({"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSession: session,"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session rows in recycle bin table."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "  sortRecycleBinFeedbackSessionRows(by: SortBy): void {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModels.sort("
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortModelsBy(by, this.recycleBinFeedbackSessionRowModelsSortOrder));"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores a recycle bin feedback session."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreRecycleBinFeedbackSession(model: RecycleBinFeedbackSessionRowModel): void {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.feedbackSessionsService.deleteSessionFromRecycleBin("
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    )"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "          this.recycleBinFeedbackSessionRowModels.splice("
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "              this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "          const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSession,"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been restored.\u0027);"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores all feedback sessions in recycle bin."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreAllRecycleBinFeedbackSession(): void {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    const restoreRequests: Observable\u003cFeedbackSession\u003e[] \u003d [];"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      restoreRequests.push("
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          this.feedbackSessionsService.deleteFeedbackSession("
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          ));"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(restoreRequests).subscribe((restoredSessions: FeedbackSession[]) \u003d\u003e {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "      restoredSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels \u003d [];"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "          feedbackSession: session,"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "          responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "          isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "          instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027All sessions have been restored.\u0027);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the feedback session permanently."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "  permanentDeleteSession(model: RecycleBinFeedbackSessionRowModel): void {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(SessionPermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseId \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.feedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.feedbackSessionsService.deleteFeedbackSession("
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels.splice("
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027The feedback session has been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes all feedback sessions in the recycle bin permanently."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "  permanentDeleteAllSessions(): void {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(SessionsPermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.sessionsToDelete \u003d"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels.map("
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            (model: RecycleBinFeedbackSessionRowModel) \u003d\u003e model.feedbackSession);"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "      const deleteRequests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "      this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        deleteRequests.push(this.feedbackSessionsService.deleteFeedbackSession("
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels \u003d [];"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027All sessions have been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 28,
      "-": 571,
      "hcwong": 4
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1\u003eStudent List\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  This page gives the student details for all your courses. Expand the cards below to view your students."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  Use the \u003ca routerLink\u003d\"/web/instructor/search\"\u003esearch function\u003c/a\u003e if you need to filter for a specific"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  student."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-container\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngFor\u003d\"let courseTab of courseTabList\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header justify-content-between course-card-header\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        (click)\u003d\"toggleCard(courseTab)\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row course-card-content\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-11\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5\u003e\u003ci class\u003d\"fas fa-chalkboard-teacher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                style\u003d\"color: white\"\u003e\u003c/i\u003e\u0026nbsp;[{{courseTab.course.courseId}}]: {{courseTab.course.courseName}}\u003c/h5\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-1\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton *ngIf\u003d\"!courseTab.hasTabExpanded\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              class\u003d\"btn float-right\"\u003e\u003ci class\u003d\"fas fa-chevron-circle-down fa-lg\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              style\u003d\"color: white;\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton *ngIf\u003d\"courseTab.hasTabExpanded\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              class\u003d\"btn float-right\"\u003e\u003ci class\u003d\"fas fa-chevron-circle-up fa-lg\" style\u003d\"color: white;\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"courseTab.hasTabExpanded\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-container *ngIf\u003d\"courseTab.stats.numOfStudents \u003e 0, else noStudentsTemplate\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"card-deck\" *ngIf\u003d\"courseTab.stats\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfStudents}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eStudents\u003c/h4\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfSections}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eSections\u003c/h4\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfTeams}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eTeams\u003c/h4\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003chr/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-success\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            routerLink\u003d\"/web/instructor/courses/enroll\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          Enroll Students"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctm-student-list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          [courseId]\u003d\"courseTab.course.courseId\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          [sections]\u003d\"courseTab.studentListSectionDataList\" [useGrayHeading]\u003d\"false\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          [enableRemindButton]\u003d\"true\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          (removeStudentFromCourseEvent)\u003d\"removeStudentFromCourse(courseTab, $event)\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tm-student-list\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template #noStudentsTemplate\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch4\u003eThere are no students in this course.\u003c/h4\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-success\" routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          Enroll Students"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-container\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 79
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, Courses, InstructorPrivilege, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData, StudentListStudentData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "interface Statistic {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfStudents: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfSections: number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfTeams: number;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentIndexedData {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  [key: string]: Student[];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTab {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  studentListSectionDataList: StudentListSectionData[];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  hasTabExpanded: boolean;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  hasStudentLoaded: boolean;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  stats: Statistic;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor student list page."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-student-list-page\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorStudentListPageComponent implements OnInit {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabList: CourseTab[] \u003d [];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private instructorService: InstructorService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourses();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe(finalize(() \u003d\u003e this.loadingBarService.hideLoadingBar()))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            const courseTab: CourseTab \u003d {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              course,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              studentListSectionDataList: [],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              hasTabExpanded: false,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "              hasStudentLoaded: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              stats: {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfSections: 0,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfStudents: 0,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfTeams: 0,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            this.courseTabList.push(courseTab);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles specific card and loads students if needed"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleCard(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseTab.hasStudentLoaded) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudents(courseTab);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      courseTab.hasStudentLoaded \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads students of a specified course."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudents(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.sectionName;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          const teams: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.teamName;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          courseTab.stats \u003d {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfStudents: students.students.length,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfSections: Object.keys(sections).length,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfTeams: Object.keys(teams).length,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          Object.keys(sections).forEach((key: string) \u003d\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            const studentsInSection: Student[] \u003d sections[key];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            const data: StudentListStudentData[] \u003d [];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            studentsInSection.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              const studentData: StudentListStudentData \u003d {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                name : student.name,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                status : student.joinState,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                email : student.email,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                team : student.teamName,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "              data.push(studentData);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadPrivilege(courseTab, key, data);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListStudentData[]): void {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructorPrivilege({ sectionName, courseId: courseTab.course.courseId })"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          const sectionData: StudentListSectionData \u003d {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            sectionName,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            students,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          courseTab.studentListSectionDataList.push(sectionData);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(courseTab: CourseTab, studentEmail: string): void {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          .showSuccessMessage(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseTab.studentListSectionDataList.forEach("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          (section: StudentListSectionData) \u003d\u003e {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            section.students \u003d section.students.filter("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                (student: StudentListStudentData) \u003d\u003e student.email !\u003d\u003d studentEmail);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          });"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "madanalogy": 13,
      "-": 152
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorStudentRecordsPageComponent } from \u0027./instructor-student-records-page.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() hideMoreInfo: boolean \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorStudentRecordsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorStudentRecordsPageComponent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorStudentRecordsPageComponent\u003e;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorStudentRecordsPageComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          provide: ActivatedRoute,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          useValue: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            queryParams: of({ courseid: \u0027su1337\u0027, studentemail: \u0027punk@punk.com\u0027 }),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorStudentRecordsPageComponent);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should snap with populated fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    const studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      name: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      shortName: \u0027JD\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      email: \u0027jd@jd.com\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      institute: \u0027Area51\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      nationality: \u0027Antarctican\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      gender: Gender.OTHER,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    component.studentProfile \u003d studentProfile;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    component.courseId \u003d \u0027su1337\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should output a correctly formatted url string\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(component.photoUrl)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      .toEqual(\u0027http://localhost:8080/webapi/student/profilePic?courseid\u003dsu1337\u0026studentemail\u003dpunk@punk.com\u0027);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "-": 52,
      "hcwong": 37
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "interface Session {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  isCollapsed: boolean;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor student records page."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-student-records-page\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-student-records-page.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-student-records-page.component.scss\u0027],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorStudentRecordsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  studentEmail: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.OTHER,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  sessions: Session[] \u003d [];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService) { }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      this.studentEmail \u003d queryParams.studentemail;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudentRecords();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.photoUrl"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003d `${environment.backendUrl}/webapi/student/profilePic?`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + `courseid\u003d${this.courseId}\u0026studentemail\u003d${this.studentEmail}`;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the student\u0027s records based on the given course ID and email."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentRecords(): void {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.studentProfile \u003d resp;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 63,
      "hcwong": 2
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  Component, DoCheck, EventEmitter, Input, IterableDiffer, IterableDiffers, OnInit, Output,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinState, MessageOutput } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  StudentListSectionData,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  StudentListStudentData,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./student-list-section-data\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Flattened data which contains details about a student and their section."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * The data is flattened to allow sorting of the table."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "interface FlatStudentListData {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  status: JoinState;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl?: string;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionName: string;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToViewStudentInSection: boolean;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToModifyStudent: boolean;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * A table displaying a list of students from a course, with buttons to view/edit/delete students etc."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-list\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-list.component.html\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-list.component.scss\u0027],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentListComponent implements OnInit, DoCheck {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() useGrayHeading: boolean \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() listOfStudentsToHide: string[] \u003d [];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isHideTableHead: boolean \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() enableRemindButton: boolean \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  // The input sections data from parent."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() sections: StudentListSectionData[] \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  @Output() removeStudentFromCourseEvent: EventEmitter\u003cstring\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  // The flattened students list derived from the sections list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  // The sections data is flattened to allow sorting of the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState: typeof JoinState \u003d  JoinState;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly _differ: IterableDiffer\u003cany\u003e;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private router: Router,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              private navigationService: NavigationService,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              private tableComparatorService: TableComparatorService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              private differs: IterableDiffers) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this._differ \u003d this.differs.find(this.sections).create();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  ngDoCheck(): void {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this._differ) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      const changes: any \u003d this._differ.diff(this.sections);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      if (changes) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        this.students \u003d this.mapStudentsFromSectionData(this.sections);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flatten section data."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  mapStudentsFromSectionData(sections: StudentListSectionData[]): FlatStudentListData[] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    const students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    sections.forEach((section: StudentListSectionData) \u003d\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        section.students.forEach((student: StudentListStudentData) \u003d\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            students.push({"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              name: student.name,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "              email: student.email,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "              status: student.status,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              team: student.team,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              photoUrl: student.photoUrl,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionName: section.sectionName,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              isAllowedToModifyStudent: section.isAllowedToModifyStudent,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "              isAllowedToViewStudentInSection: section.isAllowedToViewStudentInSection,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        ),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns whether this course are divided into sections"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  hasSection(): boolean {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    return (this.students.some((student: FlatStudentListData) \u003d\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        student.sectionName !\u003d\u003d \u0027None\u0027));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * Function to be passed to ngFor, so that students in the list is tracked by email"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  trackByFn(_index: number, item: FlatStudentListData): any {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.email;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Load the profile picture of a student"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPhoto(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        `${environment.backendUrl}/webapi/student/profilePic?courseid\u003d${this.courseId}\u0026studentemail\u003d${student.email}`;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the student delete confirmation modal."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remind the student from course."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  remindStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.remindStudentForJoin(this.courseId, studentEmail)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        this.navigationService.navigateWithSuccessMessage(this.router,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            `/web/instructor/courses/details?courseid\u003d${this.courseId}`, resp.message);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  removeStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.removeStudentFromCourseEvent.emit(studentEmail);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "   * Determines which row in the studentTable should be hidden."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  isStudentToHide(studentEmail: string): boolean {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.listOfStudentsToHide.indexOf(studentEmail) \u003e -1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the student list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  sortStudentListEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.students.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: FlatStudentListData , b: FlatStudentListData) \u003d\u003e number) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return (a: FlatStudentListData, b: FlatStudentListData): number \u003d\u003e {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SECTION_NAME:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.sectionName;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.sectionName;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.STUDENT_NAME:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.name;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.name;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.TEAM_NAME:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.team;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.team;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.EMAIL:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.email;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.email;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.JOIN_STATUS:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d joinStatePipe.transform(a.status);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d joinStatePipe.transform(b.status);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.tableComparatorService.compare(by, this.tableSortOrder, strA, strB);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 6,
      "-": 219
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-profile/student-profile.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * A table displaying a details from a student\u0027s profile and a modal to view the more info field."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-profile\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-profile.component.html\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-profile.component.scss\u0027],"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfileComponent implements OnInit {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(): void {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 28
    }
  },
  {
    "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"moderatedPerson\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch5\u003eYou are moderating responses for"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ personName }} ({{ moderatedPerson }})"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"!isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d true\"\u003e[More]\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d false\"\u003e[Less]\u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h5\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isModerationHintExpanded\" class\u003d\"text-left\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        The page below resembles the submission page as seen by the respondent {{ personName }} ({{ moderatedPerson }})."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        You can use it to moderate responses submitted by the respondent or submit responses on behalf of the respondent."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        Note that due to visibility settings, questions that are not supposed to show responses to instructors (i.e you) are not shown in the page below."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"previewAsPerson\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4\u003ePreviewing Session as"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ personName }} ({{ previewAsPerson }})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h4\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      You are submitting feedback as {{ personName }}. You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredStudent(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (recommended)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card card-plain\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ courseId }}\u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ feedbackSessionName }}\u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eOpening time:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eClosing time:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eInstructions:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\" [innerHTML]\u003d\"feedbackSessionInstructions | safeHtml\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-question-submission-form *ngFor\u003d\"let questionSubmissionForm of questionSubmissionForms; let i \u003d index; trackBy: trackQuestionSubmissionFormByFn\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                             [attr.id]\u003d\"questionSubmissionForm.feedbackQuestionId\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                             [(formModel)]\u003d\"questionSubmissionForms[i]\" [formMode]\u003d\"getQuestionSubmissionFormMode(questionSubmissionForm)\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                             [isDisabled]\u003d\"isSubmissionFormsDisabled\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003c/tm-question-submission-form\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"!hasAnyResponseToSubmit\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      There are no questions for you to answer here!"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"hasAnyResponseToSubmit\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel\u003e\u003cinput type\u003d\"checkbox\" [(ngModel)]\u003d\"shouldSendConfirmationEmail\" [disabled]\u003d\"isSubmissionFormsDisabled\"\u003e Send me a confirmation email\u003c/label\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"submit\" class\u003d\"btn btn-primary\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            ngbTooltip\u003d\"You can save your responses at any time and come back later to continue.\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            (click)\u003d\"saveFeedbackResponses()\" [disabled]\u003d\"isSavingResponses || isSubmissionFormsDisabled\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003e\u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003eSubmit Feedback\u003c/button\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 95,
      "hcwong": 6
    }
  },
  {
    "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { DOCUMENT } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  ConfirmationResponse,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  ConfirmationResult,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionRecipient,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionRecipients,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponse,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponseRecipient,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponseRecipientSubmissionFormModel,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionSubmissionFormMode,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionSubmissionFormModel,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionClosedModalComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-closed-modal/feedback-session-closed-modal.component\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionClosingSoonModalComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-closing-soon-modal/feedback-session-closing-soon-modal.component\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionDeletedModalComponent,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-deleted-modal/feedback-session-deleted-modal.component\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionNotOpenModalComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-not-open-modal/feedback-session-not-open-modal.component\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  SavingCompleteModalComponent,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "interface FeedbackQuestionsResponse {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  questions: FeedbackQuestion[];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "interface FeedbackResponsesResponse {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  responses: FeedbackResponse[];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * Feedback session submission page."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-session-submission-page\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./session-submission-page.component.html\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  Intent: typeof Intent \u003d Intent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  regKey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  moderatedPerson: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsPerson: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  // the name of the person involved"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  // (e.g. the student name for unregistered student, the name of instructor being moderated)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  personName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionOpeningTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionClosingTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionInstructions: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  shouldSendConfirmationEmail: boolean \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  isSavingResponses: boolean \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  isSubmissionFormsDisabled: boolean \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  isModerationHintExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  moderatedQuestionId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute, private router: Router, private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService, private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackResponsesService: FeedbackResponsesService, private modalService: NgbModal,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              private pageScrollService: PageScrollService, @Inject(DOCUMENT) private document: any) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.data.pipe("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((data: any) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          this.intent \u003d data.intent;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap(() \u003d\u003e this.route.queryParams),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionName \u003d queryParams.fsname;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.previewAsPerson) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // disable submission in the preview mode"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadPersonName();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSession();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  ngAfterViewInit(): void {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      this.pageScrollService.scroll({"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        document: this.document,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollTarget: `#${this.moderatedQuestionId}`,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollOffset: 70,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }, 500);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the name of the person invovled in the submission."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPersonName(): void {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.intent) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      case Intent.STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: this.courseId,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          key: this.regKey,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          studentemail: this.moderatedPerson || this.previewAsPerson,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/student\u0027, paramMap)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            .subscribe((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "              this.personName \u003d student.name;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      case Intent.INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/instructor\u0027, {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: this.courseId,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "          intent: this.intent,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          key: this.regKey,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "          previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructor: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          this.personName \u003d instructor.name;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirects to join course link for unregistered student."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  joinCourseForUnregisteredStudent(): void {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigateByUrl(`/web/join?entitytype\u003dstudent\u0026key\u003d${this.regKey}`);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback session information."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSession(): void {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/session\u0027, paramMap)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionInstructions \u003d feedbackSession.instructions;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          this.formattedSessionOpeningTime \u003d"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              moment(feedbackSession.submissionStartTimestamp)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                  .tz(feedbackSession.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          const submissionEndTime: any \u003d moment(feedbackSession.submissionEndTimestamp);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "          this.formattedSessionClosingTime \u003d submissionEndTime"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "              .tz(feedbackSession.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          // don\u0027t show alert modal in moderation"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!this.moderatedPerson) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (feedbackSession.submissionStatus) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                this.modalService.open(FeedbackSessionNotOpenModalComponent);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.OPEN:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                // closing in 15 minutes"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                if (moment.utc().add(15, \u0027minutes\u0027).isAfter(submissionEndTime)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.modalService.open(FeedbackSessionClosingSoonModalComponent);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.CLOSED:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                this.modalService.open(FeedbackSessionClosedModalComponent);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "              default:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loadFeedbackQuestions();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "          if (resp.status \u003d\u003d\u003d 404) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            this.modalService.open(FeedbackSessionDeletedModalComponent);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads feedback questions to submit."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestions(): void {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/questions\u0027, paramMap)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            const model: QuestionSubmissionFormModel \u003d {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "              questionNumber: feedbackQuestion.questionNumber,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "              questionBrief: feedbackQuestion.questionBrief,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDescription: feedbackQuestion.questionDescription,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "              giverType: feedbackQuestion.giverType,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientType: feedbackQuestion.recipientType,"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientList: [],"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientSubmissionForms: [],"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "              questionType: feedbackQuestion.questionType,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDetails: feedbackQuestion.questionDetails,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                  ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "              showGiverNameTo: feedbackQuestion.showGiverNameTo,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "              showResponsesTo: feedbackQuestion.showResponsesTo,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            this.questionSubmissionForms.push(model);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadFeedbackQuestionRecipientsForQuestion(model);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the question submission form by feedback question id."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see https://angular.io/api/common/NgForOf#properties"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.feedbackQuestionId;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback question recipients for the question."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: model.feedbackQuestionId,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/question/recipients\u0027, paramMap)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            model.recipientList.push({"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientIdentifier: recipient.identifier,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientName: recipient.name,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.previewAsPerson) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            // don\u0027t load responses in preview mode"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            // generate a list of empty response box"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "              model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                recipientIdentifier:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                        ? \u0027\u0027 : recipient.recipientIdentifier,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                responseId: \u0027\u0027,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadFeedbackResponses(model);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the form mode of the question submission form."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: model.feedbackQuestionId,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/responses\u0027, paramMap).subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "      // if student does not have any responses (i.e. first time answering), then enable sending of confirmation email"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "      this.shouldSendConfirmationEmail \u003d this.shouldSendConfirmationEmail \u0026\u0026 existingResponses.responses.length \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        // need to generate a full list of submission forms"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "          const matchedExistingResponse: FeedbackResponse | undefined \u003d"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "              existingResponses.responses.find("
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: recipient.recipientIdentifier,"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: matchedExistingResponse"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                ? matchedExistingResponse.responseDetails"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        // need to generate limited number of submission forms"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        let numberOfRecipientSubmissionFormsNeeded: number \u003d"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: response.recipientIdentifier,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: response.responseDetails,"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: response.feedbackResponseId,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        // generate empty submission forms"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: \u0027\u0027,"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: \u0027\u0027,"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfRecipientSubmissionFormsNeeded -\u003d 1;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks whether there is any submission forms in the current page."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "  get hasAnyResponseToSubmit(): boolean {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.questionSubmissionForms"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        .some((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves all feedback response."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "  saveFeedbackResponses(): void {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    const failToSaveQuestions: Set\u003cnumber\u003e \u003d new Set();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    const savingRequests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      let isQuestionFullyAnswered: boolean \u003d true;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      questionSubmissionFormModel.recipientSubmissionForms"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            const isFeedbackResponseDetailsEmpty: boolean \u003d"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId !\u003d\u003d \u0027\u0027 \u0026\u0026 isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "              // existing response but empty details -\u003e delete response"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push(this.httpRequestService.delete(\u0027/response\u0027, {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                responseid: recipientSubmissionFormModel.responseId,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                intent: this.intent,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                key: this.regKey,"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "              }).pipe("
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                  tap(() \u003d\u003e {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                  catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                    failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                    return of(error);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "              ));"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId !\u003d\u003d \u0027\u0027 \u0026\u0026 !isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "              // existing response and details is not empty -\u003e update response"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push("
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.feedbackResponsesService.updateFeedbackResponse(recipientSubmissionFormModel.responseId, {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                    intent: this.intent,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                    key: this.regKey,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                    moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                  }, {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientIdentifier: recipientSubmissionFormModel.recipientIdentifier,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionType: questionSubmissionFormModel.questionType,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseDetails: recipientSubmissionFormModel.responseDetails,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                  }).pipe("
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                      tap((resp: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseId \u003d resp.feedbackResponseId;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseDetails \u003d resp.responseDetails;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.recipientIdentifier \u003d resp.recipientIdentifier;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                      catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                        failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                        return of(error);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                  ));"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 !isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "              // new response and the details is not empty -\u003e create response"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push("
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.feedbackResponsesService.createFeedbackResponse(questionSubmissionFormModel.feedbackQuestionId, {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                    intent: this.intent,"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                    key: this.regKey,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                    moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                  }, {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientIdentifier: recipientSubmissionFormModel.recipientIdentifier,"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionType: questionSubmissionFormModel.questionType,"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseDetails: recipientSubmissionFormModel.responseDetails,"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                  }).pipe("
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                      tap((resp: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseId \u003d resp.feedbackResponseId;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseDetails \u003d resp.responseDetails;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.recipientIdentifier \u003d resp.recipientIdentifier;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                      catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                        failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                        return of(error);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                  ));"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!isQuestionFullyAnswered) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSavingResponses \u003d true;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    let hasSubmissionConfirmationError: boolean \u003d false;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(savingRequests).pipe("
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "          if (failToSaveQuestions.size \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(\u0027All responses submitted successfully!\u0027);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(\u0027Some responses are not saved successfully\u0027);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "          if (notYetAnsweredQuestions.size !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO use showInfoMessage"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                `Note that some questions are yet to be answered. They are:"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                ${ Array.from(notYetAnsweredQuestions.values()) }.`);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.httpRequestService.post(\u0027/submission/confirmation\u0027, {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            courseid: this.courseId,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "            fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            sendsubmissionemail: String(this.shouldSendConfirmationEmail),"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            intent: this.intent,"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            key: this.regKey,"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isSavingResponses \u003d false;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "          const modalRef: NgbModalRef \u003d this.modalService.open(SavingCompleteModalComponent);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values()).join(\u0027, \u0027);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.failToSaveQuestions \u003d Array.from(failToSaveQuestions.values()).join(\u0027, \u0027);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.hasSubmissionConfirmationError \u003d hasSubmissionConfirmationError;"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((response: ConfirmationResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (response.result) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        case ConfirmationResult.SUCCESS:"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        case ConfirmationResult.SUCCESS_BUT_EMAIL_FAIL_TO_SEND:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage("
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "              `Submission confirmation email failed to send: ${response.message}`);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(`Unknown result ${response.result}`);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "      hasSubmissionConfirmationError \u003d false;"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "      this.shouldSendConfirmationEmail \u003d false;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "      hasSubmissionConfirmationError \u003d true;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 553
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1 class\u003d\"page-title\" *ngIf\u003d\"course\"\u003e {{course.courseName}}\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"section\" *ngIf\u003d\"course\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"font-weight-bold\"\u003eCourse\u003c/h4\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card border-primary\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form form-horizontal\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eName\u003c/label\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{course.courseName}}\u003c/span\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eID\u003c/label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{course.courseId}}\u003c/span\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eTimezone\u003c/label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{course.timeZone}}\u003c/span\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eCreated at\u003c/label\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{course.creationTimestamp | formatDateDetail: course.timeZone}}\u003c/span\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"section\" *ngIf\u003d\"instructorDetails \u0026\u0026 instructorDetails.length\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"font-weight-bold\"\u003eInstructors\u003c/h4\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctable class\u003d\"table table-striped\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cthead\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"font-weight-bold\"\u003eName\u003c/th\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"font-weight-bold\"\u003eEmail\u003c/th\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/thead\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctbody\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngFor\u003d\"let instructorDetail of instructorDetails\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{instructorDetail.name}}\u003c/td\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{instructorDetail.email}}\u003c/td\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tbody\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/table\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"section\" *ngIf\u003d\"student\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"font-weight-bold\"\u003eSelf\u003c/h4\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card border-primary\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form form-horizontal\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eName\u003c/label\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{student.name}}\u003c/span\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eSection\u003c/label\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{student.sectionName}}\u003c/span\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eTeam\u003c/label\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{student.teamName}}\u003c/span\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel\u003eEmail\u003c/label\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-8\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan\u003e{{student.email}}\u003c/span\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"section\" *ngIf\u003d\"teammateProfiles.length\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-sm-12\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"font-weight-bold\"\u003eTeam Profiles\u003c/h4\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"row\" *ngFor\u003d\"let teammateProfile of teammateProfiles\"\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-md-2 col-3\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cimg src\u003d\"{{teammateProfile.photoUrl}}\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "               class\u003d\"profile-pic float-left\" (error)\u003d\"setDefaultPic(teammateProfile)\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-md-10 col-sm-9 col-8\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctable class\u003d\"table table-striped\"\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctbody\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"font-weight-bold\"\u003eName\u003c/td\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                \u003cspan\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                  {{teammateProfile.studentProfile.shortName}}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                \u003c/span\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"font-weight-bold\"\u003eEmail\u003c/td\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan\u003e{{teammateProfile.studentProfile.email}}\u003c/span\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"font-weight-bold\"\u003eGender\u003c/td\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan\u003e{{teammateProfile.studentProfile.gender}}\u003c/span\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"font-weight-bold\"\u003eInstitution\u003c/td\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan\u003e{{teammateProfile.studentProfile.institute}}\u003c/span\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"font-weight-bold\"\u003eNationality\u003c/td\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan\u003e{{teammateProfile.studentProfile.nationality}}\u003c/span\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tbody\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/table\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 168,
      "hcwong": 3
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.scss",
    "fileType": "scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".page-title {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-bottom: 30px;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ".section {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-bottom: 40px;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ".profile-pic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  max-width: 100%;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  max-height: 240px;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ".form-group.row {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  border-bottom: 1px solid #CCC;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".fill-plain {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  background-color: #EAEFF5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "label {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  font-weight: bold;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 22,
      "hcwong": 2
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Course, Gender, Instructor, InstructorPermissionRole, JoinState, Student } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentCourseDetailsPageComponent, StudentProfileWithPicture } from \u0027./student-course-details-page.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentCourseDetailsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StudentCourseDetailsPageComponent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentCourseDetailsPageComponent\u003e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [StudentCourseDetailsPageComponent],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentCourseDetailsPageComponent);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with populated fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    const student: Student \u003d {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u00271@1.com\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      lastName: \u00271\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u00271\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: \u0027\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027Tutorial Group 2\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      teamName: \u0027Team 2\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    const instructorDetails: Instructor[] \u003d [{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      displayedToStudentsAs: \u0027Instructor\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u00271@1.com\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u00271\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    const course: Course \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: \u0027Sample Course 101\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      creationTimestamp: 1552472130000,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      deletionTimestamp: 0,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    const teammateProfiles: StudentProfileWithPicture[] \u003d ["
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        photoUrl: \u0027/assets/images/profile_picture_default.png\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        studentProfile: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          email: \u0027iam2@hello.com\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          gender: Gender.MALE,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          institute: \u0027nus\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          moreInfo: \u0027Misc\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u00272\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          nationality: \u0027Andorran\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          shortName: \u0027I am 2\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    component.course \u003d course;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    component.instructorDetails \u003d instructorDetails;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d student;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    component.teammateProfiles \u003d teammateProfiles;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 93
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Course, Gender, Instructor, Instructors, JoinState, Student, StudentProfile,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * A student profile which also has the profile picture URL"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export interface StudentProfileWithPicture {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  studentProfile: StudentProfile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Student course details page."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-course-details-page\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-course-details-page.component.html\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-course-details-page.component.scss\u0027],"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentCourseDetailsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  student: Student \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorDetails: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  teammateProfiles: StudentProfileWithPicture[] \u003d [];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private instructorService: InstructorService,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService) { }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetches relevant data to be displayed on page."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudent(queryParams.courseid);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourse(queryParams.courseid);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructors(queryParams.courseid);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourse(courseId: string): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsStudent(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d course;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the current logged-in student of the course."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudent(courseId: string): void {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudent(courseId)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          this.student \u003d student;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loadTeammates(courseId, student.teamName);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the teammates of the current student."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param teamName: team of current student"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  loadTeammates(courseId: string, teamName: string): void {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          students.students.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            // filter away current user"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            if (student.email \u003d\u003d\u003d this.student.email) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "              return;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            this.studentProfileService.getStudentProfile(student.email, courseId)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                  .subscribe((studentProfile: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    const newPhotoUrl: string \u003d"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                      `${environment.backendUrl}/webapi/student/profilePic`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                      + `?courseid\u003d${courseId}\u0026studentemail\u003d${student.email}`;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    const newTeammateProfile: StudentProfileWithPicture \u003d {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                      studentProfile: {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                        ...studentProfile,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                        email: student.email,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                        shortName: student.name,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                      },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                      photoUrl : newPhotoUrl,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.teammateProfiles.push(newTeammateProfile);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                  });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the instructors of the course."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  loadInstructors(courseId: string): void {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.loadInstructors({ courseId })"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetails \u003d instructors.instructors;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(teammateProfile: StudentProfileWithPicture): void {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    teammateProfile.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "-": 140,
      "hcwong": 7
    }
  },
  {
    "path": "src/web/app/pages-student/student-home-page/student-home-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  HasResponses,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentCourse {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessions: StudentSession[];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentSession {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  session: FeedbackSession;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  isOpened: boolean;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  isWaitingToOpen: boolean;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  isPublished: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  isSubmitted: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Student home page."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-home-page\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-home-page.component.html\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-home-page.component.scss\u0027],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentHomePageComponent implements OnInit {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  // Tooltip messages"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusPublished: string \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The responses for the session have been published and can now be viewed.\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusNotPublished: string \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The responses for the session have not yet been published and cannot be viewed.\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusAwaiting: string \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The session is not open for submission at this time. It is expected to open later.\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusPending: string \u003d \u0027The feedback session is yet to be completed by you.\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusSubmitted: string \u003d \u0027You have submitted your feedback for this session.\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusClosed: string \u003d \u0027 The session is now closed for submissions.\u0027;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  courses: StudentCourse[] \u003d [];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getStudentCourses();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the courses and feedback sessions involving the student."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentCourses(): void {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getAllCoursesAsStudent().subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      if (resp.courses.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadingBarService.hideLoadingBar();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackSessionsService.getFeedbackSessionsForStudent(course.courseId)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          .pipe(finalize(() \u003d\u003e this.loadingBarService.hideLoadingBar()))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((fss: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            const sortedFss: FeedbackSession[] \u003d this.sortFeedbackSessions(fss);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            const studentSessions: StudentSession[] \u003d [];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            for (const fs of sortedFss) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "              const isOpened: boolean \u003d fs.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "              const isWaitingToOpen: boolean \u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                fs.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              const isPublished: boolean \u003d fs.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "              this.feedbackSessionsService.hasStudentResponseForFeedbackSession(course.courseId,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                fs.feedbackSessionName)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                .subscribe((hasRes: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                  const isSubmitted: boolean \u003d hasRes.hasResponses;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                  studentSessions.push(Object.assign({},"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    { isOpened, isWaitingToOpen, isPublished, isSubmitted, session: fs }));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            this.courses.push(Object.assign({}, { course, feedbackSessions: studentSessions }));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            this.courses.sort((a: StudentCourse, b: StudentCourse) \u003d\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              (a.course.courseId \u003e b.course.courseId) ? 1 : -1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (e: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(e.error.message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the tooltip message for the submission status."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  getSubmissionStatusTooltip(session: StudentSession): string {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    let msg: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    if (session.isWaitingToOpen) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusAwaiting;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (session.isSubmitted) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusSubmitted;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusPending;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!session.isOpened \u0026\u0026 !session.isWaitingToOpen) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusClosed;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    return msg;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the tooltip message for the response status."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  getResponseStatusTooltip(isPublished: boolean): string {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isPublished) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.studentFeedbackSessionStatusPublished;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.studentFeedbackSessionStatusNotPublished;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the feedback sessions based on creation and end timestamp."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  sortFeedbackSessions(fss: FeedbackSessions): FeedbackSession[] {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return fss.feedbackSessions"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        .map((fs: FeedbackSession) \u003d\u003e Object.assign({}, fs))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        .sort((a: FeedbackSession, b: FeedbackSession) \u003d\u003e (a.createdAtTimestamp \u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            b.createdAtTimestamp) ? 1 : (a.createdAtTimestamp \u003d\u003d\u003d b.createdAtTimestamp) ?"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            ((a.submissionEndTimestamp \u003e b.submissionEndTimestamp) ? 1 : -1) : -1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4,
      "-": 147
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-gender.pipe.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Pipe to handle the display of gender options in the student profile page."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Pipe({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  name: \u0027genderFormat\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class GenderFormatPipe implements PipeTransform {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * Transforms {@code gender} to a gender display option for the student profile page."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  transform(gender: Gender): string {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (gender) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.MALE:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Male\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.FEMALE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Female\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.OTHER:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Not Specified\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Unknown\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 27
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { GenderFormatPipe } from \u0027./student-profile-gender.pipe\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormControl, FormGroup, ReactiveFormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment.prod\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfilePageComponent } from \u0027./student-profile-page.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentProfilePageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StudentProfilePageComponent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentProfilePageComponent\u003e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfilePageComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        GenderFormatPipe,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        ReactiveFormsModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentProfilePageComponent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with a student field without information\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentDetails: any \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      studentProfile: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        institute: \u0027\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        gender: Gender,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        pictureKey: \u0027\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      requestId: \u0027\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d studentDetails;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    component.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with values and a profile photo\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentDetails: any \u003d {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      studentProfile: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        shortName: \u0027Ash\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027ayush@nus.com\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        institute: \u0027NUS\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        nationality: \u0027Indian\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        gender: Gender.MALE,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        moreInfo: \u0027I like to party\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        pictureKey: \u0027photo.jpg\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027Ayush\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      requestId: \u002716\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d studentDetails;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    component.profilePicLink \u003d `${environment.backendUrl}/webapi/students/` +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027profilePic?blob-key\u003d$photo.jpg\u0026time\u003d1552509888215\u0027;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    component.nationalities \u003d [\u0027Derpistan\u0027, \u0027Blablaland\u0027];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    // Note: we are not using the full list of countries as the purpose of the snapshot test is to only check whether"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    // the page is being rendered correctly."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    component.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(\u0027Ash\u0027),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(\u0027ayush@nus.com\u0027),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(\u0027NUS\u0027),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(\u0027Indian\u0027),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(\u0027Indian\u0027),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(Gender.MALE),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(\u0027I like to party\u0027),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 108
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../../services/auth.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { AuthInfo, Gender, MessageOutput, Nationalities, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormControl, FormGroup } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { from, of, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { catchError, switchMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { NationalitiesService } from \u0027../../../services/nationalities.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  UploadEditProfilePictureModalComponent,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Student profile page."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-profile-page\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-profile-page.component.html\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-profile-page.component.scss\u0027],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfilePageComponent implements OnInit {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  student!: StudentProfile;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  name?: string;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  editForm!: FormGroup;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  nationalities?: string[];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  profilePicLink!: string;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  defaultPictureLink: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  private backendUrl: string \u003d environment.backendUrl;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private nationalitiesService: NationalitiesService,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // populate drop-down menu for nationality list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initNationalities();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadStudentProfile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetches the list of nationalities needed for the drop down box."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  initNationalities(): void {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.nationalitiesService.getNationalities().subscribe((response: Nationalities) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      this.nationalities \u003d response.nationalities;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the student profile details for this page."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentProfile(): void {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authService.getAuthUser().subscribe((auth: AuthInfo) \u003d\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      if (auth.user) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.id \u003d auth.user.id;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic?user\u003d${this.id}`;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // retrieve profile once we have the student\u0027s googleId"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.studentProfileService.getStudentProfile().subscribe((response: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            this.student \u003d response;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d response.name;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            this.initStudentProfileForm(this.student);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(\u0027Error retrieving student profile\u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * Initializes the edit form with the student profile fields fetched from the backend."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  initStudentProfileForm(profile: StudentProfile): void {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(profile.shortName),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(profile.email),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(profile.institute),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(profile.gender),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(profile.moreInfo),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm changes made to the form."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  onSubmit(confirmEditProfile: any): void {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmEditProfile);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   * Opens a modal box to upload/edit profile picture."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  onUploadEdit(): void {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const NO_IMAGE_UPLOADED: number \u003d 600;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const NO_IMAGE_FOUND: number \u003d 404;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentProfileService.getProfilePicture()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // If no picture is found, return null"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            catchError((err: HttpErrorResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              if (err.status !\u003d\u003d NO_IMAGE_FOUND) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                return throwError(status);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return of(null);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Open Modal and wait for user to upload picture"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            switchMap((image: Blob | null) \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              const modalRef: NgbModalRef \u003d this.ngbModal.open(UploadEditProfilePictureModalComponent);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              modalRef.componentInstance.image \u003d image;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return from(modalRef.result);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // If no image is uploaded, throw an error"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            catchError(() \u003d\u003e throwError({"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              error: {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                message: \u0027No image uploaded\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              status: NO_IMAGE_UPLOADED,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            })),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Post the form data"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            switchMap((formData: FormData) \u003d\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return this.studentProfileService.postProfilePicture(formData);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        )"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Display message status"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027Your profile picture has been saved successfully\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          // Force reload"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          const timestamp: number \u003d (new Date()).getTime();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic?${timestamp}\u0026user\u003d${this.id}`;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          // If the error was due to not image uploaded, do nothing"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          if (response.status \u003d\u003d\u003d NO_IMAGE_UPLOADED) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the form data to edit the student profile details."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEditForm(): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentProfileService.updateStudentProfile(this.id, {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      shortName: this.editForm.controls.studentshortname.value,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.editForm.controls.studentprofileemail.value,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      institute: this.editForm.controls.studentprofileinstitute.value,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      nationality: this.editForm.controls.studentnationality.value,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      gender: this.editForm.controls.studentgender.value,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      moreInfo: this.editForm.controls.studentprofilemoreinfo.value,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: this.editForm.controls.existingNationality.value,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      if (response) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Could not save your profile! ${response.error.message}`);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm deleting the profile picture."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(confirmDeleteProfilePicture: any): void {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmDeleteProfilePicture);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the profile picture and the profile picture key"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteProfilePicture(): void {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      googleid: this.id,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentProfileService.deleteProfilePicture(paramMap)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            this.profilePicLink \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            showErrorMessage(`Could not delete your profile picture! ${response.error.message}`);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(): void {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilePicLink \u003d this.defaultPictureLink;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 44,
      "-": 175
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ImageCroppedEvent, ImageCropperComponent } from \u0027ngx-image-cropper\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Student profile page\u0027s modal to upload/edit photo."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-upload-edit-profile-picture-modal\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./upload-edit-profile-picture-modal.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./upload-edit-profile-picture-modal.component.scss\u0027],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class UploadEditProfilePictureModalComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  imageChangedEvent: any \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  formData?: FormData;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(ImageCropperComponent, { static: false }) imageCropper!: ImageCropperComponent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  @Input() image!: Blob | null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(public activeModal: NgbActiveModal) { }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (this.image \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.blobToBase64Image(this.image);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts the blob image into a base64 string to be shown in the image cropper."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  blobToBase64Image(image: Blob): void {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    const reader: FileReader \u003d new FileReader();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    reader.addEventListener(\u0027load\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      if (reader.result) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.imageCropper.imageBase64 \u003d reader.result as string;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    if (image) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      reader.readAsDataURL(image);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   * Populates form data with the image blob."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  populateFormData(file: File): void {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formData \u003d new FormData();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formData.append(\u0027studentprofilephoto\u0027, file, file.name);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   * Uploads the picture that has been newly uploaded/edited."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadPicture(): void {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeModal.close(this.formData);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles event(s) when a file is selected from the user\u0027s file browser."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  fileChangeEvent(event: any): void {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageChangedEvent \u003d event;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    const file: File \u003d event.target.files[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    if (file) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      this.populateFormData(file);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the latest cropped image."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  imageCropped(event: ImageCroppedEvent): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.populateFormData(event.file as File);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rotates the image in the image cropper to the left."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  rotateLeft(): void {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.rotateLeft();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rotates the image in the image cropper to the right."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  rotateRight(): void {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.rotateRight();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flips the image in the image cropper horizontally."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  flipHorizontal(): void {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.flipHorizontal();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flips the image in the image cropper vertically."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  flipVertical(): void {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.flipVertical();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "-": 102
    }
  },
  {
    "path": "src/web/app/user-join-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"!isLoading\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 !userId \u0026\u0026 validUrl\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch3\u003eNot logged in\u003c/h3\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      You are not logged in. Please log in first."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!validUrl || hasJoined\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch3\u003eInvalid course join link\u003c/h3\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"!validUrl\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      Please check that you copied the entire join link URL, or have it resent to you if this message persists."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"hasJoined \u0026\u0026 validUrl\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      The course join link has been used and is no longer valid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  \u003cdiv class\u003d\"card bg-light mx-auto\" style\u003d\"max-width: 800px;\" *ngIf\u003d\"!hasJoined \u0026\u0026 userId \u0026\u0026 validUrl\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch3\u003eConfirm your Google account\u003c/h3\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      You are currently logged in as \u003cstrong\u003e{{ userId }}\u003c/strong\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003eIf this is not you, please log out and log in using your own Google account."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003eIf this is you, please confirm below to complete your registration.\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"text-center\" style\u003d\"margin-top: 20px;\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-success\" (click)\u003d\"joinCourse()\"\u003eRegister for course\u003c/button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 7,
      "-": 27
    }
  },
  {
    "path": "src/web/app/user-join-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinStatus } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorReportComponent } from \u0027./components/error-report/error-report.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027./error-message-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * User join page component."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-user-join-page\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./user-join-page.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./user-join-page.component.scss\u0027],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class UserJoinPageComponent implements OnInit {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  isLoading: boolean \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  hasJoined: boolean \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  validUrl: boolean \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  entityType: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  key: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  institute: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  mac: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  userId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal) {}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      this.entityType \u003d queryParams.entitytype;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      this.key \u003d queryParams.key;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      this.institute \u003d queryParams.instructorinstitution;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.mac \u003d queryParams.mac;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      if (this.institute !\u003d null \u0026\u0026 this.mac \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.validUrl \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.courseService.getJoinCourseStatus(this.key, this.entityType).subscribe((resp: JoinStatus) \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hasJoined \u003d resp.hasJoined;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userId \u003d resp.userId || \u0027\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (resp.status \u003d\u003d\u003d 403) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isLoading \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.requestId \u003d resp.error.requestId;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.errorMessage \u003d resp.error.message;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   * Joins the course."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  joinCourse(): void {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.courseService.joinCourse(this.key, this.entityType, this.institute, this.mac).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.router.navigate([`/web/${this.entityType}`]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.requestId \u003d resp.error.requestId;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.errorMessage \u003d resp.error.message;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 2,
      "madanalogy": 7,
      "-": 65
    }
  },
  {
    "path": "src/web/services/account.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { AccountCreateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { AccountService } from \u0027./account.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027AccountService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  let service: AccountService;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  const id: string \u003d \u0027TestID\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service \u003d TestBed.get(AccountService);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on account endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.getAccount(id);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorid: id,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(\u0027/account\u0027, paramMap);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute POST on account endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const testRequest: AccountCreateRequest \u003d new class implements AccountCreateRequest {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorEmail: string \u003d \u0027testEmail\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorInstitution: string \u003d \u0027testInstitution\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorName: string \u003d \u0027testName\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.createAccount(testRequest);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.post).toHaveBeenCalledWith(\u0027/account\u0027, {}, testRequest);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute DELETE on account endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.deleteAccount(id);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorid: id,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(\u0027/account\u0027, paramMap);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on accounts/search endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.searchAccounts(id);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      searchkey: id,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(\u0027/accounts/search\u0027, paramMap);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute PUT on account/downgrade endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.downgradeAccount(id);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructorid: id,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(\u0027/account/downgrade\u0027, paramMap);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute PUT on account/reset endpoint for student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.resetStudentAccount(id, \u0027testStudentEmail\u0027);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseid: id,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      studentemail: \u0027testStudentEmail\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(\u0027/account/reset\u0027, paramMap);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute PUT on account/reset endpoint for instructor\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.resetInstructorAccount(id, \u0027testInstructorEmail\u0027);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseid: id,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      instructoremail: \u0027testInstructorEmail\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(\u0027/account/reset\u0027, paramMap);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 80,
      "-": 14
    }
  },
  {
    "path": "src/web/services/course.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027./course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027CourseService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: CourseService;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(CourseService);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting all courses as student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getAllCoursesAsStudent();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting all active instructor courses\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getInstructorCoursesThatAreActive();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute PUT when joining course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      key: \u0027123\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorinstitution: \u0027National University of Singapore\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      mac: \u0027ABC123\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.joinCourse(paramMap.key, paramMap.entitytype, paramMap.instructorinstitution, paramMap.mac);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting course section names\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getCourseSectionNames(paramMap.courseid);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE_SECTIONS, paramMap);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting students enrolled in course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getStudentsEnrolledInCourse({"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSE_ENROLL_STUDENTS, paramMap);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 63,
      "madanalogy": 3,
      "-": 14
    }
  },
  {
    "path": "src/web/services/course.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  StudentListResults,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "} from \u0027../app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, CourseArchive, Courses,  HasResponses, JoinStatus, MessageOutput } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseArchiveRequest, CourseCreateRequest, CourseUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles course related logic provision."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class CourseService {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all course data for an instructor by calling API."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllCoursesAsInstructor(courseStatus: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: courseStatus,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get course data by calling API as an instructor."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseAsInstructor(courseId: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets all course data for a student by calling API."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getAllCoursesAsStudent(): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get course data by calling API as a student."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseAsStudent(courseId: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get student courses data of a given google id in masquerade mode by calling API."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get instructor courses data of a given google id in masquerade mode by calling API."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  getInstructorCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    const activeCoursesParamMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    const archivedCoursesParamMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027archived\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.httpRequestService.get(ResourceEndpoints.COURSES, activeCoursesParamMap),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.httpRequestService.get(ResourceEndpoints.COURSES, archivedCoursesParamMap),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        map((vals: Courses[]) \u003d\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "          return {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            courses: vals[0].courses.concat(vals[1].courses),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get active instructor courses."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getInstructorCoursesThatAreActive(): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a course by calling API."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  createCourse(request: CourseCreateRequest): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {};"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.COURSE, paramMap, request);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a course by calling API."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  updateCourse(courseid: string, request: CourseUpdateRequest): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.COURSE, paramMap, request);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes a course by calling API."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(courseid: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   * Changes the archive status of a course by calling API."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  changeArchiveStatus(courseid: string, request: CourseArchiveRequest): Observable\u003cCourseArchive\u003e {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * Bin (soft-delete) a course by calling API."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  binCourse(courseid: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.BIN_COURSE, paramMap);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restore a soft-deleted course by calling API."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreCourse(courseid: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.BIN_COURSE, paramMap);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get the status of whether the entity has joined the course by calling API."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getJoinCourseStatus(regKey: string, entityType: string): Observable\u003cJoinStatus\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      key: regKey,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: entityType,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   * Join a course by calling API."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  joinCourse(regKey: string, entityType: string, institute: string, institutemac: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      key: regKey,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: entityType,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorinstitution: institute,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      mac: institutemac,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder emails to unregistered students."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  remindUnregisteredStudentsForJoin(courseId: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder email to a student."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "  remindStudentForJoin(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder email to an instructor."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  remindInstructorForJoin(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      instructoremail: instructorEmail,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if there are responses for a course (request sent by instructor)."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponsesForCourse(courseId: string): Observable\u003cHasResponses\u003e {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes student from course."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(courseId: string, studentEmail: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.STUDENT, paramsMap);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets a list of course section names."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getCourseSectionNames(courseId: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE_SECTIONS, paramsMap);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Returns a list of students enrolled in a course."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable\u003cStudentListResults\u003e {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE_ENROLL_STUDENTS, paramsMap);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 71,
      "madanalogy": 12,
      "-": 176
    }
  },
  {
    "path": "src/web/services/feedback-questions.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Intent } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027./feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027FeedbackQuestionsService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: FeedbackQuestionsService;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(FeedbackQuestionsService);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting all feedback questions\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: \u0027feedback session\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getFeedbackQuestions({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: paramMap.fsname,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.QUESTIONS, paramMap);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 36,
      "-": 14
    }
  },
  {
    "path": "src/web/services/feedback-questions.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { default as templateQuestions } from \u0027../data/template-questions.json\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqQuestionDetails,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqQuestionDetails,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackQuestionDetails, FeedbackQuestions,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankOptionsQuestionDetails, FeedbackRubricQuestionDetails,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackVisibilityType,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { FeedbackQuestionCreateRequest, FeedbackQuestionUpdateRequest, Intent } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS, DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_CONTRIBUTION_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_MCQ_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_MSQ_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_NUMSCALE_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RANK_OPTIONS_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RUBRIC_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_TEXT_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import { NO_VALUE } from \u0027../types/feedback-response-details\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityControl } from \u0027../types/visibility-control\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityStateMachine } from \u0027./visibility-state-machine\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * A template question."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "export interface TemplateQuestion {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  description: string;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  question: FeedbackQuestion;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles feedback question logic provision."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export class FeedbackQuestionsService {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets allowed feedback paths based on question type as some feedback paths does not make"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * sense under certain question."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllowedFeedbackPaths(type: FeedbackQuestionType): Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    const paths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS, [FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.TEAMS]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.TEAMS, FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.TEAMS, FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.NONE]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.TEAMS, FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF, FeedbackParticipantType.NONE]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.TEAMS, FeedbackParticipantType.OWN_TEAM, FeedbackParticipantType.NONE]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.SELF, FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.TEAMS, FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.NONE]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return paths;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets common feedback paths based on question type."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  getCommonFeedbackPaths(type: FeedbackQuestionType): Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    const paths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS, [FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.SELF, [FeedbackParticipantType.INSTRUCTORS]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.INSTRUCTORS, FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.INSTRUCTORS, [FeedbackParticipantType.INSTRUCTORS]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "          [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        paths.set(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            [FeedbackParticipantType.NONE, FeedbackParticipantType.SELF, FeedbackParticipantType.INSTRUCTORS]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    return paths;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a state machine of visibility settings under {@code giverType} and {@code recipientType}."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  getNewVisibilityStateMachine(giverType: FeedbackParticipantType,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                               recipientType: FeedbackParticipantType): VisibilityStateMachine {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    return new VisibilityStateMachine(giverType, recipientType);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets common feedback visibility settings under a feedback question type."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param visibilityStateMachine the state machine with current giverType and recipientType."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param type the feedback question type."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  getCommonFeedbackVisibilitySettings(visibilityStateMachine: VisibilityStateMachine,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                                      type: FeedbackQuestionType): CommonVisibilitySetting[] {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    let settings: CommonVisibilitySetting[] \u003d [];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        settings.push({"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\","
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u0027Visible to instructors only\u0027,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        settings.push({"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u0027Shown anonymously to recipient and instructors\u0027,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [],"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u0027Shown anonymously to recipient, visible to instructors\u0027,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \"Shown anonymously to recipient and giver/recipient\u0027s team members, visible to instructors\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "              FeedbackVisibilityType.GIVER_TEAM_MEMBERS, FeedbackVisibilityType.RECIPIENT_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            ],"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\","
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "              FeedbackVisibilityType.GIVER_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            ],"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u0027Visible to instructors only\u0027,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u0027Visible to recipient and instructors\u0027,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          visibilitySettings: {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RESPONSE: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_GIVER_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            SHOW_RECIPIENT_NAME: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    // filter common settings based on visibility state"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    // (i.e. some common settings does not make sense under certain state)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    settings \u003d settings.filter((setting: CommonVisibilitySetting) \u003d\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const visibilityType of setting.visibilitySettings.SHOW_RESPONSE) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const visibilityType of setting.visibilitySettings.SHOW_GIVER_NAME) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const visibilityType of setting.visibilitySettings.SHOW_RECIPIENT_NAME) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "          return false;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    return settings;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns whether setting custom feedback visibility is allowed."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "  isCustomFeedbackVisibilitySettingAllowed(type: FeedbackQuestionType): boolean {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new Error(`Unsupported question type: ${type}`);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the model (contains default values) for new question."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "  getNewQuestionModel(type: FeedbackQuestionType): NewQuestionModel {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_TEXT_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.CONTRIB,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_CONTRIBUTION_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.NUMSCALE,"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_NUMSCALE_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        const mcqQuestionDetails: FeedbackMcqQuestionDetails \u003d DEFAULT_MCQ_QUESTION_DETAILS();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        mcqQuestionDetails.numOfMcqChoices \u003d 2;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        mcqQuestionDetails.mcqChoices \u003d [\u0027 \u0027, \u0027 \u0027];"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: mcqQuestionDetails,"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        const msqQuestionDetails: FeedbackMsqQuestionDetails \u003d DEFAULT_MSQ_QUESTION_DETAILS();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        msqQuestionDetails.msqChoices \u003d [\u0027 \u0027, \u0027 \u0027];"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        msqQuestionDetails.minSelectableChoices \u003d NO_VALUE;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        msqQuestionDetails.maxSelectableChoices \u003d NO_VALUE;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.MSQ,"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: msqQuestionDetails,"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        const rankOptionsQuestionDetails: FeedbackRankOptionsQuestionDetails \u003d DEFAULT_RANK_OPTIONS_QUESTION_DETAILS();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        rankOptionsQuestionDetails.maxOptionsToBeRanked \u003d NO_VALUE;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        rankOptionsQuestionDetails.minOptionsToBeRanked \u003d NO_VALUE;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        rankOptionsQuestionDetails.options \u003d [\u0027 \u0027, \u0027 \u0027];"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.RANK_OPTIONS,"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: rankOptionsQuestionDetails,"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.RANK_RECIPIENTS,"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        const rubricQuestionDetails: FeedbackRubricQuestionDetails \u003d DEFAULT_RUBRIC_QUESTION_DETAILS();"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricQuestionDetails.numOfRubricChoices \u003d 4;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricQuestionDetails.rubricChoices \u003d [\u0027Strongly Disagree\u0027, \u0027Disagree\u0027, \u0027Agree\u0027, \u0027Strongly Agree\u0027];"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricQuestionDetails.numOfRubricSubQuestions \u003d 2;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricQuestionDetails.rubricSubQuestions \u003d"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            [\u0027This student participates well in online discussions.\u0027, \u0027This student completes assigned tasks on time.\u0027];"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricQuestionDetails.rubricDescriptions \u003d ["
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "          [\u0027Rarely or never responds.\u0027, \u0027Occasionally responds, but never initiates discussions.\u0027,"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Takes part in discussions and sometimes initiates discussions.\u0027,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Initiates discussions frequently, and engages the team.\u0027],"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "          [\u0027Rarely or never completes tasks.\u0027, \u0027Often misses deadlines.\u0027, \u0027Occasionally misses deadlines.\u0027,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Tasks are always completed before the deadline.\u0027]];"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.RUBRIC,"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: rubricQuestionDetails,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.CONSTSUM_OPTIONS,"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_CONSTSUM_OPTIONS_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "          questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "          questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "          questionDetails: DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS(),"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "          giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "          recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "          showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "          showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "          showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new Error(`Unsupported question type ${type}`);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets feedback questions."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getFeedbackQuestions(queryParams: {courseId: string, feedbackSessionName: string, intent: Intent}):"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      Observable\u003cFeedbackQuestions\u003e {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: queryParams.intent,"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: queryParams.feedbackSessionName,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.QUESTIONS, paramMap);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets template questions."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "  getTemplateQuestions(): TemplateQuestion[] {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    return templateQuestions;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a feedback question by calling API."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "  createFeedbackQuestion(courseId: string, feedbackSessionName: string,"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                         request: FeedbackQuestionCreateRequest): Observable\u003cFeedbackQuestion\u003e {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.QUESTION, paramMap, request);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves a feedback question by calling API."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "  saveFeedbackQuestion(feedbackQuestionId: string, request: FeedbackQuestionUpdateRequest):"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "      Observable\u003cFeedbackQuestion\u003e {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { questionid: feedbackQuestionId };"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.QUESTION, paramMap, request);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes a feedback question"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteFeedbackQuestion(feedbackQuestionId: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { questionid: feedbackQuestionId };"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.QUESTION, paramMap);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": " * Type represents the common visibility setting."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "export interface CommonVisibilitySetting {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "  visibilitySettings: {[TKey in VisibilityControl]: FeedbackVisibilityType[]};"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": " * The model for new question."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "export interface NewQuestionModel {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "  questionBrief: string;"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "  questionDescription: string;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "  questionType: FeedbackQuestionType;"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "  questionDetails: FeedbackQuestionDetails;"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "  giverType: FeedbackParticipantType;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "  recipientType: FeedbackParticipantType;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting;"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "  customNumberOfEntitiesToGiveFeedbackTo?: number;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "  showResponsesTo: FeedbackVisibilityType[];"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "  showGiverNameTo: FeedbackVisibilityType[];"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "  showRecipientNameTo: FeedbackVisibilityType[];"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 27,
      "-": 566
    }
  },
  {
    "path": "src/web/services/feedback-responses.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackConstantSumResponseDetails,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackContributionResponseDetails,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqResponseDetails,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqResponseDetails,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackNumericalScaleResponseDetails,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankOptionsResponseDetails,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankRecipientsResponseDetails,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponse,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponseDetails, FeedbackRubricResponseDetails,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackTextResponseDetails,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackResponseCreateRequest, FeedbackResponseUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_CONSTSUM_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_CONTRIBUTION_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_MCQ_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_MSQ_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_NUMSCALE_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RANK_OPTIONS_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RANK_RECIPIENTS_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_RUBRIC_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_TEXT_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  CONTRIBUTION_POINT_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  RANK_OPTIONS_ANSWER_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED, RUBRIC_ANSWER_NOT_CHOSEN,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/feedback-response-details\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles feedback response settings provision."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export class FeedbackResponsesService {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the default feedback response details based on {@code questionType}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  getDefaultFeedbackResponseDetails(questionType: FeedbackQuestionType): FeedbackResponseDetails {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (questionType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_TEXT_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_RANK_OPTIONS_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_RANK_RECIPIENTS_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_CONTRIBUTION_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_NUMSCALE_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_MCQ_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_MSQ_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_RUBRIC_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_CONSTSUM_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return DEFAULT_CONSTSUM_RESPONSE_DETAILS();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new Error(`Unknown question type ${questionType}`);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks whether a feedback response details is empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  isFeedbackResponseDetailsEmpty(questionType: FeedbackQuestionType, details: FeedbackResponseDetails): boolean {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (questionType) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.TEXT:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        const textDetails: FeedbackTextResponseDetails \u003d details as FeedbackTextResponseDetails;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return textDetails.answer.length \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_OPTIONS:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        const rankOptionsDetails: FeedbackRankOptionsResponseDetails \u003d details as FeedbackRankOptionsResponseDetails;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        const numberOfOptionsRanked: number \u003d rankOptionsDetails.answers"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            .filter((rank: number) \u003d\u003e rank !\u003d\u003d RANK_OPTIONS_ANSWER_NOT_SUBMITTED).length;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return numberOfOptionsRanked \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RANK_RECIPIENTS:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        const rankRecipientsDetails: FeedbackRankRecipientsResponseDetails \u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            details as FeedbackRankRecipientsResponseDetails;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        return rankRecipientsDetails.answer \u003d\u003d\u003d RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONTRIB:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        const contributionDetails: FeedbackContributionResponseDetails \u003d details as FeedbackContributionResponseDetails;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return contributionDetails.answer \u003d\u003d\u003d CONTRIBUTION_POINT_NOT_SUBMITTED;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.NUMSCALE:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        const numScaleDetails: FeedbackNumericalScaleResponseDetails \u003d details as FeedbackNumericalScaleResponseDetails;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return numScaleDetails.answer \u003d\u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MCQ:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        const mcqDetails: FeedbackMcqResponseDetails \u003d details as FeedbackMcqResponseDetails;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return mcqDetails.answer.length \u003d\u003d\u003d 0 \u0026\u0026 !mcqDetails.isOther;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.MSQ:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        const msqDetails: FeedbackMsqResponseDetails \u003d details as FeedbackMsqResponseDetails;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return msqDetails.answers.length \u003d\u003d\u003d 0 \u0026\u0026 !msqDetails.isOther;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.RUBRIC:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        const rubricDetails: FeedbackRubricResponseDetails \u003d details as FeedbackRubricResponseDetails;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return rubricDetails.answer.length \u003d\u003d\u003d 0"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            || rubricDetails.answer.every((val: number) \u003d\u003e val \u003d\u003d\u003d RUBRIC_ANSWER_NOT_CHOSEN);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_OPTIONS:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        const constumDetails: FeedbackConstantSumResponseDetails \u003d details as FeedbackConstantSumResponseDetails;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return constumDetails.answers.length \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      case FeedbackQuestionType.CONSTSUM_RECIPIENTS:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        const constumRecipientsDetails: FeedbackConstantSumResponseDetails \u003d"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            details as FeedbackConstantSumResponseDetails;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        return constumRecipientsDetails.answers.length \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a feedback response by calling API."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  createFeedbackResponse(questionId: string, additionalParams: { [key: string]: string } \u003d {},"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                         request: FeedbackResponseCreateRequest): Observable\u003cFeedbackResponse\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.RESPONSE, {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: questionId,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      ...additionalParams,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }, request);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a feedback response by calling API."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  updateFeedbackResponse(responseId: string, additionalParams: { [key: string]: string } \u003d {},"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                         request: FeedbackResponseUpdateRequest): Observable\u003cFeedbackResponse\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.RESPONSE, {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      responseid: responseId,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      ...additionalParams,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }, request);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 3,
      "-": 141
    }
  },
  {
    "path": "src/web/services/feedback-sessions.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { SessionsTableRowModel } from \u0027../app/components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "} from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Intent } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027./feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027FeedbackSessionsService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: FeedbackSessionsService;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let model: SessionsTableRowModel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(FeedbackSessionsService);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    model \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSession: {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        timeZone: \u0027\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        instructions: \u0027\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        submissionStartTimestamp: 0,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        submissionEndTimestamp: 0,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        gracePeriod: 0,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        sessionVisibleSetting: SessionVisibleSetting.CUSTOM,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        submissionStatus: FeedbackSessionSubmissionStatus.CLOSED,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        isClosingEmailEnabled: false,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        isPublishedEmailEnabled: false,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        createdAtTimestamp: 0,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call post when publishing\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.publishFeedbackSession("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.SESSION_PUBLISH, paramMap);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call delete when unpublishing\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.unpublishFeedbackSession("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.SESSION_PUBLISH, paramMap);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call get when loading session statistics\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.loadSessionStatistics("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.SESSION_STATS, paramMap);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call get when retrieving feedback session results\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: \u0027test feedback session\u0027,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getFeedbackSessionsResult({"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      feedbackSessionName: paramMap.fsname,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.RESULT, paramMap);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call put when moving session to recycle bin\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: \u0027test feedback session\u0027,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.moveSessionToRecycleBin(paramMap.courseid, paramMap.fsname);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.BIN_SESSION, paramMap);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call delete when removing session from recycle bin\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: \u0027test feedback session\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.deleteSessionFromRecycleBin(paramMap.courseid, paramMap.fsname);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.BIN_SESSION, paramMap);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call delete when deleting session from recycle bin\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: \u0027test feedback session\u0027,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.deleteFeedbackSession(paramMap.courseid, paramMap.fsname);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.SESSION, paramMap);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 133,
      "-": 14
    }
  },
  {
    "path": "src/web/services/feedback-sessions.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { default as templateSessions } from \u0027../data/template-sessions.json\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessions, FeedbackSessionStats, FeedbackSessionSubmittedGiverSet,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  HasResponses,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  OngoingSessions, SessionResults,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionCreateRequest,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionStudentRemindRequest,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  FeedbackSessionUpdateRequest, Intent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * A template session."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "export interface TemplateSession {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  questions: FeedbackQuestion[];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles sessions related logic provision."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "export class FeedbackSessionsService {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets template sessions."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  getTemplateSessions(): TemplateSession[] {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    return templateSessions;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Retrieves a feedback session by calling API."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getFeedbackSession(queryParams: {courseId: string, feedbackSessionName: string, intent: Intent}):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    // load feedback session"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: queryParams.intent,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: queryParams.feedbackSessionName,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSION, paramMap);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a feedback session by calling API."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  createFeedbackSession(courseId: string, request: FeedbackSessionCreateRequest): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: courseId };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.SESSION, paramMap, request);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a feedback session by calling API."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  updateFeedbackSession(courseId: string, feedbackSessionName: string, request: FeedbackSessionUpdateRequest):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: courseId, fsname: feedbackSessionName };"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.SESSION, paramMap, request);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes a feedback session by calling API."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: courseId, fsname: feedbackSessionName };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.SESSION, paramMap);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all ongoing session by calling API."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  getOngoingSessions(startTime: number, endTime: number): Observable\u003cOngoingSessions\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      starttime: String(startTime),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      endtime: String(endTime),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSIONS_ONGOING, paramMap);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions for the instructor by calling API."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsForInstructor(courseId?: string): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    let paramMap: { [key: string]: string };"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (courseId !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        isinrecyclebin: \u0027false\u0027,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions in the recycle bin for the instructor by calling API."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsInRecycleBinForInstructor(): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      isinrecyclebin: \u0027true\u0027,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions for the student by calling API."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsForStudent(courseId?: string): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    let paramMap: { [key: string]: string };"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    if (courseId !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSIONS, paramMap);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if there are responses for a specific question in a feedback session (request sent by instructor)."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponsesForQuestion(questionId: string): Observable\u003cHasResponses\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: questionId,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if there is response of a student for a feedback session (request sent by student)."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  hasStudentResponseForFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cHasResponses\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends e-mails to remind students who have not submitted their feedback."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  remindFeedbackSessionSubmissionForStudent("
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: string, feedbackSessionName: string, request: FeedbackSessionStudentRemindRequest)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.SESSION_REMIND_SUBMISSION, paramMap, request);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends e-mails to remind students on the published results link."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  remindResultsLinkToStudents("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: string, feedbackSessionName: string, request: FeedbackSessionStudentRemindRequest)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.SESSION_REMIND_RESULT, paramMap, request);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a set of givers that has given at least one response in the feedback session."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getFeedbackSessionSubmittedGiverSet(queryParams: { courseId: string, feedbackSessionName: string }):"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      Observable\u003cFeedbackSessionSubmittedGiverSet\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: queryParams.feedbackSessionName,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSION_SUBMITTED_GIVER_SET, paramMap);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * publishes a feedback session."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  publishFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.SESSION_PUBLISH, paramMap);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  unpublishFeedbackSession(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.SESSION_PUBLISH, paramMap);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Load session statistics."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  loadSessionStatistics(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSessionStats\u003e {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.SESSION_STATS, paramMap);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Retrieves the results for a feedback session."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getFeedbackSessionsResult(queryParams: {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    courseId: string,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    feedbackSessionName: string,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    intent: Intent"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    questionId?: string,"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    groupBySection?: string,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }): Observable\u003cSessionResults\u003e {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: queryParams.feedbackSessionName,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      intent: queryParams.intent,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.questionId) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.questionid \u003d queryParams.questionId;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.groupBySection) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.frgroupbysection \u003d queryParams.groupBySection;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.RESULT, paramMap);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Soft delete a session by moving it to the recycle bin."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  moveSessionToRecycleBin(courseId: string, feedbackSessionName: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.BIN_SESSION, paramMap);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Removes a session from the recycle bin."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteSessionFromRecycleBin(courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.BIN_SESSION, paramMap);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 124,
      "-": 177
    }
  },
  {
    "path": "src/web/services/instructor.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Instructor, Instructors, JoinState } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorCreateRequest, InstructorPermissionRole } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027./instructor.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import DoneCallback \u003d jest.DoneCallback;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "const defaultRequestBody: InstructorCreateRequest \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  id: \u0027123\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  name: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  email: \u0027johndoe@gmail.com\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  displayName: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  isDisplayedToStudent: true,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "} as InstructorCreateRequest;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "const defaultInstructors: Instructors \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  instructors: [{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    courseId: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    courseId: \u0027CS3282\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "describe(\u0027InstructorService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: InstructorService;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(InstructorService);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting instructors for a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.loadInstructors({ courseId: \u0027CS3281\u0027 });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTORS, paramMap);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute POST when creating an instructor for a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.createInstructor({ courseId: \u0027CS3281\u0027, requestBody: defaultRequestBody });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTOR, paramMap, defaultRequestBody);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute PUT when updating an instructor for a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.updateInstructor({ courseId: \u0027CS3281\u0027, requestBody: defaultRequestBody });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTOR, paramMap, defaultRequestBody);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute DELETE when deleting an instructor for a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.deleteInstructor({ courseId: \u0027CS3281\u0027, instructorEmail: \u0027John Doe\u0027 });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructoremail: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTOR, paramMap);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should send the correct course id\u0027, (done: DoneCallback) \u003d\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService.get.mockImplementation((endpoint: string, paramMap: { [key: string]: string }) \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(endpoint).toEqual(ResourceEndpoints.INSTRUCTORS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      const courseid: string \u003d paramMap.courseid;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return of\u003cInstructors\u003e({"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        instructors: defaultInstructors.instructors"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            .filter((instructor: Instructor) \u003d\u003e instructor.courseId \u003d\u003d\u003d courseid),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.loadInstructors({ courseId: \u0027CS3281\u0027 }).subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(instructors.instructors).toEqual(defaultInstructors.instructors"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .filter((instructor: Instructor) \u003d\u003e instructor.courseId \u003d\u003d\u003d \u0027CS3281\u0027));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      done();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call get when loading instructor privileges\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.loadInstructorPrivilege({ courseId: paramMap.courseid });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTOR_PRIVILEGE, paramMap);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should call put when updating instructor privileges\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructoremail: \u0027johndoe@gmail.com\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.updateInstructorPrivilege({"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorEmail: paramMap.instructoremail,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      requestBody: {},"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTOR_PRIVILEGE, paramMap, {});"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 141
    }
  },
  {
    "path": "src/web/services/instructor.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Instructor, InstructorPrivilege, Instructors } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorCreateRequest, InstructorPrivilegeUpdateRequest, Intent } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Handles instructor related logic provision."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export class InstructorService {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get a list of instructors of a course by calling API."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  loadInstructors(queryParams: { courseId: string, intent?: Intent }): Observable\u003cInstructors\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.intent) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.intent \u003d queryParams.intent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.INSTRUCTORS, paramMap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Creates an instructor in a course by calling API."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  createInstructor(queryParams: { courseId: string, requestBody: InstructorCreateRequest }): Observable\u003cInstructor\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.INSTRUCTOR, paramMap, queryParams.requestBody);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Updates an instructor in a course by calling API."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  updateInstructor(queryParams: { courseId: string, requestBody: InstructorCreateRequest }): Observable\u003cInstructor\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.INSTRUCTOR, paramMap, queryParams.requestBody);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes an instructor from a course by calling API."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteInstructor(queryParams: { courseId: string, instructorEmail: string }): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructoremail: queryParams.instructorEmail,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.INSTRUCTOR, paramMap);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  loadInstructorPrivilege(queryParams: {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    courseId: string,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    sectionName?: string,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    feedbackSessionName?: string,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    instructorRole?: string,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    instructorEmail?: string,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }):"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    Observable\u003cInstructorPrivilege\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.feedbackSessionName) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.fsname \u003d queryParams.feedbackSessionName;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.sectionName) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.sectionname \u003d queryParams.sectionName;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.instructorRole) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.sectionname \u003d queryParams.instructorRole;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.instructorEmail) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramMap.instructorEmail \u003d queryParams.instructorEmail;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.INSTRUCTOR_PRIVILEGE, paramMap);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Updates the privilege of an instructor for a specified course."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  updateInstructorPrivilege(queryParams: {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    courseId: string,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    instructorEmail: string,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    requestBody: InstructorPrivilegeUpdateRequest }): Observable\u003cInstructorPrivilege\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: any \u003d {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructoremail: queryParams.instructorEmail,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.INSTRUCTOR_PRIVILEGE, paramMap, queryParams.requestBody);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 113
    }
  },
  {
    "path": "src/web/services/masquerade-mode.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MasqueradeModeService } from \u0027./masquerade-mode.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027MasqueradeModeService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  let service: MasqueradeModeService;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        MasqueradeModeService,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service \u003d TestBed.get(MasqueradeModeService);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should be defined\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(service.getMasqueradeUser()).toBeDefined();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should set masquerade user\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const testUser: string \u003d \u0027test\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.setMasqueradeUser(testUser);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(service.getMasqueradeUser()).toEqual(testUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should be false when no user is set\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(service.isInMasqueradingMode()).toBe(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should be true when user is set\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const testUser: string \u003d \u0027test\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.setMasqueradeUser(testUser);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(service.isInMasqueradingMode()).toBe(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 29,
      "-": 11
    }
  },
  {
    "path": "src/web/services/nationalities.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import DoneCallback \u003d jest.DoneCallback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Nationalities } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { NationalitiesService } from \u0027./nationalities.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "describe(\u0027NationalitiesService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: NationalitiesService;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(NationalitiesService);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getNationalities();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.NATIONALITIES);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should return nationalities\u0027, (done: DoneCallback) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const mockNationalities: Nationalities \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      nationalities: [\u0027Singapore\u0027],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService.get.mockReturnValue(of\u003cNationalities\u003e(mockNationalities));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getNationalities().subscribe((nationalities: Nationalities) \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(nationalities).toEqual(mockNationalities);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      done();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 52
    }
  },
  {
    "path": "src/web/services/nationalities.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Nationalities } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Handles nationalities related logic provision."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export class NationalitiesService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get a list of nationalities by calling API."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getNationalities(): Observable\u003cNationalities\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.NATIONALITIES);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 23
    }
  },
  {
    "path": "src/web/services/navigation.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027./navigation.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027NavigationService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    imports: ["
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      MatSnackBarModule,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    const service: NavigationService \u003d TestBed.get(NavigationService);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should return an encoded param string upon calling encodeParams\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    const service: NavigationService \u003d TestBed.get(NavigationService);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(service.encodeParams({ courseId: \u0027#123?123\u0027 })).toEqual(\u0027?courseId\u003d%23123%3F123\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "hcwong": 5
    }
  },
  {
    "path": "src/web/services/navigation.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MasqueradeModeService } from \u0027./masquerade-mode.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027./status-message.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles navigation to different URLs and setting status messages immediately afterwards."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Note that this is only effective for internal URLs as it uses Angular routing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class NavigationService {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "              private masqueradeModeService: MasqueradeModeService) {}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  encodeParams(params: {[key: string]: string}): string {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    if (Object.values(params).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      return \u0027\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    return `?${Object.keys(params).map(((key: string): string \u003d\u003e `${key}\u003d${encodeURIComponent(params[key])}`))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      .join(\u0027\u0026\u0027)}`;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "   * Navigates to the selected URL with URL param encoding"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  navigateByURLWithParamEncoding(router: Router,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    urlWithoutParams: string, params: {[key: string]: string}): Promise\u003cBoolean\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    return router.navigateByUrl(`${urlWithoutParams}${this.encodeParams(params)}`);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   * Navigates to the selected URL and shows an error message afterwards."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  navigateWithErrorMessage(router: Router, url: string, message: string): void {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    router.navigateByUrl(url).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * Navigates to the selected URL and shows a success message afterwards."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  navigateWithSuccessMessage(router: Router, url: string, message: string, params: {[key: string]: string} \u003d {}): void {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    this.navigateByURLWithParamEncoding(router, url, params).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Navigates to the selected URL preserving the previous params and shows a success message afterwards."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  navigateWithSuccessMessagePreservingParams(router: Router, url: string, message: string): void {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    router.navigate([url], { queryParamsHandling: \u0027preserve\u0027 }).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Opens a new browser window."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  openNewWindow(urlStr: string, params: {[key: string]: string} \u003d {}): void {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    const url: URL \u003d new URL(`${urlStr}${this.encodeParams(params)}`);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.masqueradeModeService.isInMasqueradingMode()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      url.searchParams.set(\u0027user\u0027, this.masqueradeModeService.getMasqueradeUser());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    window.open(url.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 52,
      "hcwong": 20
    }
  },
  {
    "path": "src/web/services/student-profile.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { StudentProfileUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027./student-profile.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentProfileService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  let service: StudentProfileService;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service \u003d TestBed.get(StudentProfileService);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on student profile endpoint with params\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const studentEmail: string \u003d \u0027test@123.com\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const courseId: string \u003d \u0027test-course\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.getStudentProfile(studentEmail, courseId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE, paramsMap);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on student profile endpoint without email\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const studentEmail: string \u003d \u0027test@123.com\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.getStudentProfile(studentEmail, \u0027\u0027);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on student profile endpoint without params\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.getStudentProfile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute GET on student profile picture endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.getProfilePicture();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, \u0027blob\u0027);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute PUT on student profile endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const googleId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const requestBody: StudentProfileUpdateRequest \u003d new class implements StudentProfileUpdateRequest {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      email: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      existingNationality: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      gender: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      institute: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      moreInfo: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      nationality: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      shortName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      googleid: googleId,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.updateStudentProfile(googleId, requestBody);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE, paramsMap, requestBody);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute POST on student profile picture endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const formData: FormData \u003d new FormData();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.postProfilePicture(formData);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.post).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, formData);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  it(\u0027should execute DELETE on student profile picture endpoint\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    service.deleteProfilePicture(paramsMap);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    expect(spyHttpRequestService.delete).toHaveBeenCalledWith(ResourceEndpoints.STUDENT_PROFILE_PICTURE, paramsMap);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 77,
      "-": 14
    }
  },
  {
    "path": "src/web/services/student-profile.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MessageOutput, StudentProfile } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles student profile related logic provision."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfileService {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a student profile by calling API."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * If both studentEmail and courseId are provided, it returns profile of that student."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * If either one is missing, it returns the profile of the current login student."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentProfile(studentEmail?: string, courseId?: string): Observable\u003cStudentProfile\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentEmail \u0026\u0026 courseId) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        studentemail: studentEmail,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE, paramsMap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a student profile by calling API."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  updateStudentProfile(googleId: string, requestBody: StudentProfileUpdateRequest)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      googleid: googleId,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.STUDENT_PROFILE, paramsMap, requestBody);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets the profile picture as blob image."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getProfilePicture(): Observable\u003cBlob\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, \u0027blob\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Posts the profile picture."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  postProfilePicture(formData: FormData): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, formData);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes the profile picture and the profile picture key"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteProfilePicture(paramMap: { [key: string]: string }): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.STUDENT_PROFILE_PICTURE, paramMap);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 24,
      "-": 41
    }
  },
  {
    "path": "src/web/services/student.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { StudentUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027./student.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "const defaultStudentUpdateRequest: StudentUpdateRequest \u003d {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  name: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  email: \u0027johndoe@gmail.com\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  team: \u0027\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  section: \u0027\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  comments: \u0027\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  isSessionSummarySendEmail: true,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: StudentService;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(StudentService);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute PUT when updating students in a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      studentemail: \u0027johndoe@gmail.com\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.updateStudent({"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      studentEmail: paramMap.studentemail,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      requestBody: defaultStudentUpdateRequest,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .toHaveBeenCalledWith(ResourceEndpoints.STUDENT, paramMap, defaultStudentUpdateRequest);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute DELETE when deleting all students in a course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.deleteAllStudentsFromCourse({"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.delete)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .toHaveBeenCalledWith(ResourceEndpoints.STUDENTS, paramMap);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when loading students in a course as CSV\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const responseType: string \u003d \u0027text\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.loadStudentListAsCsv({"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseId: paramMap.courseid,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .toHaveBeenCalledWith(ResourceEndpoints.STUDENTS_CSV, paramMap, responseType);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when searching for students\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchkey: \u0027\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchstudents: \u0027\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchfeedbacksessiondata: \u0027\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.searchForStudents({"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchKey: paramMap.searchkey,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchStudents: paramMap.searchstudents,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchFeedbackSessionData: paramMap.searchfeedbacksessiondata,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .toHaveBeenCalledWith(ResourceEndpoints.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH, paramMap);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 90,
      "-": 14
    }
  },
  {
    "path": "src/web/services/student.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { SearchResult } from \u0027../app/pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { MessageOutput, Student, Students } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { StudentsEnrollRequest, StudentUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles student related logic provision."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentService {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get a list of students of a course by calling API."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * If teamName is provided, only students in that team will be returned."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * Otherwise, all students in the course will be returned."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getStudentsFromCourse(queryParams: { courseId: string, teamName?: string }): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (queryParams.teamName) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      paramsMap.teamname \u003d queryParams.teamName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets student of a course by calling API."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003e If both studentEmail and regKey are not provided, get the student of current logged-in user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseId courseId of the course"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param studentEmail if provided, get the student of the course of the given email"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param regKey if provided, get the student of the course with regKey"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudent(courseId: string, studentEmail?: string, regKey?: string): Observable\u003cStudent\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentEmail) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      paramsMap.studentemail \u003d studentEmail;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    if (regKey) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      paramsMap.key \u003d regKey;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT, paramsMap);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Updates the details of a student in a course by calling API."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  updateStudent(queryParams: { courseId: string, studentEmail: string, requestBody: StudentUpdateRequest }):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      studentemail: queryParams.studentEmail,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.STUDENT, paramsMap, queryParams.requestBody);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   * Enroll a list of students to a course by calling API."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Students who are enrolled successfully will be returned."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  enrollStudents(courseId: string, requestBody: StudentsEnrollRequest): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.STUDENTS, paramsMap, requestBody);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all students in a course and team as a student by calling API."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentsFromCourseAndTeam(courseId: string, teamName: string): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      teamname: teamName,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes all students in a course by calling API."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteAllStudentsFromCourse(queryParams: { courseId: string }): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.STUDENTS, paramsMap);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Loads list of students from a course in CSV format by calling API."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  loadStudentListAsCsv(queryParams: { courseId: string }): Observable\u003cstring\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: queryParams.courseId,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const responseType: string \u003d \u0027text\u0027;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Search for students based on input parameters by calling API."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  searchForStudents(queryParams: { searchKey: string, searchStudents: string, searchFeedbackSessionData: string}):"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      Observable\u003cSearchResult\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchkey: queryParams.searchKey,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchstudents: queryParams.searchStudents,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      searchfeedbacksessiondata: queryParams.searchFeedbackSessionData,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH, paramsMap);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 58,
      "-": 69
    }
  },
  {
    "path": "src/web/test-helpers/mock-tinymce-uuid.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Mock `Date` and `Math.random` such that TinyMCE generates a fixed UUID."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Refer to https://github.com/TEAMMATES/teammates/pull/9910#issuecomment-574006203 for more details."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "export const mockTinyMceUuid: () \u003d\u003e void \u003d (): void \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const mockDate: Date \u003d new Date(\u00272020\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const realDate: DateConstructor \u003d Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const realMath: Math \u003d Math;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Date \u003d jest.fn(() \u003d\u003e mockDate) as any;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Math.random \u003d jest.fn(() \u003d\u003e 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  afterAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Date \u003d realDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Math \u003d realMath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 19
    }
  },
  {
    "path": "src/web/types/form-validator.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the root FormValidator object of all form fields."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "export enum FormValidator {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Max length for the \u0027Course ID\u0027 field."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  COURSE_ID_MAX_LENGTH \u003d 40,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Max length for the \u0027Course Name\u0027 field."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  COURSE_NAME_MAX_LENGTH \u003d 64,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * Max length for the \u0027Student Name` field."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  STUDENT_NAME_MAX_LENGTH \u003d 100,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * Max length for the \u0027Section Name` field."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  SECTION_NAME_MAX_LENGTH \u003d 60,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   * Max length for the \u0027Team Name` field."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  TEAM_NAME_MAX_LENGTH \u003d 60,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   * Max length for the \u0027E-mail Address` field."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  EMAIL_MAX_LENGTH \u003d 254,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 10,
      "-": 24
    }
  }
]
